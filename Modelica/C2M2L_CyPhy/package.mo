within ;
package C2M2L_CyPhy "C2M2L Open Modelica with C2M2L_Ext wrappers"
  extends Modelica.Icons.Package;

import SI = Modelica.SIunits;
import Modelica.Constants.pi;


  package C2M2L_Delivered_Component_Implementations
  "Contains delivered component implementations organized by vehicle sub-system.  Does not contain instance information"
    extends Modelica.Icons.Package;

    package Amphibious
        extends Modelica.Icons.Package;

      package Bilge_Pump
        extends Modelica.Icons.Package;

        package Tests
        extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Test_Bench_Bilge_Electrical
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-24,-80},{-4,-60}})));
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            replaceable Bilge_Pump_Electrical
              bilge_Pump(
              v_nom=12,
              rotating_inertia_eMotor=0.001,
              pow_max=500,
              rotating_inertia=0.001,
              efficiency_characteristic=[0,0.7],
              N_ref=209.43951023932,
              On_Trigger_Pressure=101500,
              Off_Trigger_Pressure=100800)
                         constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Bilge_Pump.Bilge_Pump_Electrical
              annotation (Placement(transformation(extent={{-20,-34},{20,26}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage constantVoltage(V=12)
              annotation (Placement(transformation(
                  extent={{-10,10},{10,-10}},
                  rotation=0,
                  origin={0,46})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={38,32})));
            Modelica.Fluid.Sources.Boundary_pT In_Pressure_Source(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              use_p_in=true,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
            Modelica.Fluid.Sources.Boundary_pT Out_Pressure_Source(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              use_p_in=false,
              p=118000,
              T=293.15) annotation (Placement(transformation(extent={{60,-20},{40,0}})));
            Modelica.Blocks.Sources.TimeTable
                                         ramp1(offset=100000, table=[0,760; 5,760; 10,
                  1500; 15,1500; 20,760; 25,760; 30,1500; 35,1500])
              annotation (Placement(transformation(extent={{-100,-14},{-80,6}})));
            inner C2M2L_OM.MSL_Extend.Environments.C2M2L_Environment
                                                                  env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
          equation

            connect(world.frame_b,cutTorque. frame_a) annotation (Line(
                points={{-40,-70},{-24,-70}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(bilge_Pump.pin_p, constantVoltage.p) annotation (Line(
                points={{-20,8},{-30,8},{-30,46},{-10,46}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(bilge_Pump.pin_n, ground.p) annotation (Line(
                points={{20,8},{28,8},{28,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(constantVoltage.n, ground.p) annotation (Line(
                points={{10,46},{28,46},{28,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(In_Pressure_Source.ports[1], bilge_Pump.fluid_in) annotation (Line(
                points={{-40,-10},{-30,-10},{-30,-22},{-20,-22}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(Out_Pressure_Source.ports[1], bilge_Pump.fluid_out) annotation (Line(
                points={{40,-10},{30,-10},{30,-22},{20,-22}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ramp1.y, In_Pressure_Source.p_in) annotation (Line(
                points={{-79,-4},{-70,-4},{-70,-2},{-62,-2}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=100),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Bilge_Electrical_Instance_Test.mos"
                "Bilge_Electrical_Instance_Test"));
          end Test_Bench_Bilge_Electrical;

          model Test_Bench_Bilge_Electrical_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-24,-80},{-4,-60}})));
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Bilge_Pump.Bilge_Pump_Electrical
              bilge_Pump(
              v_nom=12,
              rotating_inertia_eMotor=0.001,
              pow_max=500,
              rotating_inertia=0.001,
              efficiency_characteristic=[0,0.7],
              N_ref=209.43951023932,
              On_Trigger_Pressure=101500,
              Off_Trigger_Pressure=100800)
                         constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Bilge_Pump.Bilge_Pump_Electrical
              annotation (Placement(transformation(extent={{-20,-34},{20,26}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage constantVoltage(V=12)
              annotation (Placement(transformation(
                  extent={{-10,10},{10,-10}},
                  rotation=0,
                  origin={0,46})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={38,32})));
            Modelica.Fluid.Sources.Boundary_pT In_Pressure_Source(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              use_p_in=true,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
            Modelica.Fluid.Sources.Boundary_pT Out_Pressure_Source(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              use_p_in=false,
              p=118000,
              T=293.15) annotation (Placement(transformation(extent={{60,-20},{40,0}})));
            Modelica.Blocks.Sources.TimeTable
                                         ramp1(offset=100000, table=[0,760; 5,760; 10,
                  1500; 15,1500; 20,760; 25,760; 30,1500; 35,1500])
              annotation (Placement(transformation(extent={{-100,-14},{-80,6}})));
          equation

            connect(world.frame_b,cutTorque. frame_a) annotation (Line(
                points={{-40,-70},{-24,-70}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cutTorque.frame_b, bilge_Pump.mount_01) annotation (Line(
                points={{-4,-70},{0,-70},{0,-34}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(bilge_Pump.pin_p, constantVoltage.p) annotation (Line(
                points={{-20,10},{-30,10},{-30,46},{-10,46}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(bilge_Pump.pin_n, ground.p) annotation (Line(
                points={{20,10},{28,10},{28,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(constantVoltage.n, ground.p) annotation (Line(
                points={{10,46},{28,46},{28,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(In_Pressure_Source.ports[1], bilge_Pump.fluid_in) annotation (Line(
                points={{-40,-10},{-20,-10}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(Out_Pressure_Source.ports[1], bilge_Pump.fluid_out) annotation (Line(
                points={{40,-10},{20,-10}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ramp1.y, In_Pressure_Source.p_in) annotation (Line(
                points={{-79,-4},{-70,-4},{-70,-2},{-62,-2}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=100),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Bilge_Electrical_Instance_Test.mos"
                "Bilge_Electrical_Instance_Test"));
          end Test_Bench_Bilge_Electrical_original;

          model Test_Bench_Bilge_Hydraulic
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            Modelica.Blocks.Sources.Ramp     const1(
              duration=10,
              startTime=5,
              height=75)
              annotation (Placement(transformation(extent={{-100,60},{-80,80}})));
            Modelica.Mechanics.Rotational.Sources.Speed speed(exact=true)
              annotation (Placement(transformation(extent={{-70,60},{-50,80}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-60,-90},{-40,-70}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-24,-90},{-4,-70}})));
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
                P_constant=10000000)
              annotation (Placement(transformation(extent={{-56,30},{-36,50}})));

            replaceable Bilge_Pump_Hydraulic bilge_Pump_Hydraulic constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Bilge_Pump.Bilge_Pump_Hydraulic
              annotation (Placement(transformation(extent={{-20,-30},{20,30}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Lossy
              test_hydraulic_pump(leakage=0.01)
              annotation (Placement(transformation(extent={{10,30},{-10,50}})));
            Modelica.Fluid.Sources.Boundary_pT Out_Pressure_Source(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              use_p_in=false,
              p=2000,
              T=293.15) annotation (Placement(transformation(extent={{60,-18},{40,2}})));
            Modelica.Fluid.Sources.Boundary_pT In_Pressure_Source(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              use_p_in=true,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-60,-18},{-40,2}})));
            Modelica.Blocks.Sources.TimeTable
                                         ramp2(offset=0, table=[0,0; 5,0; 10,2490.8892;
                  15,2490.8892; 20,498.17781; 25,498.17781; 30,2490.8892; 35,2490.8892])
              annotation (Placement(transformation(extent={{-100,-10},{-80,10}})));
            inner C2M2L_OM.MSL_Extend.Environments.C2M2L_Environment
                                                                  env
              annotation (Placement(transformation(extent={{60,80},{80,100}})));
          equation

            connect(const1.y, speed.w_ref) annotation (Line(
                points={{-79,70},{-72,70}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(world.frame_b,cutTorque. frame_a) annotation (Line(
                points={{-40,-80},{-24,-80}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(In_Pressure_Source.ports[1], bilge_Pump_Hydraulic.fluid_in)
              annotation (Line(
                points={{-40,-8},{-30,-8},{-30,-18},{-20,-18}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(Out_Pressure_Source.ports[1], bilge_Pump_Hydraulic.fluid_out)
              annotation (Line(
                points={{40,-8},{30,-8},{30,-18},{20,-18}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ramp2.y, In_Pressure_Source.p_in) annotation (Line(
                points={{-79,0},{-62,0}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(pressure_Source.hydraulic_port, test_hydraulic_pump.hyd_b)
              annotation (Line(
                points={{-36,40},{-10,40}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_b, bilge_Pump_Hydraulic.hyd_a) annotation (
                Line(
                points={{-10,40},{-26,40},{-26,36},{-40,36}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(bilge_Pump_Hydraulic.hyd_b, test_hydraulic_pump.hyd_a) annotation (
                Line(
                points={{40,36},{28,36},{28,40},{10,40}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(speed.flange, test_hydraulic_pump.flange) annotation (Line(
                points={{-50,70},{-26,70},{-26,70},{0,70},{0,50}},
                color={0,0,0},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=20, Interval=0.01),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Bilge_Hydraulic_Instance_Test.mos"
                "Bilge_Hydraulic_Instance_Test"));
          end Test_Bench_Bilge_Hydraulic;

          model Test_Bench_Bilge_Hydraulic_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            Modelica.Blocks.Sources.Ramp     const1(
              duration=10,
              startTime=5,
              height=75)
              annotation (Placement(transformation(extent={{-100,60},{-80,80}})));
            Modelica.Mechanics.Rotational.Sources.Speed speed(exact=true)
              annotation (Placement(transformation(extent={{-70,60},{-50,80}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-60,-90},{-40,-70}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-24,-90},{-4,-70}})));
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
                P_constant=10000000)
              annotation (Placement(transformation(extent={{-56,30},{-36,50}})));

            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Bilge_Pump.Bilge_Pump_Hydraulic
              bilge_Pump_Hydraulic
              annotation (Placement(transformation(extent={{-20,-30},{20,30}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Lossy
              test_hydraulic_pump(leakage=0.01)
              annotation (Placement(transformation(extent={{10,30},{-10,50}})));
            Modelica.Fluid.Sources.Boundary_pT Out_Pressure_Source(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              use_p_in=false,
              p=2000,
              T=293.15) annotation (Placement(transformation(extent={{60,-18},{40,2}})));
            Modelica.Fluid.Sources.Boundary_pT In_Pressure_Source(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              use_p_in=true,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-60,-18},{-40,2}})));
            Modelica.Blocks.Sources.TimeTable
                                         ramp2(offset=0, table=[0,0; 5,0; 10,2490.8892;
                  15,2490.8892; 20,498.17781; 25,498.17781; 30,2490.8892; 35,2490.8892])
              annotation (Placement(transformation(extent={{-100,-10},{-80,10}})));
          equation

            connect(const1.y, speed.w_ref) annotation (Line(
                points={{-79,70},{-72,70}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(world.frame_b,cutTorque. frame_a) annotation (Line(
                points={{-40,-80},{-24,-80}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(bilge_Pump_Hydraulic.mount_01, cutTorque.frame_b) annotation (Line(
                points={{0,-30},{0,-80},{-4,-80}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(In_Pressure_Source.ports[1], bilge_Pump_Hydraulic.fluid_in)
              annotation (Line(
                points={{-40,-8},{-30,-8},{-30,-6},{-20,-6}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(Out_Pressure_Source.ports[1], bilge_Pump_Hydraulic.fluid_out)
              annotation (Line(
                points={{40,-8},{30,-8},{30,-6},{20,-6}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ramp2.y, In_Pressure_Source.p_in) annotation (Line(
                points={{-79,0},{-62,0}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(pressure_Source.hydraulic_port, test_hydraulic_pump.hyd_b)
              annotation (Line(
                points={{-36,40},{-10,40}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_b, bilge_Pump_Hydraulic.hyd_a) annotation (
                Line(
                points={{-10,40},{-26,40},{-26,14},{-20,14}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(bilge_Pump_Hydraulic.hyd_b, test_hydraulic_pump.hyd_a) annotation (
                Line(
                points={{20,14},{28,14},{28,40},{10,40}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(speed.flange, test_hydraulic_pump.flange) annotation (Line(
                points={{-50,70},{-26,70},{-26,70},{0,70},{0,50}},
                color={0,0,0},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=20, Interval=0.01),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Bilge_Hydraulic_Instance_Test.mos"
                "Bilge_Hydraulic_Instance_Test"));
          end Test_Bench_Bilge_Hydraulic_original;

          model Test_Simple_Bilge_Electrical
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner C2M2L_OM.MSL_Extend.Environments.C2M2L_Environment env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-24,-80},{-4,-60}})));
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            Bilge_Pump_Electrical
              bilge_Pump(
              rotating_inertia=0.01,
              flow_characteristic=[0.000167,1.3e5; 0.0025,1e5; 0.004,0.6e5; 0.005,0.2e5],
              efficiency_characteristic=[0,0.7],
              pow_max=5000)
              annotation (Placement(transformation(extent={{-20,-34},{20,26}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage constantVoltage(V=12)
              annotation (Placement(transformation(
                  extent={{-10,10},{10,-10}},
                  rotation=0,
                  origin={0,46})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={38,32})));
            Modelica.Fluid.Sources.Boundary_pT In_Pressure_Source(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              use_p_in=true,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
            Modelica.Fluid.Sources.Boundary_pT Out_Pressure_Source(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              use_p_in=false,
              p=118000,
              T=293.15) annotation (Placement(transformation(extent={{60,-20},{40,0}})));
            Modelica.Blocks.Sources.TimeTable
                                         ramp1(          table=[0,0; 5,0; 10,2490.8892;
                  15,2490.8892; 20,498.17781; 25,498.17781; 30,2490.8892; 35,2490.8892], offset=
                  100000)
              annotation (Placement(transformation(extent={{-100,-12},{-80,8}})));
          equation

            connect(world.frame_b,cutTorque. frame_a) annotation (Line(
                points={{-40,-70},{-24,-70}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(bilge_Pump.pin_p, constantVoltage.p) annotation (Line(
                points={{-20,8},{-30,8},{-30,46},{-10,46}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(bilge_Pump.pin_n, ground.p) annotation (Line(
                points={{20,8},{28,8},{28,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(constantVoltage.n, ground.p) annotation (Line(
                points={{10,46},{28,46},{28,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(In_Pressure_Source.ports[1], bilge_Pump.fluid_in) annotation (Line(
                points={{-40,-10},{-30,-10},{-30,-22},{-20,-22}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(Out_Pressure_Source.ports[1], bilge_Pump.fluid_out) annotation (Line(
                points={{40,-10},{30,-10},{30,-22},{20,-22}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ramp1.y, In_Pressure_Source.p_in) annotation (Line(
                points={{-79,-2},{-62,-2}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=100),
              __Dymola_experimentSetupOutput);
          end Test_Simple_Bilge_Electrical;

          model Test_Simple_Bilge_Electrical_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-24,-80},{-4,-60}})));
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Bilge_Pump.Bilge_Pump_Electrical
              bilge_Pump(
              rotating_inertia=0.01,
              flow_characteristic=[0.000167,1.3e5; 0.0025,1e5; 0.004,0.6e5; 0.005,0.2e5],
              efficiency_characteristic=[0,0.7],
              redeclare package Transported_Fluid =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              pow_max=5000)
              annotation (Placement(transformation(extent={{-20,-34},{20,26}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage constantVoltage(V=12)
              annotation (Placement(transformation(
                  extent={{-10,10},{10,-10}},
                  rotation=0,
                  origin={0,46})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={38,32})));
            Modelica.Fluid.Sources.Boundary_pT In_Pressure_Source(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              use_p_in=true,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
            Modelica.Fluid.Sources.Boundary_pT Out_Pressure_Source(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              use_p_in=false,
              p=118000,
              T=293.15) annotation (Placement(transformation(extent={{60,-20},{40,0}})));
            Modelica.Blocks.Sources.TimeTable
                                         ramp1(          table=[0,0; 5,0; 10,2490.8892;
                  15,2490.8892; 20,498.17781; 25,498.17781; 30,2490.8892; 35,2490.8892], offset=
                  100000)
              annotation (Placement(transformation(extent={{-100,-12},{-80,8}})));
          equation

            connect(world.frame_b,cutTorque. frame_a) annotation (Line(
                points={{-40,-70},{-24,-70}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cutTorque.frame_b, bilge_Pump.mount_01) annotation (Line(
                points={{-4,-70},{0,-70},{0,-34}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(bilge_Pump.pin_p, constantVoltage.p) annotation (Line(
                points={{-20,10},{-30,10},{-30,46},{-10,46}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(bilge_Pump.pin_n, ground.p) annotation (Line(
                points={{20,10},{28,10},{28,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(constantVoltage.n, ground.p) annotation (Line(
                points={{10,46},{28,46},{28,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(In_Pressure_Source.ports[1], bilge_Pump.fluid_in) annotation (Line(
                points={{-40,-10},{-20,-10}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(Out_Pressure_Source.ports[1], bilge_Pump.fluid_out) annotation (Line(
                points={{40,-10},{20,-10}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ramp1.y, In_Pressure_Source.p_in) annotation (Line(
                points={{-79,-2},{-62,-2}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=100),
              __Dymola_experimentSetupOutput);
          end Test_Simple_Bilge_Electrical_original;

          model Test_Simple_Hydraulic
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner C2M2L_OM.MSL_Extend.Environments.C2M2L_Environment env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            Modelica.Blocks.Sources.Ramp     const1(
              duration=10,
              startTime=5,
              height=75)
              annotation (Placement(transformation(extent={{-100,60},{-80,80}})));
            Modelica.Mechanics.Rotational.Sources.Speed speed(exact=true)
              annotation (Placement(transformation(extent={{-70,60},{-50,80}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-60,-90},{-40,-70}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-24,-90},{-4,-70}})));
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
                P_constant=10000000)
              annotation (Placement(transformation(extent={{-56,30},{-36,50}})));
            Bilge_Pump_Hydraulic bilge_Pump_Hydraulic(
              rotating_inertia=0.01,
              flow_characteristic=[0.000167,1.3e5; 0.0025,1e5; 0.004,0.6e5; 0.005,0.2e5],
              efficiency_characteristic=[0,0.7],
              vol_per_radian_motor=1e-6,
              leakage_motor=1e-9)
              annotation (Placement(transformation(extent={{-20,-32},{20,28}})));

            Modelica.Fluid.Sources.Boundary_pT In_Pressure_Source(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              use_p_in=true,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-60,-18},{-40,2}})));
            Modelica.Fluid.Sources.Boundary_pT Out_Pressure_Source(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              use_p_in=false,
              p=118000,
              T=293.15) annotation (Placement(transformation(extent={{60,-18},{40,2}})));
            Modelica.Blocks.Sources.TimeTable
                                         ramp2(          table=[0,0; 5,0; 10,2490.8892;
                  15,2490.8892; 20,498.17781; 25,498.17781; 30,2490.8892; 35,2490.8892], offset=
                  100000)
              annotation (Placement(transformation(extent={{-100,-10},{-80,10}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Lossy
              test_hydraulic_pump(
              leakage=1e-9,
              useLeakage=true,
              vol_per_radian=1e-5)
              annotation (Placement(transformation(extent={{10,30},{-10,50}})));
          equation

            connect(const1.y, speed.w_ref) annotation (Line(
                points={{-79,70},{-72,70}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(world.frame_b,cutTorque. frame_a) annotation (Line(
                points={{-40,-80},{-24,-80}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(bilge_Pump_Hydraulic.fluid_out, Out_Pressure_Source.ports[1])
              annotation (Line(
                points={{20,-20},{30,-20},{30,-8},{40,-8}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(bilge_Pump_Hydraulic.fluid_in, In_Pressure_Source.ports[1])
              annotation (Line(
                points={{-20,-20},{-30,-20},{-30,-8},{-40,-8}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_b, pressure_Source.hydraulic_port)
              annotation (Line(
                points={{-10,40},{-36,40}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_b, bilge_Pump_Hydraulic.hyd_a) annotation (
                Line(
                points={{-10,40},{-26,40},{-26,34},{-40,34}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(bilge_Pump_Hydraulic.hyd_b, test_hydraulic_pump.hyd_a) annotation (
                Line(
                points={{40,34},{26,34},{26,40},{10,40}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(speed.flange, test_hydraulic_pump.flange) annotation (Line(
                points={{-50,70},{0,70},{0,50}},
                color={0,0,0},
                smooth=Smooth.None));
            connect(ramp2.y, In_Pressure_Source.p_in) annotation (Line(
                points={{-79,0},{-62,0}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=100, Interval=0.01),
              __Dymola_experimentSetupOutput);
          end Test_Simple_Hydraulic;

          model Test_Simple_Hydraulic_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            Modelica.Blocks.Sources.Ramp     const1(
              duration=10,
              startTime=5,
              height=75)
              annotation (Placement(transformation(extent={{-100,60},{-80,80}})));
            Modelica.Mechanics.Rotational.Sources.Speed speed(exact=true)
              annotation (Placement(transformation(extent={{-70,60},{-50,80}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-60,-90},{-40,-70}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-24,-90},{-4,-70}})));
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
                P_constant=10000000)
              annotation (Placement(transformation(extent={{-56,30},{-36,50}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Bilge_Pump.Bilge_Pump_Hydraulic
              bilge_Pump_Hydraulic(
              rotating_inertia=0.01,
              flow_characteristic=[0.000167,1.3e5; 0.0025,1e5; 0.004,0.6e5; 0.005,0.2e5],
              efficiency_characteristic=[0,0.7],
              vol_per_radian_motor=1e-6,
              leakage_motor=1e-9)
              annotation (Placement(transformation(extent={{-20,-32},{20,28}})));

            Modelica.Fluid.Sources.Boundary_pT In_Pressure_Source(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              use_p_in=true,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-60,-18},{-40,2}})));
            Modelica.Fluid.Sources.Boundary_pT Out_Pressure_Source(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              use_p_in=false,
              p=118000,
              T=293.15) annotation (Placement(transformation(extent={{60,-18},{40,2}})));
            Modelica.Blocks.Sources.TimeTable
                                         ramp2(          table=[0,0; 5,0; 10,2490.8892;
                  15,2490.8892; 20,498.17781; 25,498.17781; 30,2490.8892; 35,2490.8892], offset=
                  100000)
              annotation (Placement(transformation(extent={{-100,-10},{-80,10}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Lossy
              test_hydraulic_pump(
              leakage=1e-9,
              useLeakage=true,
              vol_per_radian=1e-5)
              annotation (Placement(transformation(extent={{10,30},{-10,50}})));
          equation

            connect(const1.y, speed.w_ref) annotation (Line(
                points={{-79,70},{-72,70}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(world.frame_b,cutTorque. frame_a) annotation (Line(
                points={{-40,-80},{-24,-80}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(bilge_Pump_Hydraulic.mount_01, cutTorque.frame_b) annotation (Line(
                points={{0,-32},{0,-80},{-4,-80}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(bilge_Pump_Hydraulic.fluid_out, Out_Pressure_Source.ports[1])
              annotation (Line(
                points={{20,-8},{40,-8}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(bilge_Pump_Hydraulic.fluid_in, In_Pressure_Source.ports[1])
              annotation (Line(
                points={{-20,-8},{-40,-8}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_b, pressure_Source.hydraulic_port)
              annotation (Line(
                points={{-10,40},{-36,40}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_b, bilge_Pump_Hydraulic.hyd_a) annotation (
                Line(
                points={{-10,40},{-26,40},{-26,12},{-20,12}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(bilge_Pump_Hydraulic.hyd_b, test_hydraulic_pump.hyd_a) annotation (
                Line(
                points={{20,12},{26,12},{26,40},{10,40}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(speed.flange, test_hydraulic_pump.flange) annotation (Line(
                points={{-50,70},{0,70},{0,50}},
                color={0,0,0},
                smooth=Smooth.None));
            connect(ramp2.y, In_Pressure_Source.p_in) annotation (Line(
                points={{-79,0},{-62,0}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=100, Interval=0.01),
              __Dymola_experimentSetupOutput);
          end Test_Simple_Hydraulic_original;
        end Tests;

        model Bilge_Pump_Electrical
          extends Interfaces.Bilge_Pump_Electrical;
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Inertia rotating_inertia_eMotor = 0.01
          "Moment of inertia of device around its axis of rotation"  annotation (Dialog(tab="Electrical Model"));
          parameter SI.Voltage v_cutoff=v_nom*0.1
          "Supply voltage below which power limit cannot be reached"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Power pow_max=100000 "Maximum input power at v_nom"
          annotation (Dialog(tab="Electrical Model"));
          parameter SI.Torque trq_max=100 "Maximum output torque"
          annotation (Dialog(tab="Electrical Model"));
          parameter Real efficiency=0.95
          "Efficiency of electrical to mechanical conversion"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Pressure On_Trigger_Pressure = 101500
          "Pressure (max) that triggers pump on";
          parameter SI.Pressure Off_Trigger_Pressure = 100800
          "Pressure (min) that triggers pump off";

          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Amphibious.Bilge_Pump.Bilge_Pump_Electrical
            bilge_Pump_Electrical(
            medium=medium,
            useSupport=useSupport,
            consider_gyroscopic_effects=consider_gyroscopic_effects,
            N_ref=N_ref,
            N_switch=N_switch,
            rotating_inertia=rotating_inertia,
            efficiency_characteristic=efficiency_characteristic,
            flow_characteristic=flow_characteristic,
            v_nom=v_nom,
            rotating_inertia_eMotor=rotating_inertia_eMotor,
            v_cutoff=v_cutoff,
            pow_max=pow_max,
            trq_max=trq_max,
            efficiency=efficiency,
            On_Trigger_Pressure=On_Trigger_Pressure,
            Off_Trigger_Pressure=Off_Trigger_Pressure)
            annotation (Placement(transformation(extent={{-20,-34},{20,26}})));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=
              Modelica.Thermal.FluidHeatFlow.Media.Medium()
          "Medium in the component";
          parameter Boolean useSupport=false
          "= true, if support flange enabled, otherwise implicitly grounded";
          parameter Boolean consider_gyroscopic_effects=false
          "if true, take into account gyroscopic reaction forces";
          parameter SI.AngularVelocity N_ref=500
          "Rotational speed at which flow versus pressure data is provided";
          parameter SI.AngularVelocity N_switch=N_ref*0.01
          "Rotational speed below which flow no longer follows scaling laws";
          parameter SI.Inertia rotating_inertia=0.01
          "Moment of inertia of device around its axis of rotation";
          parameter Real efficiency_characteristic[:,:]=[0,0.7]
          "Table with efficiency vs. volume flow rate(m3/s) at N_ref";
          parameter Real flow_characteristic[:,:]=[0.000167,1.3e5; 0.0025,1e5; 0.004,
              0.6e5; 0.005,0.2e5]
          "Table with volume flow rate[m3] and pressure rise[pa] columns at N_ref";
        equation
          connect(fluidAdaptor.fluidHeatflow_port, bilge_Pump_Electrical.flowPort_a)
            annotation (Line(
              points={{-68,-60},{-44,-60},{-44,-10},{-20,-10}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(bilge_Pump_Electrical.flowPort_b, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{20,-10},{46,-10},{46,-60},{70,-60}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(bilge_Pump_Electrical.pin_n, pin_n) annotation (Line(
              points={{20,10},{60,10},{60,40},{100,40}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(bilge_Pump_Electrical.pin_p, pin_p) annotation (Line(
              points={{-20,10},{-60,10},{-60,40},{-100,40}},
              color={0,0,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Bilge_Pump_Electrical;

        model Bilge_Pump_Hydraulic
          extends Interfaces.Bilge_Pump_Hydraulic;
         parameter SI.Volume vol_per_radian_motor = 1
          "Volume of hydraulic fluid moved for 1 radian of shaft rotation"   annotation(Dialog(group="Hydraulic",tab="Motor"));
         parameter SI.Volume Nm_per_pascal_motor = 1
          "Pressure rise for 1 Nm of torque input"  annotation(Dialog(group="Hydraulic",tab="Motor"));
         parameter Real lossTable_motor[:, 5]=[0, 1, 1, 0, 0]
          "Array for mechanical efficiencies and bearing friction depending on speed"
                                                                                        annotation(Dialog(group="Mechanical",tab="Motor"));
         parameter SI.Inertia J_motor(
            min=0,
            start=1)=0.001 "Moment of inertia"
                                             annotation(Dialog(group="Inertia",tab="Motor"));
         parameter Real leakage_motor=0.001 "Leakage loss factor"
                                                                 annotation(Dialog(group="Hydraulic",tab="Motor"));
          parameter SI.Pressure On_Trigger_Pressure = 101500
          "Pressure (max) that triggers pump on";
          parameter SI.Pressure Off_Trigger_Pressure = 100800
          "Pressure (min) that triggers pump off";

          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Amphibious.Bilge_Pump.Bilge_Pump_Hydraulic
            bilge_Pump_Hydraulic(
            medium=medium,
            useSupport=useSupport,
            consider_gyroscopic_effects=consider_gyroscopic_effects,
            N_ref=N_ref,
            N_switch=N_switch,
            rotating_inertia=rotating_inertia,
            efficiency_characteristic=efficiency_characteristic,
            flow_characteristic=flow_characteristic,
            loss_coeff=loss_coeff,
            On_Trigger_Pressure=On_Trigger_Pressure,
            vol_per_radian_motor=vol_per_radian_motor,
            Nm_per_pascal_motor=Nm_per_pascal_motor,
            lossTable_motor=lossTable_motor,
            J_motor=J_motor,
            leakage_motor=leakage_motor,
            Off_Trigger_Pressure=Off_Trigger_Pressure)
            annotation (Placement(transformation(extent={{-20,-34},{20,26}})));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=
              Modelica.Thermal.FluidHeatFlow.Media.Medium()
          "Medium in the component";
          parameter Boolean useSupport=false
          "= true, if support flange enabled, otherwise implicitly grounded";
          parameter Boolean consider_gyroscopic_effects=false
          "if true, take into account gyroscopic reaction forces";
          parameter SI.AngularVelocity N_ref=500
          "Rotational speed at which flow versus pressure data is provided";
          parameter SI.AngularVelocity N_switch=N_ref*0.01
          "Rotational speed below which flow no longer follows scaling laws";
          parameter SI.Inertia rotating_inertia=0.01
          "Moment of inertia of device around its axis of rotation";
          parameter Real efficiency_characteristic[:,:]=[0,0.7]
          "Table with efficiency vs. volume flow rate(m3/s) at N_ref";
          parameter Real flow_characteristic[:,:]=[0.000167,1.3e5; 0.0025,1e5; 0.004,
              0.6e5; 0.005,0.2e5]
          "Table with volume flow rate[m3] and pressure rise[pa] columns at N_ref";
          parameter Real loss_coeff=0.1
          "(Volume flow rate/delta P) Loss Coefficient to model the pump as a simple restriction at low fan speeds";
        equation
          connect(hyd_a, bilge_Pump_Hydraulic.hyd_a) annotation (Line(
              points={{-100,40},{-60,40},{-60,10},{-20,10}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(bilge_Pump_Hydraulic.hyd_b, hyd_b) annotation (Line(
              points={{20,10},{60,10},{60,40},{100,40}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(bilge_Pump_Hydraulic.flowPort_b, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{20,-10},{46,-10},{46,-60},{70,-60}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(bilge_Pump_Hydraulic.flowPort_a, fluidAdaptor.fluidHeatflow_port)
            annotation (Line(
              points={{-20,-10},{-44,-10},{-44,-60},{-68,-60}},
              color={255,0,0},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Bilge_Pump_Hydraulic;

        package Interfaces
           extends Modelica.Icons.InterfacesPackage;

          partial model Bilge_Pump_Electrical

            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-110,30},{-90,50}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{90,30},{110,50}})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            "Port that nominally flows fluid out of the container"
              annotation (Placement(transformation(extent={{90,-70},{110,-50}})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-110,-70},{-90,-50}})));
            outer Modelica.Mechanics.MultiBody.World world
              annotation (Placement(transformation(extent={{80,-100},{100,-80}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=180,
                  origin={-78,-60})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=0,
                  origin={80,-60})));
          equation
            connect(fluid_in, fluidAdaptor.fluid_port) annotation (Line(
                points={{-100,-60},{-88,-60}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{90,-60},{100,-60}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end Bilge_Pump_Electrical;

          partial model Bilge_Pump_Hydraulic

            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-110,-70},{-90,-50}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Interfaces.Hydraulic_Port
                                                              hyd_a
              annotation (Placement(transformation(extent={{-110,30},{-90,50}}),
                  iconTransformation(extent={{-210,110},{-190,130}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Interfaces.Hydraulic_Port
                                                              hyd_b
              annotation (Placement(transformation(extent={{90,30},{110,50}}),
                  iconTransformation(extent={{190,110},{210,130}})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            "Port that nominally flows fluid out of the container"
              annotation (Placement(transformation(extent={{90,-70},{110,-50}})));
            outer Modelica.Mechanics.MultiBody.World world
              annotation (Placement(transformation(extent={{60,-100},{80,-80}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=180,
                  origin={-78,-60})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=0,
                  origin={80,-60})));
          equation
            connect(fluid_in, fluidAdaptor.fluid_port) annotation (Line(
                points={{-100,-60},{-88,-60}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{90,-60},{100,-60}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end Bilge_Pump_Hydraulic;
        end Interfaces;
      end Bilge_Pump;

      package Waterjet "waterjet package"
          extends Modelica.Icons.Package;

        package Tests
        extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

        end Tests;

        package Interfaces
         extends Modelica.Icons.InterfacesPackage;
        end Interfaces;
      end Waterjet;
    end Amphibious;

    package Cooling_System
      extends Modelica.Icons.Package;

      package Contact_Cooler
        extends Modelica.Icons.Package;

        package Tests
        extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;
        end Tests;
      end Contact_Cooler;

      package Fans
        extends Modelica.Icons.Package;

        model Electric_Fan
        "Standalone pump used to provide cooling flows independantly (e.g. not reliant on main water pump in a prime-mover) "
        extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Interfaces.Electric_Fan;
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Electric_Fan
            electric_Fan(
            useSupport=false,
            consider_gyroscopic_effects=consider_gyroscopic_effects,
            N_ref=N_ref,
            N_switch=N_switch,
            rotating_inertia=rotating_inertia,
            efficiency_characteristic=efficiency_characteristic,
            flow_characteristic=flow_characteristic,
            pow_max=pow_max,
            trq_max=trq_max,
            v_nom=v_nom,
            medium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC())
            annotation (Placement(transformation(extent={{-46,-70},{44,66}})));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=
              Modelica.Thermal.FluidHeatFlow.Media.Medium()
          "Medium in the component";
          parameter Boolean useSupport=false
          "= true, if support flange enabled, otherwise implicitly grounded";
          parameter Boolean consider_gyroscopic_effects=false
          "if true, take into account gyroscopic reaction forces";
          parameter SI.AngularVelocity N_ref=500
          "Rotational speed at which flow versus pressure data is provided";
          parameter SI.AngularVelocity N_switch=N_ref*0.01
          "Rotational speed below which flow no longer follows scaling laws";
          parameter SI.Inertia rotating_inertia=1
          "Moment of inertia of device around its axis of rotation";
          parameter Real efficiency_characteristic[:,:]=fill(
              0.0,
              0,
              2) "Table with efficiency vs. volume flow rate(m3/s) at N_ref";
          parameter Real flow_characteristic[:,:]=fill(
              0.0,
              0,
              2)
          "Table with volume flow rate[m3] and pressure rise[pa] columns at N_ref";
          parameter SI.Power pow_max=100000;
          parameter SI.Torque trq_max=100 "Maximum output torque";
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at";
        equation
          connect(pin_p, electric_Fan.pin_p) annotation (Line(
              points={{-200,120},{-122,120},{-122,29.7333},{-46.45,29.7333}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(electric_Fan.pin_n, pin_n) annotation (Line(
              points={{44,29.7333},{122,29.7333},{122,120},{200,120}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(electric_Fan.flowPort_b, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{44,-15.6},{102,-15.6},{102,-80},{158,-80}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(electric_Fan.flowPort_a, fluidAdaptor.fluidHeatflow_port) annotation (
             Line(
              points={{-46,-15.6},{-68,-15.6},{-68,-16},{-94,-16},{-94,-80},{-158,-80}},
              color={255,0,0},
              smooth=Smooth.None));

          connect(electric_Fan.demand, electric_Machine_Bus.demand) annotation (Line(
              points={{-19,67.8133},{-19,139.907},{3.55271e-015,139.907},{3.55271e-015,
                  213}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(electric_Fan.tau, electric_Machine_Bus.tau) annotation (Line(
              points={{-5.5,67.36},{-5.5,139.68},{3.55271e-015,139.68},{3.55271e-015,
                  213}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(electric_Fan.w, electric_Machine_Bus.w) annotation (Line(
              points={{3.5,67.36},{3.5,141.68},{3.55271e-015,141.68},{3.55271e-015,213}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));

          connect(electric_Fan.i, electric_Machine_Bus.i) annotation (Line(
              points={{12.5,67.36},{12.5,104},{12,104},{12,140},{3.55271e-015,140},{
                  3.55271e-015,213}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(electric_Fan.v, electric_Machine_Bus.v) annotation (Line(
              points={{21.5,67.36},{21.5,140.68},{3.55271e-015,140.68},{3.55271e-015,
                  213}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -320},{200,280}}), graphics));
        end Electric_Fan;

        model Hydraulic_Fan_Assembly "Hydraulic driven fan"
        extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Interfaces.Hydraulic_Fan_Assembly;
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Hydraulic_Fan_Assembly
            hydraulic_Fan_Assembly(
            useSupport=false,
            consider_gyroscopic_effects=consider_gyroscopic_effects,
            N_ref=N_ref,
            N_switch=N_switch,
            rotating_inertia=rotating_inertia,
            efficiency_characteristic=efficiency_characteristic,
            flow_characteristic=flow_characteristic,
            vol_per_radian_motor=vol_per_radian_motor,
            Nm_per_pascal_motor=Nm_per_pascal_motor,
            lossTable_motor=lossTable_motor,
            J_motor=J_motor,
            leakage_motor=leakage_motor,
            medium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC())
            annotation (Placement(transformation(extent={{-48,-94},{54,60}})));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=
              Modelica.Thermal.FluidHeatFlow.Media.Medium()
          "Medium in the component";
          parameter Boolean useSupport=false
          "= true, if support flange enabled, otherwise implicitly grounded";
          parameter Boolean consider_gyroscopic_effects=false
          "if true, take into account gyroscopic reaction forces";
          parameter SI.AngularVelocity N_ref=500
          "Rotational speed at which flow versus pressure data is provided";
          parameter SI.AngularVelocity N_switch=N_ref*0.01
          "Rotational speed below which flow no longer follows scaling laws";
          parameter SI.Inertia rotating_inertia=1
          "Moment of inertia of device around its axis of rotation";
          parameter Real efficiency_characteristic[:,:]=fill(
              0.0,
              0,
              2) "Table with efficiency vs. volume flow rate(m3/s) at N_ref";
          parameter Real flow_characteristic[:,:]=fill(
              0.0,
              0,
              2)
          "Table with volume flow rate[m3] and pressure rise[pa] columns at N_ref";
          parameter SI.Volume vol_per_radian_motor=1
          "Volume of hydraulic fluid moved for 1 radian of shaft rotation";
          parameter SI.Volume Nm_per_pascal_motor=1
          "Pressure rise for 1 Nm of torque input";
          parameter Real leakage_motor=0.001 "Leakage loss factor";
          parameter Real lossTable_motor[:,5]=[0,1,1,0,0]
          "Array for mechanical efficiencies and bearing friction depending on speed";
          parameter SI.Inertia J_motor=0.001 "Moment of inertia";
        equation
          connect(hyd_a, hydraulic_Fan_Assembly.hydraulic_Port_a) annotation (Line(
              points={{-200,120},{-124,120},{-124,18.9333},{-48,18.9333}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_Fan_Assembly.hydraulic_Port_b, hyd_b) annotation (Line(
              points={{54,18.9333},{96,18.9333},{96,18},{128,18},{128,120},{200,120}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(fluidAdaptor.fluidHeatflow_port, hydraulic_Fan_Assembly.flowPort_a)
            annotation (Line(
              points={{-160,-80},{-48,-80},{-48,-32.4}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(hydraulic_Fan_Assembly.flowPort_b, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{54,-32.4},{56,-32.4},{56,-80},{156,-80}},
              color={255,0,0},
              smooth=Smooth.None));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -320},{200,280}}), graphics));
        end Hydraulic_Fan_Assembly;

        package Interfaces
         extends Modelica.Icons.InterfacesPackage;
          partial model Hydraulic_Fan_Assembly

            C2M2L_Ext.Fluid.Hydraulics_Simple.Interfaces.Hydraulic_Port
                                                              hyd_a
              annotation (Placement(transformation(extent={{-210,110},{-190,130}}),
                  iconTransformation(extent={{-210,110},{-190,130}})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-210,-90},{-190,-70}})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
            "Port that nominally flows fluid out of the container"
              annotation (Placement(transformation(extent={{190,-90},{210,-70}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Interfaces.Hydraulic_Port
                                                              hyd_b
              annotation (Placement(transformation(extent={{190,110},{210,130}}),
                  iconTransformation(extent={{190,110},{210,130}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
                redeclare package Medium =
                C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=180,
                  origin={-170,-80})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
                redeclare package Medium =
                C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=0,
                  origin={166,-80})));
          equation
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{176,-80},{200,-80}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_in, fluidAdaptor.fluid_port) annotation (Line(
                points={{-200,-80},{-180,-80}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -320},{200,280}}),
                                   graphics), Icon(coordinateSystem(preserveAspectRatio=true,
                            extent={{-200,-320},{200,280}}),
                                                   graphics={
                  Polygon(
                    points={{-79,148},{-50,148},{-50,188},{-60,188},{-40,208},{-20,188},{
                        -30,188},{-30,128},{-79,128},{-79,148}},
                    lineColor={0,0,0},
                    fillColor={255,0,0},
                    fillPattern=FillPattern.Solid),
                  Line(
                    points={{96,-60},{148,-60},{148,-80},{198,-80}},
                    color={0,128,255},
                    smooth=Smooth.None),
                  Line(
                    points={{-196,-80},{-152,-80},{-152,-60},{-98,-60},{-98,-62}},
                    color={0,128,255},
                    smooth=Smooth.None),
                  Rectangle(
                    extent={{-40,11},{40,-11}},
                    lineColor={0,0,0},
                    fillPattern=FillPattern.HorizontalCylinder,
                    fillColor={95,95,95},
                    origin={-1,60},
                    rotation=90),
                  Polygon(
                    points={{-120,-200},{118,-200},{60,-102},{-60,-102},{-120,-200}},
                    smooth=Smooth.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None),
                  Ellipse(
                    extent={{-102,40},{100,-160}},
                    lineColor={0,128,255},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid),
                  Polygon(
                    points={{20,20},{20,-20},{-20,0},{20,20}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={81,-60},
                    rotation=180),
                  Polygon(
                    points={{-62,-40},{-62,-80},{-102,-60},{-62,-40}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid),
                  Ellipse(
                    extent={{-60,180},{60,60}},
                    lineColor={255,0,128},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid),
                  Polygon(
                    points={{-20,20},{-20,-20},{20,0},{-20,20}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={46,120},
                    rotation=180),
                  Polygon(
                    points={{-66,140},{-66,100},{-26,120},{-66,140}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid),
                  Line(
                    points={{-200,120},{-66,120}},
                    color={255,0,128},
                    smooth=Smooth.None),
                  Line(
                    points={{66,120},{200,120}},
                    color={255,0,128},
                    smooth=Smooth.None),
                  Polygon(
                    points={{-192,-24},{-192,-44},{-136,-44},{-136,-56},{-118,-34},{-136,
                        -12},{-136,-24},{-192,-24}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid),
                  Polygon(
                    points={{118,-24},{118,-44},{174,-44},{174,-56},{192,-34},{174,-12},{
                        174,-24},{118,-24}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid)}),
              Documentation(info="<html>
<p><ul>
<li></li>
</ul></p>
</html>"));
          end Hydraulic_Fan_Assembly;

          partial model Electric_Fan

            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-210,-90},{-190,-70}})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
            "Port that nominally flows fluid out of the container"
              annotation (Placement(transformation(extent={{190,-90},{210,-70}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{190,110},{210,130}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus
                                                       electric_Machine_Bus
              annotation (Placement(transformation(extent={{-28,188},{28,238}}),
                  iconTransformation(extent={{-18,194},{18,228}})));
            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-210,110},{-190,130}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
                redeclare package Medium =
                C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=180,
                  origin={-168,-80})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
                redeclare package Medium =
                C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=0,
                  origin={168,-80})));
          equation
            connect(fluid_in, fluidAdaptor.fluid_port) annotation (Line(
                points={{-200,-80},{-178,-80}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{178,-80},{200,-80}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -320},{200,280}}), graphics), Icon(coordinateSystem(
                    preserveAspectRatio=true, extent={{-200,-320},{200,280}}), graphics={
                  Line(
                    points={{-194,-80},{-154,-80},{-154,44},{-128,44}},
                    color={0,0,0},
                    smooth=Smooth.None),
                  Ellipse(extent={{-130,168},{164,-126}},
                                                      lineColor={0,0,0}),
                  Ellipse(
                    extent={{-96,136},{130,-96}},
                    lineColor={0,0,0},
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid),
                  Line(
                    points={{10,122},{-30,40},{50,0},{22,-76}},
                    color={255,255,255},
                    smooth=Smooth.Bezier),
                  Line(
                    points={{114,26},{30,64},{-10,-16},{-76,2}},
                    color={255,255,255},
                    smooth=Smooth.Bezier),
                  Line(
                    points={{78,94},{-2,72},{24,-16},{-44,-56}},
                    color={255,255,255},
                    smooth=Smooth.Bezier),
                  Ellipse(
                    extent={{-12,48},{48,-12}},
                    lineColor={0,0,0},
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid),
                  Polygon(
                    points={{-170,-124},{-170,-144},{-114,-144},{-114,-156},{-96,-134},{
                        -114,-112},{-114,-124},{-170,-124}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid),
                  Polygon(
                    points={{136,-126},{136,-146},{192,-146},{192,-158},{210,-136},{192,
                        -114},{192,-126},{136,-126}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid),
                  Line(
                    points={{53,71},{-15,43},{17,-45},{-77,-73}},
                    color={255,255,255},
                    smooth=Smooth.Bezier,
                    origin={13,19},
                    rotation=90),
                  Line(
                    points={{164,38},{174,38},{174,-82},{192,-82}},
                    color={0,0,0},
                    smooth=Smooth.None)}));
          end Electric_Fan;
        end Interfaces;

        package Tests
          extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Test_Delivered_Electric_Fan
          extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable Electric_Fan
              electric_Fan(
              v_nom=24,
              rotating_inertia=0.01,
              efficiency_characteristic=[0,1; 1000,1],
              flow_characteristic=[0,300; 0.1361,275; 0.2194,250; 0.4056,200; 0.4694,175;
                  0.5778,150; 0.6833,125; 0.7333,100; 0.8528,50; 0.9583,0])
              constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Electric_Fan
              annotation (Placement(transformation(extent={{-20,-24},{20,36}})));
            Modelica.Fluid.Sources.Boundary_pT fan_inlet(
              nPorts=1,
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              p=100000) annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));
            Modelica.Electrical.Spice3.Sources.V_constant v_constant(V=24)
              annotation (Placement(transformation(extent={{0,50},{20,70}})));
            Modelica.Blocks.Sources.Constant const(k=1)
              annotation (Placement(transformation(extent={{-80,60},{-60,80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{50,40},{70,60}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{-32,60},{-12,80}})));
            Modelica.Fluid.Sources.Boundary_pT fan_outlet(
              nPorts=1,
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              p=100100) annotation (Placement(transformation(extent={{78,-10},{58,10}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
          equation

            connect(const.y, electric_Machine_Bus.demand) annotation (Line(
                points={{-59,70},{-22,70}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ground.p, v_constant.n) annotation (Line(
                points={{60,60},{20,60}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(v_constant.p, electric_Fan.pin_p) annotation (Line(
                points={{0,60},{-40,60},{-40,20},{-20,20}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(v_constant.n, electric_Fan.pin_n) annotation (Line(
                points={{20,60},{40,60},{40,20},{20,20}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(electric_Machine_Bus, electric_Fan.electric_Machine_Bus) annotation (
                Line(
                points={{-22,70},{-12,70},{-12,42},{0,42},{0,29.1}},
                color={170,213,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fan_inlet.ports[1], electric_Fan.fluid_in) annotation (Line(
                points={{-60,0},{-20,0}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(electric_Fan.fluid_out, fan_outlet.ports[1]) annotation (Line(
                points={{20,0},{58,0}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics), Commands(file="Scripts/Electric_Fan_Test.mos"
                "plot_setup_electric_fan"));
          end Test_Delivered_Electric_Fan;

          model Test_Hydraulic_Fan_Assembly
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            Modelica.Blocks.Sources.Constant const1(k=1000)
              annotation (Placement(transformation(extent={{-100,60},{-80,80}})));
            Modelica.Mechanics.Rotational.Sources.Speed speed(exact=true)
              annotation (Placement(transformation(extent={{-70,60},{-50,80}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-60,-90},{-40,-70}})));
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion
              test_hydraulic_pump(vol_per_radian=7.53982E-06)
              annotation (Placement(transformation(extent={{10,30},{-10,50}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
                P_constant=100000000)
              annotation (Placement(transformation(extent={{-56,30},{-36,50}})));

            Modelica.Fluid.Sources.Boundary_pT In_Pressure_Source(
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              nPorts=1,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-60,-18},{-40,2}})));
            Modelica.Fluid.Sources.Boundary_pT Out_Pressure_Source(
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              use_p_in=false,
              nPorts=1,
              p=100100,
              T=293.15) annotation (Placement(transformation(extent={{60,-18},{40,2}})));
            replaceable Hydraulic_Fan_Assembly fan_Hydraulic_Drive_Asm(
              rotating_inertia=0.01,
              flow_characteristic=[1.212055423,1622.05821; 1.239810652,1612.01355;
                  1.270652418,1601.96889; 1.338504302,1556.7729; 1.409438002,1496.50992;
                  1.46494846,1436.24943; 1.501958579,1401.09561; 1.56364211,1335.81279;
                  1.616070751,1275.54981; 1.680836099,1200.22233; 1.74251963,1119.87252;
                  1.801116624,1039.52271; 1.835044926,999.34905; 1.884387031,929.04141;
                  1.930652039,858.73626; 1.970743974,803.49561; 2.017004262,733.19046;
                  2.06326927,657.86298; 2.100274669,607.64466],
              N_ref=418,
              efficiency_characteristic=[-100,1; 100,1],
              vol_per_radian_motor=7.53982E-06) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Hydraulic_Fan_Assembly
              annotation (Placement(transformation(extent={{-24,-32},{16,28}})));
            inner
            C2M2L_OM.MSL_Extend.Environments.Lumped_Thermal_Fixed_HTC_Infinite       env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
          equation

            connect(const1.y, speed.w_ref) annotation (Line(
                points={{-79,70},{-72,70}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_b, pressure_Source.hydraulic_port)
              annotation (Line(
                points={{-10,40},{-36,40}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(speed.flange, test_hydraulic_pump.flange) annotation (Line(
                points={{-50,70},{0,70},{0,50}},
                color={0,0,0},
                smooth=Smooth.None));
            connect(In_Pressure_Source.ports[1], fan_Hydraulic_Drive_Asm.fluid_in)
              annotation (Line(
                points={{-40,-8},{-24,-8}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fan_Hydraulic_Drive_Asm.fluid_out, Out_Pressure_Source.ports[1])
              annotation (Line(
                points={{16,-8},{40,-8}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_b, fan_Hydraulic_Drive_Asm.hyd_a) annotation (
               Line(
                points={{-10,40},{-24,40},{-24,12}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_a, fan_Hydraulic_Drive_Asm.hyd_b) annotation (
               Line(
                points={{10,40},{20,40},{20,12},{16,12}},
                color={255,0,128},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=20, Interval=0.01),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Bilge_Hydraulic_Basic_Test.mos"
                "Bilge_Hydraulic_Basic_Test",   file="Scripts/Hydraulic_Fan_Test.mos"
                "plot_setup"));
          end Test_Hydraulic_Fan_Assembly;

          model Test_Hydraulic_Fan_Assembly_Ricardo
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            Modelica.Blocks.Sources.Constant const1(k=1000)
              annotation (Placement(transformation(extent={{-100,60},{-80,80}})));
            Modelica.Mechanics.Rotational.Sources.Speed speed(exact=true)
              annotation (Placement(transformation(extent={{-70,60},{-50,80}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-60,-90},{-40,-70}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-24,-90},{-4,-70}})));
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion
              test_hydraulic_pump(vol_per_radian=7.53982E-06)
              annotation (Placement(transformation(extent={{10,30},{-10,50}})));
            C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
                P_constant=100000000)
              annotation (Placement(transformation(extent={{-56,30},{-36,50}})));

            Modelica.Fluid.Sources.Boundary_pT In_Pressure_Source(
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              nPorts=1,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-60,-18},{-40,2}})));
            Modelica.Fluid.Sources.Boundary_pT Out_Pressure_Source(
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              use_p_in=false,
              nPorts=1,
              p=100100,
              T=293.15) annotation (Placement(transformation(extent={{60,-18},{40,2}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Hydraulic_Fan_Assembly
              fan_Hydraulic_Drive_Asm(
              redeclare package Transported_Fluid =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              rotating_inertia=0.01,
              flow_characteristic=[1.212055423,1622.05821; 1.239810652,1612.01355;
                  1.270652418,1601.96889; 1.338504302,1556.7729; 1.409438002,1496.50992;
                  1.46494846,1436.24943; 1.501958579,1401.09561; 1.56364211,1335.81279;
                  1.616070751,1275.54981; 1.680836099,1200.22233; 1.74251963,1119.87252;
                  1.801116624,1039.52271; 1.835044926,999.34905; 1.884387031,929.04141;
                  1.930652039,858.73626; 1.970743974,803.49561; 2.017004262,733.19046;
                  2.06326927,657.86298; 2.100274669,607.64466],
              N_ref=418,
              efficiency_characteristic=[-100,1; 100,1],
              vol_per_radian_motor=7.53982E-06) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Hydraulic_Fan_Assembly
              annotation (Placement(transformation(extent={{-24,-32},{16,28}})));
          equation

            connect(const1.y, speed.w_ref) annotation (Line(
                points={{-79,70},{-72,70}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(world.frame_b,cutTorque. frame_a) annotation (Line(
                points={{-40,-80},{-24,-80}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_b, pressure_Source.hydraulic_port)
              annotation (Line(
                points={{-10,40},{-36,40}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(speed.flange, test_hydraulic_pump.flange) annotation (Line(
                points={{-50,70},{0,70},{0,50}},
                color={0,0,0},
                smooth=Smooth.None));
            connect(fan_Hydraulic_Drive_Asm.mount_01, cutTorque.frame_b) annotation (Line(
                points={{-4,-32},{-4,-80}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(In_Pressure_Source.ports[1], fan_Hydraulic_Drive_Asm.fluid_in)
              annotation (Line(
                points={{-40,-8},{-24,-8}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fan_Hydraulic_Drive_Asm.fluid_out, Out_Pressure_Source.ports[1])
              annotation (Line(
                points={{16,-8},{40,-8}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_b, fan_Hydraulic_Drive_Asm.hyd_a) annotation (
               Line(
                points={{-10,40},{-24,40},{-24,12}},
                color={255,0,128},
                smooth=Smooth.None));
            connect(test_hydraulic_pump.hyd_a, fan_Hydraulic_Drive_Asm.hyd_b) annotation (
               Line(
                points={{10,40},{20,40},{20,12},{16,12}},
                color={255,0,128},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=20, Interval=0.01),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Bilge_Hydraulic_Basic_Test.mos"
                "Bilge_Hydraulic_Basic_Test",   file="Scripts/Hydraulic_Fan_Test.mos"
                "plot_setup"));
          end Test_Hydraulic_Fan_Assembly_Ricardo;

          model Test_Delivered_Electric_Fan_Ricardo
          extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Electric_Fan
              electric_Fan(
              v_nom=24,
              rotating_inertia=0.01,
              efficiency_characteristic=[0,1; 1000,1],
              flow_characteristic=[0,300; 0.1361,275; 0.2194,250; 0.4056,200; 0.4694,175;
                  0.5778,150; 0.6833,125; 0.7333,100; 0.8528,50; 0.9583,0])
              constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Electric_Fan
              annotation (Placement(transformation(extent={{-20,-24},{20,36}})));
            Modelica.Fluid.Sources.Boundary_pT fan_inlet(
              nPorts=1,
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              p=100000) annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));
            Modelica.Electrical.Spice3.Sources.V_constant v_constant(V=24)
              annotation (Placement(transformation(extent={{0,50},{20,70}})));
            Modelica.Blocks.Sources.Constant const(k=1)
              annotation (Placement(transformation(extent={{-80,60},{-60,80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{50,40},{70,60}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{-32,60},{-12,80}})));
            Modelica.Fluid.Sources.Boundary_pT fan_outlet(
              nPorts=1,
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              p=100100) annotation (Placement(transformation(extent={{78,-10},{58,10}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
          equation

            connect(const.y, electric_Machine_Bus.demand) annotation (Line(
                points={{-59,70},{-22,70}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ground.p, v_constant.n) annotation (Line(
                points={{60,60},{20,60}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(v_constant.p, electric_Fan.pin_p) annotation (Line(
                points={{0,60},{-40,60},{-40,20},{-20,20}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(v_constant.n, electric_Fan.pin_n) annotation (Line(
                points={{20,60},{40,60},{40,20},{20,20}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(electric_Machine_Bus, electric_Fan.electric_Machine_Bus) annotation (
                Line(
                points={{-22,70},{-12,70},{-12,42},{0,42},{0,29.4}},
                color={170,213,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fan_inlet.ports[1], electric_Fan.fluid_in) annotation (Line(
                points={{-60,0},{-20,0}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(electric_Fan.fluid_out, fan_outlet.ports[1]) annotation (Line(
                points={{20,0},{58,0}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(world.frame_b, electric_Fan.mount_01) annotation (Line(
                points={{-20,-50},{0,-50},{0,-24}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(graphics), Commands(file="Scripts/Electric_Fan_Test.mos"
                "plot_setup_electric_fan"));
          end Test_Delivered_Electric_Fan_Ricardo;
        end Tests;
      end Fans;

      package Fill_and_Pressurization
      "Components for filling and maintaining pressurization of coolant system"
        extends Modelica.Icons.Package;

        model Degas_Bottle
        extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Cooling_System.Fill_and_Pressurization.Interfaces.Degas_Bottle;
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Cooling_System.Fill_and_Pressurization.Degas_Bottle
            degas_Bottle(p_degas_bottle=p_degas_bottle)
            annotation (Placement(transformation(extent={{-38,-60},{40,58}})));
          parameter Modelica.Media.Interfaces.PartialMedium.AbsolutePressure
            p_degas_bottle=1e5 "degas bottle operating pressure";
        equation

          connect(fluidAdaptor.fluidHeatflow_port, degas_Bottle.flowPort_a) annotation (
             Line(
              points={{-128,-80},{-84,-80},{-84,-82},{-38,-82},{-38,-12.8}},
              color={255,0,0},
              smooth=Smooth.None));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -320},{200,280}}), graphics));
        end Degas_Bottle;

        package Interfaces
         extends Modelica.Icons.InterfacesPackage;
          partial model Degas_Bottle

            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=180,
                  origin={-138,-80})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-210,-90},{-190,-70}})));
          equation
            connect(fluid_in, fluidAdaptor.fluid_port) annotation (Line(
                points={{-200,-80},{-148,-80}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -320},{200,280}}),
                                   graphics), Icon(coordinateSystem(preserveAspectRatio=
                      true, extent={{-200,-320},{200,280}}), graphics={
                  Rectangle(
                    extent={{-132,98},{128,-42}},
                    radius=40,
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None),
                  Rectangle(
                    extent={{-132,38},{128,-42}},
                    radius=40,
                    fillColor={170,213,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None),
                  Rectangle(
                    extent={{-132,38},{128,-2}},
                    fillColor={170,213,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None),
                  Rectangle(
                    extent={{-132,98},{128,-42}},
                    lineColor={0,0,0},
                    radius=40),
                  Ellipse(
                    extent={{-16,-12},{4,-32}},
                    lineColor={0,0,0},
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid),
                  Ellipse(
                    extent={{-52,4},{-32,-16}},
                    lineColor={0,0,0},
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid),
                  Ellipse(
                    extent={{4,24},{24,4}},
                    lineColor={0,0,0},
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid),
                  Line(
                    points={{-198,-80},{-30,-80},{-30,-42}},
                    color={170,213,255},
                    smooth=Smooth.None)}));
          end Degas_Bottle;
        end Interfaces;

        package Tests
          extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Boundary_Scalar_Port

            Modelica.Fluid.Sources.Boundary_pT boundary(
              nPorts=1,
              p=p,
              T=T,
              redeclare package Medium = Medium)
                        annotation (Placement(transformation(extent={{-102,-4},{-82,16}})));
            Modelica.Fluid.Interfaces.FluidPort_a port(redeclare package Medium
              =   C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{90,-8},{110,12}})));
            parameter Modelica.Media.Interfaces.PartialMedium.AbsolutePressure p=Medium.p_default
            "Fixed value of pressure";
            parameter Modelica.Media.Interfaces.PartialMedium.Temperature T=Medium.T_default
            "Fixed value of temperature";
            replaceable package Medium =
                C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant;
          equation
            connect(boundary.ports[1], port) annotation (Line(
                points={{-82,6},{10,6},{10,2},{100,2}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end Boundary_Scalar_Port;

          model Test_Degas_Bottle
          extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fill_and_Pressurization.Degas_Bottle
              degas_Bottle(p_degas_bottle=120000)
              annotation (Placement(transformation(extent={{-32,-18},{8,42}})));
            Boundary_Scalar_Port boundary_Scalar_Port(p=100000, T=293.15) annotation (
                Placement(transformation(rotation=0, extent={{-102,-4},{-82,16}})));
          equation

            connect(boundary_Scalar_Port.ports
                                  [1], degas_Bottle.fluid_in) annotation (Line(
                points={{-82,6},{-32,6}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end Test_Degas_Bottle;

          model Test_Degas_Bottle_original
          extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable Degas_Bottle degas_Bottle(p_degas_bottle=120000) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fill_and_Pressurization.Degas_Bottle(
                p_degas_bottle=120000)
              annotation (Placement(transformation(extent={{-32,-18},{8,42}})));
            Modelica.Fluid.Sources.Boundary_pT boundary(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-102,-4},{-82,16}})));
          equation

            connect(boundary.ports[1], degas_Bottle.fluid_in) annotation (Line(
                points={{-82,6},{-32,6}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end Test_Degas_Bottle_original;

          model Test_Degas_Bottle_Ricardo
          extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fill_and_Pressurization.Degas_Bottle
              degas_Bottle(p_degas_bottle=120000)
              annotation (Placement(transformation(extent={{-32,-18},{8,42}})));
            Modelica.Fluid.Sources.Boundary_pT boundary(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              p=100000,
              T=293.15) annotation (Placement(transformation(extent={{-102,-4},{-82,16}})));
          equation

            connect(boundary.ports[1], degas_Bottle.fluid_in) annotation (Line(
                points={{-82,6},{-32,6}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end Test_Degas_Bottle_Ricardo;
        end Tests;
      end Fill_and_Pressurization;

      package Radiators
        extends Modelica.Icons.Package;

        package Tests
          extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;
          model Test_Delivered_Radiator
          extends C2M2L_Ext.Icons.Simple_Test_Case;
            Modelica.Fluid.Sources.MassFlowSource_T
                                               Hot_Fluid_Inlet(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              m_flow=2,
              T=373.15)
              annotation (Placement(transformation(extent={{-80,60},{-60,80}})));
            Modelica.Fluid.Sources.Boundary_pT Hot_Fluid_Out(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              p=100000,
              T=373.15,
              nPorts=1)
              annotation (Placement(transformation(extent={{126,72},{106,92}})));
            Modelica.Fluid.Sources.Boundary_pT Cold_Fluid_Out(
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              p=100000,
              T=283.15,
              nPorts=1)
              annotation (Placement(transformation(extent={{124,30},{104,50}})));
            Modelica.Fluid.Sources.MassFlowSource_T
                                               Cold_Fluid_In(
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              m_flow=9,
              T=283.15,
              nPorts=1)
              annotation (Placement(transformation(extent={{-80,21},{-60,41}})));
             // T_start_hot_fluid=373.15,
             // T_start_cold_fluid=303.15

            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-90,-56},{-70,-36}})));
            replaceable Radiator_Main_Cooling_Pack radiator_Main_Cooling_Pack(
              loss_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
              loss_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
              effec_spec=C2M2L_Ext.Fluid.Base_Classes.Effec_Spec.Q_per_ITD_Area,
              flow_effec_spec=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.volume_flow_rate,
              effectiveness_table=[0,0.322,0.646,0.968,1.292,1.938,2.586,3.232; 0.495,
                  0.93,0.81,0.69,0.66,0.75,0.81,0.84; 0.99,0.96,0.9,0.82,0.74,0.62,0.58,
                  0.63; 1.485,0.97,0.93,0.87,0.81,0.7,0.6,0.53; 1.98,0.98,0.95,0.89,0.84,
                  0.74,0.65,0.58; 2.97,0.99,0.99,0.96,0.93,0.85,0.77,0.7; 3.9675,1,0.99,
                  0.98,0.95,0.89,0.83,0.77; 4.9575,1,0.99,0.98,0.96,0.91,0.86,0.81],
              pressure_drop_b=[0,0; 0.67,23.7931452; 1.34,67.5075852; 2.01,124.430031;
                  2.68,191.9688408; 3.35,268.7501322; 4.02,353.7122688; 4.68,446.1058602;
                  5.35,545.4000882; 6.02,641.3220594; 6.69,740.647512],
              pressure_drop_a=[0,0; 0.00075,6143.207; 0.00095,8273.680; 0.00115,11445.257;
                  0.00140,16409.465; 0.00165,21925.252; 0.00190,28337.354; 0.00200,
                  31424.000; 0.00240,44104.464],
              flow_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.volume_flow_rate,
              flow_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.volume_flow_rate,
              core_length=0.59,
              core_width=0.45,
              core_depth=0.034,
              ref_core_length=0.59,
              ref_core_width=0.45,
              ref_core_depth=0.034) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Radiators.Radiator_Main_Cooling_Pack(
              loss_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
              loss_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
              effec_spec=C2M2L_Ext.Fluid.Base_Classes.Effec_Spec.Q_per_ITD_Area,
              flow_effec_spec=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.volume_flow_rate,
              effectiveness_table=[0,0.322,0.646,0.968,1.292,1.938,2.586,3.232; 0.495,
                  0.93,0.81,0.69,0.66,0.75,0.81,0.84; 0.99,0.96,0.9,0.82,0.74,0.62,0.58,
                  0.63; 1.485,0.97,0.93,0.87,0.81,0.7,0.6,0.53; 1.98,0.98,0.95,0.89,0.84,
                  0.74,0.65,0.58; 2.97,0.99,0.99,0.96,0.93,0.85,0.77,0.7; 3.9675,1,0.99,
                  0.98,0.95,0.89,0.83,0.77; 4.9575,1,0.99,0.98,0.96,0.91,0.86,0.81],
              pressure_drop_b=[0,0; 0.67,23.7931452; 1.34,67.5075852; 2.01,124.430031;
                  2.68,191.9688408; 3.35,268.7501322; 4.02,353.7122688; 4.68,446.1058602;
                  5.35,545.4000882; 6.02,641.3220594; 6.69,740.647512],
              pressure_drop_a=[0,0; 0.00075,6143.207; 0.00095,8273.680; 0.00115,11445.257;
                  0.00140,16409.465; 0.00165,21925.252; 0.00190,28337.354; 0.00200,
                  31424.000; 0.00240,44104.464],
              flow_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.volume_flow_rate,
              flow_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.volume_flow_rate,
              core_length=0.59,
              core_width=0.45,
              core_depth=0.034,
              ref_core_length=0.59,
              ref_core_width=0.45,
              ref_core_depth=0.034)
              annotation (Placement(transformation(extent={{-6,20},{34,80}})));
          equation

            connect(Hot_Fluid_Inlet.ports[1], radiator_Main_Cooling_Pack.hot_fluid_in)
              annotation (Line(
                points={{-60,70},{-56,70},{-56,75.2},{-26,75.2}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(Cold_Fluid_In.ports[1], radiator_Main_Cooling_Pack.cold_fluid_in)
              annotation (Line(
                points={{-60,31},{-54,31},{-54,27.2},{-26,27.2}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(radiator_Main_Cooling_Pack.hot_fluid_out, Hot_Fluid_Out.ports[1])
              annotation (Line(
                points={{54,75.2},{70,75.2},{70,82},{106,82}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(radiator_Main_Cooling_Pack.cold_fluid_out, Cold_Fluid_Out.ports[1])
              annotation (Line(
                points={{54,27.2},{70,27.2},{70,40},{104,40}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics), Commands(file="Scripts/Radiator_Test.mos"
                "plot_setup"));
          end Test_Delivered_Radiator;

          model Test_Delivered_Radiator_Ricardo
          extends C2M2L_Ext.Icons.Simple_Test_Case;
            Modelica.Fluid.Sources.MassFlowSource_T
                                               Hot_Fluid_Inlet(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              nPorts=1,
              m_flow=2,
              T=373.15)
              annotation (Placement(transformation(extent={{-80,60},{-60,80}})));
            Modelica.Fluid.Sources.Boundary_pT Hot_Fluid_Out(
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              p=100000,
              T=373.15,
              nPorts=1)
              annotation (Placement(transformation(extent={{126,72},{106,92}})));
            Modelica.Fluid.Sources.Boundary_pT Cold_Fluid_Out(
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              p=100000,
              T=283.15,
              nPorts=1)
              annotation (Placement(transformation(extent={{124,30},{104,50}})));
            Modelica.Fluid.Sources.MassFlowSource_T
                                               Cold_Fluid_In(
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              m_flow=9,
              T=283.15,
              nPorts=1)
              annotation (Placement(transformation(extent={{-80,21},{-60,41}})));
             // T_start_hot_fluid=373.15,
             // T_start_cold_fluid=303.15

            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-90,-56},{-70,-36}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Radiators.Radiator_Main_Cooling_Pack
              radiator_Main_Cooling_Pack(
              redeclare package Cold_Fluid =
                C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
              redeclare package Hot_Fluid =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              loss_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
              loss_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
              effec_spec=C2M2L_Ext.Fluid.Base_Classes.Effec_Spec.Q_per_ITD_Area,
              flow_effec_spec=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.volume_flow_rate,
              effectiveness_table=[0,0.322,0.646,0.968,1.292,1.938,2.586,3.232; 0.495,
                  0.93,0.81,0.69,0.66,0.75,0.81,0.84; 0.99,0.96,0.9,0.82,0.74,0.62,0.58,
                  0.63; 1.485,0.97,0.93,0.87,0.81,0.7,0.6,0.53; 1.98,0.98,0.95,0.89,0.84,
                  0.74,0.65,0.58; 2.97,0.99,0.99,0.96,0.93,0.85,0.77,0.7; 3.9675,1,0.99,
                  0.98,0.95,0.89,0.83,0.77; 4.9575,1,0.99,0.98,0.96,0.91,0.86,0.81],
              pressure_drop_b=[0,0; 0.67,23.7931452; 1.34,67.5075852; 2.01,124.430031;
                  2.68,191.9688408; 3.35,268.7501322; 4.02,353.7122688; 4.68,446.1058602;
                  5.35,545.4000882; 6.02,641.3220594; 6.69,740.647512],
              pressure_drop_a=[0,0; 0.00075,6143.207; 0.00095,8273.680; 0.00115,11445.257;
                  0.00140,16409.465; 0.00165,21925.252; 0.00190,28337.354; 0.00200,
                  31424.000; 0.00240,44104.464],
              flow_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.volume_flow_rate,
              flow_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.volume_flow_rate,
              core_length=0.59,
              core_width=0.45,
              core_depth=0.034,
              ref_core_length=0.59,
              ref_core_width=0.45,
              ref_core_depth=0.034)
              annotation (Placement(transformation(extent={{-6,20},{34,80}})));
          equation

            connect(Hot_Fluid_Inlet.ports[1], radiator_Main_Cooling_Pack.hot_fluid_in)
              annotation (Line(
                points={{-60,70},{-56,70},{-56,60},{-6,60}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(Cold_Fluid_In.ports[1], radiator_Main_Cooling_Pack.cold_fluid_in)
              annotation (Line(
                points={{-60,31},{-54,31},{-54,44},{-6,44}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(radiator_Main_Cooling_Pack.hot_fluid_out, Hot_Fluid_Out.ports[1])
              annotation (Line(
                points={{34,60},{70,60},{70,82},{106,82}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(radiator_Main_Cooling_Pack.cold_fluid_out, Cold_Fluid_Out.ports[1])
              annotation (Line(
                points={{34,44},{70,44},{70,40},{104,40}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics), Commands(file="Scripts/Radiator_Test.mos"
                "plot_setup"));
          end Test_Delivered_Radiator_Ricardo;
        end Tests;

        package Interfaces
        extends Modelica.Icons.InterfacesPackage;

          partial model Radiator_Main_Cooling_Pack

          Modelica.Fluid.Interfaces.FluidPort_a hot_fluid_in(redeclare package
              Medium =
                C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            "Port that nominally flows fluid B into the container"
            annotation (Placement(transformation(extent={{-210,74},{-190,94}})));
          Modelica.Fluid.Interfaces.FluidPort_a cold_fluid_in(redeclare package
              Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
            "Port that nominally flows fluid into the container"
            annotation (Placement(transformation(extent={{-210,-86},{-190,-66}})));
          Modelica.Fluid.Interfaces.FluidPort_b hot_fluid_out(redeclare package
              Medium =
                C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            "Port that nominally flows fluid out of the container"
            annotation (Placement(transformation(extent={{190,74},{210,94}})));
          Modelica.Fluid.Interfaces.FluidPort_b cold_fluid_out(redeclare
              package Medium =
                       C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
            "Port that nominally flows fluid out of the container"
            annotation (Placement(transformation(extent={{190,-86},{210,-66}})));
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
              HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
              package Medium =
                C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                        annotation (
              Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=180,
                origin={-162,84})));
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
              HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
              package Medium =
                C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                        annotation (
              Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=0,
                origin={160,84})));
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor2(
              HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                        annotation (
              Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=180,
                origin={-164,-76})));
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor3(
              HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
              redeclare package Medium = C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                        annotation (
              Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=0,
                origin={162,-76})));
          equation
          connect(fluidAdaptor1.fluid_port, hot_fluid_out) annotation (Line(
              points={{170,84},{200,84}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(hot_fluid_in, fluidAdaptor.fluid_port) annotation (Line(
              points={{-200,84},{-172,84}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(cold_fluid_in, fluidAdaptor2.fluid_port) annotation (Line(
              points={{-200,-76},{-174,-76}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(fluidAdaptor3.fluid_port, cold_fluid_out) annotation (Line(
              points={{172,-76},{200,-76}},
              color={0,127,255},
              smooth=Smooth.None));
            annotation (Dialog(tab="Heat Exchanger", group="Geometry"),
                          choicesAllMatching=true, Dialog(tab="Fluid Model"),
                          choicesAllMatching=true, Dialog(tab="Fluid Model"),
                      Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -320},{200,280}}),
                                 graphics),
            Icon(graphics={
                Rectangle(extent={{-140,80},{140,-80}}, lineColor={0,0,0},
                  fillColor={250,250,250},
                  fillPattern=FillPattern.Solid),
                Line(
                  points={{-202,84},{-120,84},{-120,32},{-80,-10},{-40,30},{0,
                      -10},{38,30},{80,-10},{120,30},{120,84},{198,84}},
                  color={255,0,0},
                  smooth=Smooth.None,
                  thickness=0.5),
                Line(
                  points={{-202,-76},{-120,-76},{-120,10},{-78,-32},{-40,10},{0,
                      -30},{40,10},{80,-30},{120,10},{120,-76},{198,-76}},
                  color={0,128,255},
                  smooth=Smooth.None,
                  thickness=0.5),
                Polygon(
                  points={{20,-46},{60,-61},{20,-76},{20,-46}},
                  lineColor={0,128,255},
                  smooth=Smooth.None,
                  fillColor={0,128,255},
                  fillPattern=FillPattern.Solid,
                  visible=showDesignFlowDirection),
                Polygon(
                  points={{20,-51},{50,-61},{20,-71},{20,-51}},
                  lineColor={255,255,255},
                  smooth=Smooth.None,
                  fillColor={250,250,250},
                  fillPattern=FillPattern.Solid,
                  visible=allowFlowReversal),
                Line(
                  points={{55,-61},{-60,-61}},
                  color={0,128,255},
                  smooth=Smooth.None,
                  visible=showDesignFlowDirection),
                Polygon(
                  points={{20,76},{60,61},{20,46},{20,76}},
                  lineColor={255,0,0},
                  smooth=Smooth.None,
                  fillColor={255,0,0},
                  fillPattern=FillPattern.Solid,
                  visible=showDesignFlowDirection),
                Polygon(
                  points={{20,71},{50,61},{20,51},{20,71}},
                  lineColor={255,255,255},
                  smooth=Smooth.None,
                  fillColor={250,250,250},
                  fillPattern=FillPattern.Solid,
                  visible=allowFlowReversal),
                Line(
                  points={{55,61},{-60,61}},
                  color={255,0,0},
                  smooth=Smooth.None,
                  visible=showDesignFlowDirection),
                Text(
                  extent={{-100,80},{-60,40}},
                  lineColor={255,0,0},
                  fillColor={255,0,0},
                  fillPattern=FillPattern.Solid,
                  textString="a"),
                Text(
                  extent={{-100,-40},{-60,-80}},
                  lineColor={0,128,255},
                  fillColor={255,0,0},
                  fillPattern=FillPattern.Solid,
                  textString="b")}));
          end Radiator_Main_Cooling_Pack;
        end Interfaces;

        model Radiator_Main_Cooling_Pack
        "Large radiator usually intended to cool the main vehicle power plant"
          extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Cooling_System.Radiators.Interfaces.Radiator_Main_Cooling_Pack;

          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Cooling_System.Radiators.Radiator_Main_Cooling_Pack
            radiator_Main_Cooling_Pack(
            medium_cold_fluid=medium_cold_fluid,
            medium_hot_fluid=medium_hot_fluid,
            effectiveness_table=effectiveness_table,
            core_length=core_length,
            core_width=core_width,
            core_depth=core_depth,
            ref_core_length=ref_core_length,
            ref_core_width=ref_core_width,
            ref_core_depth=ref_core_depth,
            pressure_drop_a=pressure_drop_a,
            pressure_drop_b=pressure_drop_b,
            loss_spec_side_a=loss_spec_side_a,
            loss_spec_side_b=loss_spec_side_b,
            flow_spec_side_a=flow_spec_side_a,
            flow_spec_side_b=flow_spec_side_b,
            effec_spec=effec_spec,
            flow_effec_spec=flow_effec_spec,
            area_ref_hot=area_ref_hot)
            annotation (Placement(transformation(extent={{-30,-28},{30,40}})));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium_cold_fluid=
              Modelica.Thermal.FluidHeatFlow.Media.Air_30degC();
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium_hot_fluid=
              Modelica.Thermal.FluidHeatFlow.Media.Water();
          parameter SI.Area area_ref_hot=1 "Hot Side Reference area";
          parameter Real effectiveness_table[:,:]=fill(
              0.0,
              0,
              2)
          "2D Table [side_A_mflow (kg/s), side_B_mflow (kg/s), (Q/ITD.A) (W/m2.degC)]";
          parameter
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Effec_Spec
            effec_spec "choose effectiveness type";
          parameter
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec
            flow_effec_spec "choose flow type for heat rejection map";
          parameter SI.Length core_length "Length (along tubes) of the core";
          parameter SI.Length core_width "Width (across tubes) of the core";
          parameter SI.Length core_depth=1 "Depth (or thickness) of the core";
          parameter SI.Length ref_core_length
          "Length (along tubes) of the core";
          parameter SI.Length ref_core_width "Width (across tubes) of the core";
          parameter SI.Length ref_core_depth=1
          "Depth (or thickness) of the core";
          parameter Real pressure_drop_a[:,:]=[0.67,23.7931452; 1.34,67.5075852; 2.01,
              124.430031; 2.68,191.9688408; 3.35,268.7501322; 4.02,353.7122688; 4.68,
              446.1058602; 5.35,545.4000882; 6.02,641.3220594; 6.69,740.647512]
          "dp (Pa) vs. mass flow (kg/s)";
          parameter Real pressure_drop_b[:,:]=[0.67,23.7931452; 1.34,67.5075852; 2.01,
              124.430031; 2.68,191.9688408; 3.35,268.7501322; 4.02,353.7122688; 4.68,
              446.1058602; 5.35,545.4000882; 6.02,641.3220594; 6.69,740.647512]
          "dp (Pa) vs. mass flow (kg/s)";
          parameter
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Loss_Spec
            loss_spec_side_a "choose loss spec for side a";
          parameter
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Loss_Spec
            loss_spec_side_b "choose loss spec for side b";
          parameter
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec
            flow_spec_side_a "choose flow spec for side a";
          parameter
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec
            flow_spec_side_b "choose flow spec for side b";
        equation
          connect(fluidAdaptor.fluidHeatflow_port, radiator_Main_Cooling_Pack.hot_fluid_in)
            annotation (Line(
              points={{-152,84},{-106,84},{-106,33.2},{-60,33.2}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(fluidAdaptor2.fluidHeatflow_port, radiator_Main_Cooling_Pack.cold_fluid_in)
            annotation (Line(
              points={{-154,-76},{-106,-76},{-106,-21.2},{-60,-21.2}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(radiator_Main_Cooling_Pack.hot_fluid_out, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{60,33.2},{108,33.2},{108,84},{150,84}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(radiator_Main_Cooling_Pack.cold_fluid_out, fluidAdaptor3.fluidHeatflow_port)
            annotation (Line(
              points={{60,-21.2},{82,-21.2},{82,-22},{108,-22},{108,-76},{152,-76}},
              color={255,0,0},
              smooth=Smooth.None));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -320},{200,280}}), graphics));
        end Radiator_Main_Cooling_Pack;
      end Radiators;

      package Water_Pumps
        extends Modelica.Icons.Package;

        model Ancilliary_Pump
        "Standalone pump used to provide cooling flows independantly (e.g. not reliant on main water pump in a prime-mover) "
          extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Cooling_System.Water_Pumps.Interfaces.Ancilliary_Pump;
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Cooling_System.Water_Pumps.Ancilliary_Pump
            ancilliary_Pump(
            useSupport=false,
            consider_gyroscopic_effects=consider_gyroscopic_effects,
            N_ref=N_ref,
            N_switch=N_switch,
            rotating_inertia=rotating_inertia,
            efficiency_characteristic=efficiency_characteristic,
            flow_characteristic=flow_characteristic,
            pow_max=pow_max,
            trq_max=trq_max,
            v_nom=v_nom,
            medium=Modelica.Thermal.FluidHeatFlow.Media.Water())
            annotation (Placement(transformation(extent={{-42,-62},{40,60}})));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=
              Modelica.Thermal.FluidHeatFlow.Media.Medium()
          "Medium in the component";
          parameter Boolean useSupport=false
          "= true, if support flange enabled, otherwise implicitly grounded";
          parameter Boolean consider_gyroscopic_effects=false
          "if true, take into account gyroscopic reaction forces";
          parameter SI.AngularVelocity N_ref=500
          "Rotational speed at which flow versus pressure data is provided";
          parameter SI.AngularVelocity N_switch=N_ref*0.01
          "Rotational speed below which flow no longer follows scaling laws";
          parameter SI.Inertia rotating_inertia=0.01
          "Moment of inertia of device around its axis of rotation";
          parameter Real efficiency_characteristic[:,:]=[0,1; 10,1]
          "Table with efficiency vs. volume flow rate(m3/s) at N_ref";
          parameter Real flow_characteristic[:,:]=[0.00083259501,172823.2968;
              0.00087131978,170206.0469; 0.00095845365,162573.5506; 0.00098265505,
              160211.4067; 0.00106011088,152651.3054; 0.00111819802,145782.0587;
              0.00115692279,141202.5609; 0.00123921133,132120.0971; 0.00125373469,
              130517.0660; 0.00132150618,122884.5697; 0.00135539193,118774.6049;
              0.00138443234,115252.0734; 0.00145220383,107619.5771; 0.00147640523,
              105165.7329; 0.00151997532,100749.6409; 0.00158774050,92913.7492;
              0.00159258583,92353.8949; 0.00167003535,83194.8994; 0.00173780684,
              73933.8614; 0.00174264586,73272.6541; 0.00186850449,56481.0243]
          "Table with volume flow rate[m3] and pressure rise[pa] columns at N_ref";
          parameter SI.Power pow_max=100;
          parameter SI.Torque trq_max=10 "Maximum output torque";
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at";
        equation
          connect(ancilliary_Pump.pin_p, pin_p) annotation (Line(
              points={{-42,27.4667},{-158,27.4667},{-158,120},{-200,120}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(ancilliary_Pump.pin_n, pin_n) annotation (Line(
              points={{40.41,27.4667},{124,27.4667},{124,120},{200,120}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(fluidAdaptor.fluidHeatflow_port, ancilliary_Pump.flowPort_a)
            annotation (Line(
              points={{-154,-80},{-78,-80},{-78,-13.2},{-42,-13.2}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(ancilliary_Pump.flowPort_b, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{40,-13.2},{78,-13.2},{78,-80},{148,-80}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(ancilliary_Pump.demand, electric_Machine_Bus.demand) annotation (Line(
              points={{-21.5,61.6267},{-21.5,152.813},{2,152.813},{2,244}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(ancilliary_Pump.tau, electric_Machine_Bus.tau) annotation (Line(
              points={{-9.2,61.22},{-9.2,153.61},{2,153.61},{2,244}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(ancilliary_Pump.w, electric_Machine_Bus.w) annotation (Line(
              points={{-1,61.22},{-1,153.61},{2,153.61},{2,244}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(ancilliary_Pump.i, electric_Machine_Bus.i) annotation (Line(
              points={{7.2,61.22},{7.2,153.61},{2,153.61},{2,244}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(ancilliary_Pump.v, electric_Machine_Bus.v) annotation (Line(
              points={{15.4,61.22},{15.4,153.61},{2,153.61},{2,244}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -320},{200,280}}), graphics));
        end Ancilliary_Pump;

        package Interfaces
        extends Modelica.Icons.InterfacesPackage;
          partial model Ancilliary_Pump

            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-210,-90},{-190,-70}})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            "Port that nominally flows fluid out of the container"
              annotation (Placement(transformation(extent={{190,-90},{210,-70}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{190,110},{210,130}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus
                                                       electric_Machine_Bus
              annotation (Placement(transformation(extent={{-8,234},{12,254}}),
                  iconTransformation(extent={{-10,204},{10,224}})));
            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-210,110},{-190,130}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=180,
                  origin={-164,-80})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                          annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=0,
                  origin={158,-80})));
          equation
            connect(fluid_in, fluidAdaptor.fluid_port) annotation (Line(
                points={{-200,-80},{-174,-80}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{168,-80},{200,-80}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -320},{200,280}}), graphics), Icon(coordinateSystem(
                    preserveAspectRatio=true, extent={{-200,-320},{200,280}}), graphics={
                  Polygon(
                    points={{40,-40},{80,-55},{40,-70},{40,-40}},
                    lineColor={0,128,255},
                    smooth=Smooth.None,
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid,
                    visible=showDesignFlowDirection),
                  Polygon(
                    points={{40,-45},{70,-55},{40,-65},{40,-45}},
                    lineColor={255,255,255},
                    smooth=Smooth.None,
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid,
                    visible=allowFlowReversal),
                  Line(
                    points={{75,-55},{-40,-55}},
                    color={0,128,255},
                    smooth=Smooth.None,
                    visible=showDesignFlowDirection),
                  Ellipse(
                    extent={{-112,106},{114,-126}},
                    lineColor={0,0,0},
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid),
                  Line(
                    points={{-6,92},{-46,10},{34,-30},{6,-106}},
                    color={255,255,255},
                    smooth=Smooth.Bezier),
                  Line(
                    points={{98,-4},{14,34},{-26,-46},{-92,-28}},
                    color={255,255,255},
                    smooth=Smooth.Bezier),
                  Line(
                    points={{62,64},{-18,42},{8,-46},{-60,-86}},
                    color={255,255,255},
                    smooth=Smooth.Bezier),
                  Ellipse(extent={{-146,138},{148,-156}},
                                                      lineColor={0,0,0}),
                  Ellipse(
                    extent={{-28,18},{32,-42}},
                    lineColor={0,0,0},
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid),
                  Line(
                    points={{53,71},{-15,43},{17,-45},{-77,-73}},
                    color={255,255,255},
                    smooth=Smooth.Bezier,
                    origin={-3,-11},
                    rotation=90),
                  Line(
                    points={{-200,-80},{-170,-80},{-170,14},{-144,14}},
                    color={0,0,0},
                    smooth=Smooth.None),
                  Line(
                    points={{148,6},{176,6},{176,-82},{202,-82}},
                    color={0,0,0},
                    smooth=Smooth.None),
                  Polygon(
                    points={{-186,-154},{-186,-174},{-130,-174},{-130,-186},{-112,-164},{
                        -130,-142},{-130,-154},{-186,-154}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid),
                  Polygon(
                    points={{120,-156},{120,-176},{176,-176},{176,-188},{194,-166},{176,
                        -144},{176,-156},{120,-156}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid)}));
          end Ancilliary_Pump;
        end Interfaces;

        package Tests
          extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Test_Delivered_Electric_Pump
          extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable Ancilliary_Pump ancilliary_Pump constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Water_Pumps.Ancilliary_Pump
              annotation (Placement(transformation(extent={{-20,-14},{20,46}})));
            Modelica.Fluid.Sources.Boundary_pT pump_inlet(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              p=100000) annotation (Placement(transformation(extent={{-60,0},{-40,20}})));
            Modelica.Fluid.Sources.Boundary_pT pump_outlet(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              p=105000) annotation (Placement(transformation(extent={{62,0},{42,20}})));
            Modelica.Electrical.Spice3.Sources.V_constant v_constant(V=24)
              annotation (Placement(transformation(extent={{-12,90},{8,110}})));
            inner Modelica.Mechanics.MultiBody.World world
              annotation (Placement(transformation(extent={{52,-66},{72,-46}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{-70,52},{-50,72}})));
            Modelica.Blocks.Sources.Constant const(k=1)
              annotation (Placement(transformation(extent={{-100,60},{-80,80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{48,46},{68,66}})));
          equation

            connect(pump_inlet.ports[1], ancilliary_Pump.fluid_in) annotation (Line(
                points={{-40,10},{-20,10}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ancilliary_Pump.fluid_out, pump_outlet.ports[1]) annotation (Line(
                points={{20,10},{42,10}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(v_constant.p, ancilliary_Pump.pin_p) annotation (Line(
                points={{-12,100},{-36,100},{-36,30},{-20,30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(v_constant.n, ancilliary_Pump.pin_n) annotation (Line(
                points={{8,100},{36,100},{36,30},{20,30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(electric_Machine_Bus, ancilliary_Pump.electric_Machine_Bus)
              annotation (Line(
                points={{-60,62},{0,62},{0,39.4}},
                color={170,213,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(const.y, electric_Machine_Bus.demand) annotation (Line(
                points={{-79,70},{-70,70},{-70,62},{-60,62}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ground.p, v_constant.n) annotation (Line(
                points={{58,66},{34,66},{34,100},{8,100}},
                color={0,0,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics), Commands(file="Scripts/Electric_Pump_Test.mos"
                "plot_setup_electric_pump"));
          end Test_Delivered_Electric_Pump;

          model Test_Delivered_Electric_Pump_Ricardo
          extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Water_Pumps.Ancilliary_Pump
              ancilliary_Pump constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Water_Pumps.Ancilliary_Pump
              annotation (Placement(transformation(extent={{-20,-14},{20,46}})));
            Modelica.Fluid.Sources.Boundary_pT pump_inlet(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              p=100000) annotation (Placement(transformation(extent={{-60,0},{-40,20}})));
            Modelica.Fluid.Sources.Boundary_pT pump_outlet(
              nPorts=1,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
              p=105000) annotation (Placement(transformation(extent={{62,0},{42,20}})));
            Modelica.Electrical.Spice3.Sources.V_constant v_constant(V=24)
              annotation (Placement(transformation(extent={{-12,90},{8,110}})));
            inner Modelica.Mechanics.MultiBody.World world
              annotation (Placement(transformation(extent={{52,-66},{72,-46}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{-70,52},{-50,72}})));
            Modelica.Blocks.Sources.Constant const(k=1)
              annotation (Placement(transformation(extent={{-100,60},{-80,80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{48,46},{68,66}})));
          equation

            connect(pump_inlet.ports[1], ancilliary_Pump.fluid_in) annotation (Line(
                points={{-40,10},{-20,10}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ancilliary_Pump.fluid_out, pump_outlet.ports[1]) annotation (Line(
                points={{20,10},{42,10}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(v_constant.p, ancilliary_Pump.pin_p) annotation (Line(
                points={{-12,100},{-36,100},{-36,30},{-20,30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(v_constant.n, ancilliary_Pump.pin_n) annotation (Line(
                points={{8,100},{36,100},{36,30},{20,30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(ancilliary_Pump.mount_01, world.frame_b) annotation (Line(
                points={{0,-14},{36,-14},{36,-56},{72,-56}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(electric_Machine_Bus, ancilliary_Pump.electric_Machine_Bus)
              annotation (Line(
                points={{-60,62},{0,62},{0,39.4}},
                color={170,213,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(const.y, electric_Machine_Bus.demand) annotation (Line(
                points={{-79,70},{-70,70},{-70,62},{-60,62}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ground.p, v_constant.n) annotation (Line(
                points={{58,66},{34,66},{34,100},{8,100}},
                color={0,0,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics), Commands(file="Scripts/Electric_Pump_Test.mos"
                "plot_setup_electric_pump"));
          end Test_Delivered_Electric_Pump_Ricardo;
        end Tests;
      end Water_Pumps;
    end Cooling_System;

    package Drive_Line "Building blocks related to the vehicle drive line"
      extends Modelica.Icons.Package;

      package Cross_Drive_Transmission
      "Cross drive transmission implementations"
          extends Modelica.Icons.Package;

        model Cross_Drive_with_TC
          extends Interfaces.Cross_Drive_with_TC(world(driveTrainMechanics3D=false));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=Modelica.Thermal.FluidHeatFlow.Media.Water()
          "Medium in the component"
                annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fluid Model"));
          parameter SI.Area case_heat_transfer_area=1.0
          "Area available for heat to transfer through case"
            annotation (Dialog(tab="Thermal Model"));
          parameter SI.Thickness case_heat_transfer_thickness=0.005
          "Effective case thickness for heat transfer"
            annotation (Dialog(tab="Thermal Model"));
          parameter SI.ThermalConductivity case_thermal_conductivity=50
          "Conductivity of case"   annotation (Dialog(tab="Thermal Model"));
          parameter Real hx_dp_a=1000 "HX quadratic loss term"
            annotation (Dialog(tab="Fluid Model"));
          parameter Real hx_dp_b=100 "HX linear loss term"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area HX_internal_area=1
          "Heat transfer area internal to the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.CoefficientOfHeatTransfer HX_internal_HTC=2000
          "heat transfer coefficient internal to the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area HX_external_area=1.0
          "Area available for convective heat transferon the outside of the HX"
                                                                                  annotation (Dialog(tab="Fluid Model"));
        //General
         parameter SI.Inertia moi_rotational = 0.1 "Trans Inertia";

        //range pack
      public
          parameter Integer num_gears_RP=4
          "The number of gear ratios in the contained range pack (including reverse if applicable)"
            annotation (Dialog(tab="Range Pack"));
          parameter Integer gear_nums_RP[num_gears_RP]={1,2,3,4}
          "Identifiers for the contained gears.  E.g {-1,1,2,3,4} for a pack with 1 reverse and 4 forward gears"
            annotation (Dialog(tab="Range Pack"));
          parameter Real lossTables_RP[num_gears_RP,:,5]={[0,0.95,0.95,0,0],[0,0.95,0.95,0,0],
              [0,0.95,0.95,0,0],[0,0.95,0.95,0,0]}
          "Array of arrays of mesh efficiencies and bearing friction depending on speed for each contained gear"
            annotation (Dialog(tab="Range Pack"));
          parameter SI.Torque locked_max_torque_RP=10000
          "Max torque transmitted when gear sync clutches are locked"
            annotation (Dialog(tab="Range Pack"));
          parameter SI.Torque synchronizer_max_torque_RP=4000
          "Max torque transmitted while synchronizing each gear"
            annotation (Dialog(tab="Range Pack"));
          parameter Real ratios_RP[num_gears_RP]={3.2,2.2,1.5,0.9}
          "Transmission ratios (flange_a.phi/flange_b.phi) of contained gears"
            annotation (Dialog(tab="Range Pack"));
        //   parameter SI.Temperature initial_T=Medium.T_default
        //     "Initial temperature of the contained environment";

        //Torque Converter Inputs
            parameter Real powerCoeffTable_TC[:, 2]=
            [-10, 0.2; 0, 0.2; 0.00001, 0.2; 0.1, 0.2488; 0.2, 0.2712; 0.3, 0.2872; 0.4, 0.2968; 0.5, 0.3; 0.6, 0.2968; 0.7, 0.2872; 0.8, 0.2712; 0.9, 0.2488; 1, 0.2]
          "Table for power coefficientas a function of speed ratio"                                                                                                     annotation (Dialog(tab="Torque Converter"));
            parameter Real torqueConverTable_TC[:, 2]=
            [-10, 2;  0, 2; 0.00001, 2; 0.1, 1.9; 0.2, 1.8; 0.3, 1.7; 0.4, 1.6; 0.5, 1.5; 0.6, 1.4; 0.7, 1.3; 0.8, 1.0; 0.9, 0.90; 0.95, 0.85; 0.985, 0.8; 1, 0.8; 10, 0.0]
          "Torque Ratio as a function of speed ratio"                                                                                                     annotation (Dialog(tab="Torque Converter"));
            parameter SI.Length Diameter_TC = 0.2 "Torque Converter Diameter"
                                                   annotation (Dialog(tab="Torque Converter"));
            parameter SI.Density fluidDensity_TC = 850
          "Density of transmission fluid"                                              annotation (Dialog(tab="Torque Converter"));

              // TC Lockup clutch gubbins
              parameter SI.Torque locked_max_torque_TC= 550
          "Max torque transmitted when TC clutch is locked"      annotation (Dialog(group="Lock-up Clutch",tab="Torque Converter"));
              parameter SI.Torque synchronizer_max_torque_TC=400
          "Max torque transmitted while synchronizing impeller & turbine"       annotation (Dialog(group="Lock-up Clutch",tab="Torque Converter"));

        //Brakes
        parameter SI.Force maxApply_force_Brk=10000
          "Maximum clutch apply force"                                           annotation (Dialog(tab="Brakes"));
          parameter Integer frictionPlate_count_Brk(min=1)=3
          "Number of clutch friction plates"   annotation (Dialog(tab="Brakes"));
          parameter SI.Length meanRadius_Brk=0.1 "Friction plate mean radius" annotation (Dialog(tab="Brakes"));
          parameter Real mue_Brk[:,2]=[0,0.14]
          "Assume holding mu=0.14 and shifting mu=0.12, if no data given by the supplier :: [w,mue] positive sliding friction coefficient (w_rel>=0). "
                                                                                                              annotation (Dialog(tab="Brakes"));

        //front_PTO
          parameter Real ratio_frontPTO(start=1) = 1
          "Transmission ratio (flange_a.phi/flange_b.phi)"  annotation (Dialog(tab="PTO",group="Front PTO"));
          parameter Real lossTable_frontPTO[:, 5]=[0, 1, 1, 0, 0]
          "Array for mesh efficiencies and bearing friction depending on speed"
                                                                                 annotation (Dialog(tab="PTO",group="Front PTO"));

        //rear_PTO
          parameter Real ratio_rearPTO(start=1) = 2
          "Transmission ratio (flange_a.phi/flange_b.phi)"  annotation (Dialog(tab="PTO",group="Rear PTO"));
          parameter Real lossTable_rearPTO[:, 5]=[0, 1, 1, 0, 0]
          "Array for mesh efficiencies and bearing friction depending on speed"
                                                                                 annotation (Dialog(tab="PTO",group="Rear PTO"));

        //Hydrostatic pump and motor steering unit
        // Pump_variableDisp parameters
          parameter SI.AbsolutePressure P_constant=10000000
                                                           annotation(Dialog(tab="Steering"));

        ////pump parameters
          parameter Real min_multiplier_pump=0.1
          "if |u| < |min_mult| then u_limited = sign(u) * min_mult else u_limit=u"
                                                                                    annotation(Dialog(tab="Steering",group="Pump"));
         parameter SI.Volume vol_per_radian_pump = 1e-6
          "Volume of hydraulic fluid moved for 1 radian of shaft rotation"   annotation(Dialog(tab="Steering",group="Pump"));
         parameter SI.Volume Nm_per_pascal_pump = 1e-6
          "Pressure rise for 1 Nm of torque input"                                           annotation(Dialog(tab="Steering",group="Pump"));
         parameter Real lossTable_pump[:, 5]=[0, 1, 1, 0, 0]
          "Array for mechanical efficiencies and bearing friction depending on speed"
                                                                                        annotation(Dialog(tab="Steering",group="Pump"));
         //parameter Boolean useInertia_pump=true
         //   "= true if inertia enabled, otherwise not used in model" annotation(Evaluate=true, HideResult=true, choices(__Dymola_checkBox=true),Dialog(tab="Steering",group="Pump"));

          parameter SI.Inertia J_pump(
            min=0,
            start=1)=0.001 "Moment of inertia"
                                             annotation(Dialog(tab="Steering",group="Pump"));
         //parameter Boolean useLeakage_pump=true
         //   "= true if leakage enabled, otherwise not used in model"
         //         annotation(Dialog(tab="Steering",group="Pump"), Evaluate=true, HideResult=true, choices(__Dymola_checkBox=true));
          parameter Real leakage_pump=0.001 "Leakage loss factor" annotation(Dialog(tab="Steering",group="Pump"));

        ////motor parameters
         parameter SI.Volume vol_per_radian_motor = 1e-6
          "Volume of hydraulic fluid moved for 1 radian of shaft rotation"   annotation(Dialog(tab="Steering",group="Motor"));
         parameter SI.Volume Nm_per_pascal_motor = 1e-6
          "Pressure rise for 1 Nm of torque input"                                           annotation(Dialog(tab="Steering",group="Motor"));
         parameter Real lossTable_motor[:, 5]=[0, 1, 1, 0, 0]
          "Array for mechanical efficiencies and bearing friction depending on speed"
                                                                                        annotation(Dialog(tab="Steering",group="Motor"));
         //parameter Boolean useInertia_motor=true
         //   "= true if inertia enabled, otherwise not used in model" annotation(Evaluate=true, HideResult=true, choices(__Dymola_checkBox=true),Dialog(tab="Steering",group="Motor"));

          parameter SI.Inertia J_motor(
            min=0,
            start=1)=0.001 "Moment of inertia"
                                             annotation(Dialog(tab="Steering",group="Motor"));
         //parameter Boolean useLeakage_motor=true
         //   "= true if leakage enabled, otherwise not used in model"
         //         annotation(Dialog(tab="Steering",group="Motor"), Evaluate=true, HideResult=true, choices(__Dymola_checkBox=true));
          parameter Real leakage_motor=0.001 "Leakage loss factor"
                                                                  annotation(Dialog(tab="Steering",group="Motor"));
        //Motor output planetary
          parameter Integer N_sun = 50 "Number of teeth on Sun gear" annotation(Dialog(tab="Steering",group="Motor Ouput Planet"));
          parameter Integer N_ring = 100 "Number of teeth on Ring gear" annotation(Dialog(tab="Steering",group="Motor Ouput Planet"));
          parameter Integer N_planet = 25 "Number of teeth on Planet gear" annotation(Dialog(tab="Steering",group="Motor Ouput Planet"));

          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_with_TC
            cross_Drive_with_TC(
            useSupport=useSupport,
            medium=medium,
            case_heat_transfer_area=case_heat_transfer_area,
            case_heat_transfer_thickness=case_heat_transfer_thickness,
            case_thermal_conductivity=case_thermal_conductivity,
            hx_dp_a=hx_dp_a,
            hx_dp_b=hx_dp_b,
            HX_internal_area=HX_internal_area,
            HX_internal_HTC=HX_internal_HTC,
            HX_external_area=HX_external_area,
            moi_rotational=moi_rotational,
            num_gears_RP=num_gears_RP,
            gear_nums_RP=gear_nums_RP,
            lossTables_RP=lossTables_RP,
            locked_max_torque_RP=locked_max_torque_RP,
            synchronizer_max_torque_RP=synchronizer_max_torque_RP,
            ratios_RP=ratios_RP,
            powerCoeffTable_TC=powerCoeffTable_TC,
            torqueConverTable_TC=torqueConverTable_TC,
            Diameter_TC=Diameter_TC,
            fluidDensity_TC=fluidDensity_TC,
            locked_max_torque_TC=locked_max_torque_TC,
            synchronizer_max_torque_TC=synchronizer_max_torque_TC,
            maxApply_force_Brk=maxApply_force_Brk,
            frictionPlate_count_Brk=frictionPlate_count_Brk,
            meanRadius_Brk=meanRadius_Brk,
            mue_Brk=mue_Brk,
            ratio_frontPTO=ratio_frontPTO,
            lossTable_frontPTO=lossTable_frontPTO,
            ratio_rearPTO=ratio_rearPTO,
            lossTable_rearPTO=lossTable_rearPTO,
            P_constant=P_constant,
            min_multiplier_pump=min_multiplier_pump,
            vol_per_radian_pump=vol_per_radian_pump,
            Nm_per_pascal_pump=Nm_per_pascal_pump,
            lossTable_pump=lossTable_pump,
            J_pump=J_pump,
            leakage_pump=leakage_pump,
            vol_per_radian_motor=vol_per_radian_motor,
            Nm_per_pascal_motor=Nm_per_pascal_motor,
            lossTable_motor=lossTable_motor,
            J_motor=J_motor,
            leakage_motor=leakage_motor,
            N_sun=N_sun,
            N_ring=N_ring,
            N_planet=N_planet)
            annotation (Placement(transformation(extent={{-48,-10},{-14,30}})));
          parameter Boolean useSupport=false
          "= true, if support flange enabled, otherwise implicitly grounded"
            annotation (Dialog(tab="Fluid Model"));
        equation
          connect(cross_Drive_with_TC.steer_command, steering_Control_Bus.steer_command)
            annotation (Line(
              points={{-38,30.8},{-38,102},{6,102},{6,201},{9,201}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(cross_Drive_with_TC.gear_selected, range_Pack_Control_Bus.gear_selected)
            annotation (Line(
              points={{-32,30.8},{-32,180},{-40,180},{-40,200}},
              color={255,127,0},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(cross_Drive_with_TC.brake_apply_command, brake_Control_Bus.brake_apply_command)
            annotation (Line(
              points={{-22,30.8},{-22,60},{60,60},{60,201},{61,201}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(cross_Drive_with_TC.lockup_torque_converter,
            torque_Converter_Control_Bus.lockup_torque_converter) annotation (Line(
              points={{-18,31},{-18,80},{-89,80},{-89,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(cross_Drive_with_TC.output_speed_range_pack1, range_Pack_Control_Bus.output_speed_range_pack)
            annotation (Line(
              points={{-40,-10.4},{-40,-20},{-80,-20},{-80,140},{-40,140},{-40,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(cross_Drive_with_TC.input_speed_range_pack1, range_Pack_Control_Bus.input_speed_range_pack)
            annotation (Line(
              points={{-36,-10.4},{-36,-24},{-84,-24},{-84,144},{-40,144},{-40,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(cross_Drive_with_TC.brg_06, brg_06.flange) annotation (Line(
              points={{-14,10},{64,10},{64,0},{140,0}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_with_TC.brg_02, brg_02.flange) annotation (Line(
              points={{-14,30},{120,30},{120,200},{140,200}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_with_TC.brg_03, brg_03.flange) annotation (Line(
              points={{-14,-10},{-14,-40},{120,-40},{120,-200},{140,-200}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_with_TC.flowPort_a, fluidAdaptor.fluidHeatflow_port)
            annotation (Line(
              points={{-48,30},{-124,30},{-124,140},{-200,140},{-200,158}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_with_TC.flowPort_b, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{-42,30},{-42,40},{-114,40},{-114,150},{-150,150},{-150,158}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_with_TC.brg_05, brg_05.flange) annotation (Line(
              points={{-48,20},{-160,20},{-160,120},{-200,120}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_with_TC.brg_01, brg_01.flange) annotation (Line(
              points={{-48,10},{-126,10},{-126,0},{-200,0}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_with_TC.brg_04, brg_04.flange) annotation (Line(
              points={{-48,0},{-100,0},{-100,-100},{-200,-100}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_with_TC.outer_surface_heat_port, outer_surface_heat_port)
            annotation (Line(
              points={{-26,30},{-26,72},{100,72},{100,200}},
              color={191,0,0},
              smooth=Smooth.None));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,-200},
                    {140,200}}), graphics), Icon(coordinateSystem(extent={{-200,-200},{140,
                    200}})));
        end Cross_Drive_with_TC;

        model Cross_Drive_without_TC
          extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Interfaces.Cross_Drive_without_TC;
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_without_TC
            cross_Drive_without_TC(
            medium=medium,
            useSupport=useSupport,
            moi_rotational=moi_rotational,
            hx_dp_a=hx_dp_a,
            hx_dp_b=hx_dp_b,
            HX_internal_area=HX_internal_area,
            HX_internal_HTC=HX_internal_HTC,
            HX_external_area=HX_external_area,
            case_heat_transfer_area=case_heat_transfer_area,
            case_heat_transfer_thickness=case_heat_transfer_thickness,
            case_thermal_conductivity=case_thermal_conductivity,
            num_gears_RP=num_gears_RP,
            gear_nums_RP=gear_nums_RP,
            lossTables_RP=lossTables_RP,
            locked_max_torque_RP=locked_max_torque_RP,
            synchronizer_max_torque_RP=synchronizer_max_torque_RP,
            ratios_RP=ratios_RP,
            maxApply_force_Brk=maxApply_force_Brk,
            frictionPlate_count_Brk=frictionPlate_count_Brk,
            meanRadius_Brk=meanRadius_Brk,
            mue_Brk=mue_Brk,
            ratio_frontPTO=ratio_frontPTO,
            lossTable_frontPTO=lossTable_frontPTO,
            ratio_rearPTO=ratio_rearPTO,
            lossTable_rearPTO=lossTable_rearPTO,
            P_constant=P_constant,
            min_multiplier_pump=min_multiplier_pump,
            vol_per_radian_pump=vol_per_radian_pump,
            Nm_per_pascal_pump=Nm_per_pascal_pump,
            lossTable_pump=lossTable_pump,
            J_pump=J_pump,
            leakage_pump=leakage_pump,
            vol_per_radian_motor=vol_per_radian_motor,
            Nm_per_pascal_motor=Nm_per_pascal_motor,
            lossTable_motor=lossTable_motor,
            J_motor=J_motor,
            leakage_motor=leakage_motor,
            N_sun=N_sun,
            N_ring=N_ring,
            N_planet=N_planet)
            annotation (Placement(transformation(extent={{-20,-20},{14,20}})));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=
              C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC()
          "Medium in the component"
            annotation (Dialog(tab="Fluid Model"));
          parameter Boolean useSupport=false
          "= true, if support flange enabled, otherwise implicitly grounded";
          parameter SI.Inertia moi_rotational=0.2 "Trans Inertia";
          parameter Real hx_dp_a=1000 "HX quadratic loss term"
            annotation (Dialog(tab="Fluid Model"));
          parameter Real hx_dp_b=100 "HX linear loss term"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area HX_internal_area=1
          "Heat transfer area internal to the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.CoefficientOfHeatTransfer HX_internal_HTC=2000
          "heat transfer coefficient internal to the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area HX_external_area=1.0
          "Area available for convective heat transferon the outside of the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area case_heat_transfer_area=1.0
          "Area available for heat to transfer through case"
            annotation (Dialog(tab="case_heat_transfer_area"));
          parameter SI.Thickness case_heat_transfer_thickness=0.005
          "Effective case thickness for heat transfer"
            annotation (Dialog(tab="Thermal Model"));
          parameter SI.ThermalConductivity case_thermal_conductivity=50
          "Conductivity of case"   annotation (Dialog(tab="Thermal Model"));
          parameter Integer num_gears_RP=5
          "The number of gear ratios in the contained range pack (including reverse if applicable)"
            annotation (Dialog(tab="Range Pack"));
          parameter Integer gear_nums_RP[num_gears_RP]={-1,1,2,3,4}
          "Identifiers for the contained gears.  E.g {-1,1,2,3,4} for a pack with 1 reverse and 4 forward gears"
            annotation (Dialog(tab="Range Pack"));
          parameter Real lossTables_RP[num_gears_RP,:,5]={[0, 0.95, 0.95, 0, 0],[0, 0.95, 0.95, 0, 0],[0, 0.95, 0.95, 0, 0],[0, 0.95, 0.95, 0, 0],[0, 0.95, 0.95, 0, 0]}
          "Array of arrays of mesh efficiencies and bearing friction depending on speed for each contained gear"
            annotation (Dialog(tab="Range Pack"));
          parameter SI.Torque locked_max_torque_RP=10000
          "Max torque transmitted when gear sync clutches are locked"
            annotation (Dialog(tab="Range Pack"));
          parameter SI.Torque synchronizer_max_torque_RP=4000
          "Max torque transmitted while synchronizing each gear"
            annotation (Dialog(tab="Range Pack"));
          parameter Real ratios_RP[num_gears_RP]={-3.2,3.2,2.2,1.5,1.2}
          "Transmission ratios (flange_a.phi/flange_b.phi) of contained gears"
            annotation (Dialog(tab="Range Pack"));
          parameter SI.Force maxApply_force_Brk=40000
          "Maximum clutch apply force"
            annotation (Dialog(tab="Brakes"));
          parameter Integer frictionPlate_count_Brk=8
          "Number of clutch friction plates"   annotation (Dialog(tab="Brakes"));
          parameter SI.Length meanRadius_Brk=0.1 "Friction plate mean radius"
            annotation (Dialog(tab="Brakes"));
          parameter Real mue_Brk[:,2]=[0,0.14]
          "Assume holding mu=0.14 and shifting mu=0.12, if no data given by the supplier :: [w,mue] positive sliding friction coefficient (w_rel>=0). "
            annotation (Dialog(tab="Brakes"));
          parameter Real ratio_frontPTO=1
          "Transmission ratio (flange_a.phi/flange_b.phi)"
            annotation (Dialog(tab="PTO"));
          parameter Real lossTable_frontPTO[:,5]=[0,1,1,0,0]
          "Array for mesh efficiencies and bearing friction depending on speed"
            annotation (Dialog(tab="PTO"));
          parameter Real ratio_rearPTO=2
          "Transmission ratio (flange_a.phi/flange_b.phi)"
            annotation (Dialog(tab="PTO"));
          parameter Real lossTable_rearPTO[:,5]=[0,1,1,0,0]
          "Array for mesh efficiencies and bearing friction depending on speed"
            annotation (Dialog(tab="PTO"));
          parameter SI.AbsolutePressure P_constant=10000000
            annotation (Dialog(tab="Steering"));
          parameter Real min_multiplier_pump=0.1
          "if |u| < |min_mult| then u_limited = sign(u) * min_mult else u_limit=u"
            annotation (Dialog(tab="Steering"));
          parameter SI.Volume vol_per_radian_pump=1e-6
          "Volume of hydraulic fluid moved for 1 radian of shaft rotation"
            annotation (Dialog(tab="Steering"));
          parameter SI.Volume Nm_per_pascal_pump=1e-6
          "Pressure rise for 1 Nm of torque input"   annotation (Dialog(tab="Steering"));
          parameter Real lossTable_pump[:,5]=[0,1,1,0,0]
          "Array for mechanical efficiencies and bearing friction depending on speed"
            annotation (Dialog(tab="Steering"));
          parameter SI.Inertia J_pump=0.001 "Moment of inertia"
            annotation (Dialog(tab="Steering"));
          parameter Real leakage_pump=1.0 "Leakage loss factor"
            annotation (Dialog(tab="Steering"));
          parameter SI.Volume vol_per_radian_motor=1e-6
          "Volume of hydraulic fluid moved for 1 radian of shaft rotation"
            annotation (Dialog(tab="Steering"));
          parameter SI.Volume Nm_per_pascal_motor=1e-6
          "Pressure rise for 1 Nm of torque input"   annotation (Dialog(tab="Steering"));
          parameter Real lossTable_motor[:,5]=[0,1,1,0,0]
          "Array for mechanical efficiencies and bearing friction depending on speed"
            annotation (Dialog(tab="Steering"));
          parameter SI.Inertia J_motor=0.001 "Moment of inertia"
            annotation (Dialog(tab="Steering"));
          parameter Real leakage_motor=0.001 "Leakage loss factor"
            annotation (Dialog(tab="Steering"));
          parameter Integer N_sun=50 "Number of teeth on Sun gear"
            annotation (Dialog(tab="Steering"));
          parameter Integer N_ring=100 "Number of teeth on Ring gear"
            annotation (Dialog(tab="Steering"));
          parameter Integer N_planet=25 "Number of teeth on Planet gear"
            annotation (Dialog(tab="Steering"));
        equation
          connect(fluidAdaptor.fluidHeatflow_port, cross_Drive_without_TC.flowPort_a)
            annotation (Line(
              points={{-200,158},{-200,20},{-20,20}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_without_TC.flowPort_b, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{-14,20},{-14,30},{-150,30},{-150,158}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_without_TC.steer_command, steering_Control_Bus.steer_command)
            annotation (Line(
              points={{-10,20.8},{-10,201},{-29,201}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(cross_Drive_without_TC.gear_selected, range_Pack_Control_Bus.gear_selected)
            annotation (Line(
              points={{-4,20.8},{-4,180},{-90,180},{-90,200}},
              color={255,127,0},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(cross_Drive_without_TC.brake_apply_command, brake_Control_Bus.brake_apply_command)
            annotation (Line(
              points={{6,20.8},{6,180},{29,180},{29,201}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(cross_Drive_without_TC.outer_surface_heat_port,
            outer_surface_heat_port) annotation (Line(
              points={{2,20},{2,160},{80,160},{80,200}},
              color={191,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_without_TC.brg_01, brg_01.flange) annotation (Line(
              points={{-20,0},{-200,0}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_without_TC.brg_02, brg_02.flange) annotation (Line(
              points={{14,20},{14,120},{140,120},{140,200}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_without_TC.brg_03, brg_03.flange) annotation (Line(
              points={{14,-20},{14,-120},{140,-120},{140,-200}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(cross_Drive_without_TC.input_speed_range_pack, range_Pack_Control_Bus.input_speed_range_pack)
            annotation (Line(
              points={{-8,-20.4},{-8,-30},{-90,-30},{-90,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(cross_Drive_without_TC.output_speed_range_pack,
            range_Pack_Control_Bus.output_speed_range_pack) annotation (Line(
              points={{-12,-20.4},{-12,-26},{-90,-26},{-90,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-180,
                    -200},{180,200}}), graphics));
        end Cross_Drive_without_TC;

        package Interfaces
         extends Modelica.Icons.InterfacesPackage;

          partial model Cross_Drive_with_TC

            replaceable package C2M2L_Medium =
                C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop
                  annotation(choicesAllMatching=true, Dialog(tab="Fluid Model"));
            parameter Modelica.Thermal.FluidHeatFlow.Media.Medium adaptor_medium=C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC()
            "Medium in the component"
                  annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fluid Model"));

            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=adaptor_medium,
                redeclare package Medium = C2M2L_Medium) annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-200,168})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  C2M2L_Medium)
              annotation (Placement(transformation(extent={{-216,184},{-182,218}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
               HeatFlowMedium=adaptor_medium, redeclare package Medium =
                C2M2L_Medium)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-150,168})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  C2M2L_Medium)
              annotation (Placement(transformation(extent={{-168,184},{-134,220}})));
            C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Range_Packs.Common_Controls.Range_Pack_Control_Bus
              range_Pack_Control_Bus
              annotation (Placement(transformation(extent={{-56,182},{-24,218}})));
            C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Cross_Drive_Steering.Common_Controls.Steering_Control_Bus
              steering_Control_Bus
              annotation (Placement(transformation(extent={{-8,182},{26,220}})));
            C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Brakes_Clutch.Common_Controls.Brake_Control_Bus
              brake_Control_Bus
              annotation (Placement(transformation(extent={{44,182},{78,220}})));
            Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a outer_surface_heat_port
              annotation (Placement(transformation(extent={{90,190},{110,210}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_02(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,190},{150,210}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_03(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,-210},{150,-190}})));
        public
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,-10},{-190,10}})));
            Modelica.Mechanics.MultiBody.World       world(enableAnimation=false,
                driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-160,-180},{-140,-160}})));
        public
            C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Torque_Converters.Common_Controls.Torque_Converter_Control_Bus
              torque_Converter_Control_Bus
              annotation (Placement(transformation(extent={{-106,180},{-72,220}})));
        public
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_04(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,-110},{-190,-90}})));
        public
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_05(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,110},{-190,130}})));
        public
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_06(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,-10},{150,10}})));
          equation
            connect(fluidAdaptor.fluid_port, fluid_in) annotation (Line(
                points={{-200,178},{-198,178},{-198,201},{-199,201}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{-150,178},{-150,202},{-151,202}},
                color={0,127,255},
                smooth=Smooth.None));
          annotation (Icon(coordinateSystem(extent={{-200,-200},{140,200}}),
                             graphics={
                  Rectangle(
                    extent={{-48.5,8},{48.5,-8}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-54,-15.5},
                    rotation=90),
                  Line(
                    points={{68,178},{84,186}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Line(
                    points={{68,166},{84,174}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Line(
                    points={{68,156},{84,164}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Rectangle(
                    extent={{112,188},{84,158}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-35.5,7.5},{35.5,-7.5}},
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={139.5,165.5},
                    rotation=90),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={174,117},
                    rotation=90),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={106,119},
                    rotation=90),
                  Rectangle(
                    extent={{-1.5,37},{1.5,-37}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={140,128.5},
                    rotation=90),
                  Rectangle(
                    extent={{-6.5,9.5},{6.5,-9.5}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={105.5,113.5},
                    rotation=90),
                  Rectangle(
                    extent={{-6.5,9.5},{6.5,-9.5}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={172.5,113.5},
                    rotation=90),
                  Rectangle(
                    extent={{-7,18},{7,-18}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={138,113},
                    rotation=90),
                  Rectangle(
                    extent={{-7,3},{7,-3}},
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={190,113},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-7,3},{7,-3}},
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={88,113},
                    rotation=90,
                    lineColor={0,0,0}),
                  Line(
                    points={{74,-64},{74,112},{88,112}},
                    color={0,128,255},
                    smooth=Smooth.None),
                  Rectangle(
                    extent={{-6.5,47.5},{6.5,-47.5}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={138.5,87.5},
                    rotation=90),
                  Rectangle(
                    extent={{-120,7},{120,-7}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={137,-10},
                    rotation=90),
                  Rectangle(
                    extent={{-7,18},{7,-18}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={136,-129},
                    rotation=90),
                  Rectangle(
                    extent={{-6.5,9.5},{6.5,-9.5}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={170.5,-128.5},
                    rotation=90),
                  Rectangle(
                    extent={{-7,3},{7,-3}},
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={188,-129},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={172,-135},
                    rotation=90),
                  Rectangle(
                    extent={{-1.5,37},{1.5,-37}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={138,-143.5},
                    rotation=90),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={104,-133},
                    rotation=90),
                  Rectangle(
                    extent={{-6.5,9.5},{6.5,-9.5}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={103.5,-128.5},
                    rotation=90),
                  Line(
                    points={{74,-104},{74,-130},{86,-130}},
                    color={0,128,255},
                    smooth=Smooth.None),
                  Rectangle(
                    extent={{-7,3},{7,-3}},
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={86,-129},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-118,-64},{100,-104}},
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,128,255}),
                  Text(
                    extent={{-94,-80},{46,-92}},
                    lineColor={0,128,255},
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid,
                    textString="Steer"),
                  Rectangle(
                    extent={{-30,8},{30,-8}},
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={140,-172},
                    rotation=90),
                  Rectangle(
                    extent={{112,-162},{84,-192}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    lineColor={0,0,0}),
                  Line(
                    points={{68,-194},{84,-186}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Line(
                    points={{68,-184},{84,-176}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Line(
                    points={{68,-172},{84,-164}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Rectangle(
                    extent={{-4,56},{4,-56}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-54,106},
                    rotation=90),
                  Rectangle(
                    extent={{-15,4},{15,-4}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={1,94},
                    rotation=90),
                  Rectangle(
                    extent={{-6,35.5},{6,-35.5}},
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={48.5,86},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-15,4},{15,-4}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-111,94},
                    rotation=90),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-86,75},
                    rotation=90),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-22,73},
                    rotation=90),
                  Rectangle(
                    extent={{-10,9},{10,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-22,81},
                    rotation=90),
                  Rectangle(
                    extent={{-10,18},{10,-18}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-52,82},
                    rotation=90),
                  Rectangle(
                    extent={{-10,9},{10,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-86,82},
                    rotation=90),
                  Rectangle(
                    extent={{-14.5,8.5},{14.5,-8.5}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-54.5,65.5},
                    rotation=90),
                  Rectangle(
                    extent={{-2,18},{2,-18}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-100,64},
                    rotation=90),
                  Rectangle(
                    extent={{-2,17},{2,-17}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-8,63},
                    rotation=90),
                  Rectangle(
                    extent={{-27,2},{27,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={9,36},
                    rotation=90),
                  Rectangle(
                    extent={{-27,2},{27,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-117,36},
                    rotation=90),
                  Rectangle(
                    extent={{-4,56},{4,-56}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-54,52},
                    rotation=90),
                  Rectangle(
                    extent={{-15,4},{15,-4}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-3,32},
                    rotation=90),
                  Rectangle(
                    extent={{-15,4},{15,-4}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-103,36},
                    rotation=90),
                  Rectangle(
                    extent={{-10,3},{10,-3}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-86,21},
                    rotation=90),
                  Rectangle(
                    extent={{-2,17},{2,-17}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-10,9},
                    rotation=90),
                  Rectangle(
                    extent={{-10,9},{10,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-22,27},
                    rotation=90),
                  Rectangle(
                    extent={{-10,3},{10,-3}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-24,21},
                    rotation=90),
                  Rectangle(
                    extent={{-10,9},{10,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-86,29},
                    rotation=90),
                  Rectangle(
                    extent={{-10,18},{10,-18}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-54,28},
                    rotation=90),
                  Rectangle(
                    extent={{-2,18},{2,-18}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-100,8},
                    rotation=90),
                  Polygon(
                    points={{-6,35},{-6,-101},{10,-89},{10,19},{-6,35}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    origin={-87,-28},
                    rotation=90),
                  Polygon(
                    points={{-132,36},{-132,-32},{-110,-12},{-110,14},{-132,36}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid),
                  Rectangle(
                    extent={{8,44},{-8,-44}},
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={140,174},
                    rotation=90),
                  Rectangle(
                    extent={{8,44},{-8,-44}},
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={140,-176},
                    rotation=90)}), Diagram(coordinateSystem(preserveAspectRatio=true,
                             extent={{-200,-200},{140,200}}), graphics));
          end Cross_Drive_with_TC;

          partial model Cross_Drive_without_TC

            replaceable package C2M2L_Medium =
                C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop
                  annotation(choicesAllMatching=true, Dialog(tab="Fluid Model"));
            parameter Modelica.Thermal.FluidHeatFlow.Media.Medium adaptor_medium=C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC()
            "Medium in the component"
                  annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fluid Model"));

            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=adaptor_medium,
                redeclare package Medium = C2M2L_Medium) annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-200,168})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  C2M2L_Medium)
              annotation (Placement(transformation(extent={{-216,184},{-182,218}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
               HeatFlowMedium=adaptor_medium, redeclare package Medium =
                C2M2L_Medium)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-150,168})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  C2M2L_Medium)
              annotation (Placement(transformation(extent={{-168,184},{-134,220}})));
            C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Range_Packs.Common_Controls.Range_Pack_Control_Bus
              range_Pack_Control_Bus
              annotation (Placement(transformation(extent={{-106,182},{-74,218}})));
            C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Cross_Drive_Steering.Common_Controls.Steering_Control_Bus
              steering_Control_Bus
              annotation (Placement(transformation(extent={{-46,182},{-12,220}})));
            C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Brakes_Clutch.Common_Controls.Brake_Control_Bus
              brake_Control_Bus
              annotation (Placement(transformation(extent={{12,182},{46,220}})));
            Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a outer_surface_heat_port
              annotation (Placement(transformation(extent={{70,190},{90,210}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_02(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,190},{150,210}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_03(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,-210},{150,-190}})));
        public
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,-10},{-190,10}})));
            outer Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-160,-180},{-140,-160}})));
          equation
            connect(fluidAdaptor.fluid_port, fluid_in) annotation (Line(
                points={{-200,178},{-198,178},{-198,201},{-199,201}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{-150,178},{-150,202},{-151,202}},
                color={0,127,255},
                smooth=Smooth.None));
          annotation (Icon(coordinateSystem(extent={{-200,-200},{140,200}}),
                             graphics={
                  Rectangle(
                    extent={{-48.5,8},{48.5,-8}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-54,-15.5},
                    rotation=90),
                  Line(
                    points={{68,178},{84,186}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Line(
                    points={{68,166},{84,174}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Line(
                    points={{68,156},{84,164}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Rectangle(
                    extent={{112,188},{84,158}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-35.5,7.5},{35.5,-7.5}},
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={139.5,165.5},
                    rotation=90),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={174,117},
                    rotation=90),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={106,119},
                    rotation=90),
                  Rectangle(
                    extent={{-1.5,37},{1.5,-37}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={140,128.5},
                    rotation=90),
                  Rectangle(
                    extent={{-6.5,9.5},{6.5,-9.5}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={105.5,113.5},
                    rotation=90),
                  Rectangle(
                    extent={{-6.5,9.5},{6.5,-9.5}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={172.5,113.5},
                    rotation=90),
                  Rectangle(
                    extent={{-7,18},{7,-18}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={138,113},
                    rotation=90),
                  Rectangle(
                    extent={{-7,3},{7,-3}},
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={190,113},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-7,3},{7,-3}},
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={88,113},
                    rotation=90,
                    lineColor={0,0,0}),
                  Line(
                    points={{74,-64},{74,112},{88,112}},
                    color={0,128,255},
                    smooth=Smooth.None),
                  Rectangle(
                    extent={{-6.5,47.5},{6.5,-47.5}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={138.5,87.5},
                    rotation=90),
                  Rectangle(
                    extent={{-120,7},{120,-7}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={137,-10},
                    rotation=90),
                  Rectangle(
                    extent={{-7,18},{7,-18}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={136,-129},
                    rotation=90),
                  Rectangle(
                    extent={{-6.5,9.5},{6.5,-9.5}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={170.5,-128.5},
                    rotation=90),
                  Rectangle(
                    extent={{-7,3},{7,-3}},
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={188,-129},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={172,-135},
                    rotation=90),
                  Rectangle(
                    extent={{-1.5,37},{1.5,-37}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={138,-143.5},
                    rotation=90),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={104,-133},
                    rotation=90),
                  Rectangle(
                    extent={{-6.5,9.5},{6.5,-9.5}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={103.5,-128.5},
                    rotation=90),
                  Line(
                    points={{74,-104},{74,-130},{86,-130}},
                    color={0,128,255},
                    smooth=Smooth.None),
                  Rectangle(
                    extent={{-7,3},{7,-3}},
                    fillColor={0,128,255},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={86,-129},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-118,-64},{100,-104}},
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,128,255}),
                  Text(
                    extent={{-94,-80},{46,-92}},
                    lineColor={0,128,255},
                    fillColor={255,255,255},
                    fillPattern=FillPattern.Solid,
                    textString="Steer"),
                  Rectangle(
                    extent={{-30,8},{30,-8}},
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={140,-172},
                    rotation=90),
                  Rectangle(
                    extent={{112,-162},{84,-192}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    lineColor={0,0,0}),
                  Line(
                    points={{68,-194},{84,-186}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Line(
                    points={{68,-184},{84,-176}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Line(
                    points={{68,-172},{84,-164}},
                    smooth=Smooth.None,
                    color={0,0,0}),
                  Rectangle(
                    extent={{-4,56},{4,-56}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-54,106},
                    rotation=90),
                  Rectangle(
                    extent={{-15,4},{15,-4}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={1,94},
                    rotation=90),
                  Rectangle(
                    extent={{-6,35.5},{6,-35.5}},
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={48.5,86},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-15,4},{15,-4}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-111,94},
                    rotation=90),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-86,75},
                    rotation=90),
                  Rectangle(
                    extent={{9,2},{-9,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-22,73},
                    rotation=90),
                  Rectangle(
                    extent={{-10,9},{10,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-22,81},
                    rotation=90),
                  Rectangle(
                    extent={{-10,18},{10,-18}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-52,82},
                    rotation=90),
                  Rectangle(
                    extent={{-10,9},{10,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-86,82},
                    rotation=90),
                  Rectangle(
                    extent={{-14.5,8.5},{14.5,-8.5}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-54.5,65.5},
                    rotation=90),
                  Rectangle(
                    extent={{-2,18},{2,-18}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-100,64},
                    rotation=90),
                  Rectangle(
                    extent={{-2,17},{2,-17}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-8,63},
                    rotation=90),
                  Rectangle(
                    extent={{-27,2},{27,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={9,36},
                    rotation=90),
                  Rectangle(
                    extent={{-27,2},{27,-2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-117,36},
                    rotation=90),
                  Rectangle(
                    extent={{-4,56},{4,-56}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-54,52},
                    rotation=90),
                  Rectangle(
                    extent={{-15,4},{15,-4}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-3,32},
                    rotation=90),
                  Rectangle(
                    extent={{-15,4},{15,-4}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-103,36},
                    rotation=90),
                  Rectangle(
                    extent={{-10,3},{10,-3}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-86,21},
                    rotation=90),
                  Rectangle(
                    extent={{-2,17},{2,-17}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-10,9},
                    rotation=90),
                  Rectangle(
                    extent={{-10,9},{10,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-22,27},
                    rotation=90),
                  Rectangle(
                    extent={{-10,3},{10,-3}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-24,21},
                    rotation=90),
                  Rectangle(
                    extent={{-10,9},{10,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-86,29},
                    rotation=90),
                  Rectangle(
                    extent={{-10,18},{10,-18}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={-54,28},
                    rotation=90),
                  Rectangle(
                    extent={{-2,18},{2,-18}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0},
                    origin={-100,8},
                    rotation=90),
                  Polygon(
                    points={{-6,35},{-6,-101},{10,-89},{10,19},{-6,35}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    origin={-87,-28},
                    rotation=90),
                  Polygon(
                    points={{-132,36},{-132,-32},{-110,-12},{-110,14},{-132,36}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid),
                  Rectangle(
                    extent={{8,44},{-8,-44}},
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={140,174},
                    rotation=90),
                  Rectangle(
                    extent={{8,44},{-8,-44}},
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None,
                    origin={140,-176},
                    rotation=90)}), Diagram(coordinateSystem(preserveAspectRatio=true,
                             extent={{-200,-200},{140,200}}), graphics));
          end Cross_Drive_without_TC;
        end Interfaces;

        package Tests
          extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Test_Bench_Cross_Drive_without_TC
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop)
              annotation (Placement(transformation(extent={{-12,10},{8,30}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        right_output(d=15)
              annotation (Placement(transformation(extent={{60,0},{80,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        left_output(d=15)
              annotation (Placement(transformation(extent={{60,-80},{80,-60}})));
            Modelica.Blocks.Sources.Constant torque_input(k=500)
              annotation (Placement(transformation(extent={{-100,-40},{-80,-20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-62,-40},{-42,-20}})));
            replaceable Cross_Drive_without_TC
              cross_Drive_without_TC(adaptor_medium=
                  C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC(), medium=
                  C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC(),
              moi_rotational=0.2,
              num_gears_RP=5,
              gear_nums_RP={-1,1,2,3,4},
              ratios_RP={-3.2,3.2,2.2,1.5,1.2},
              maxApply_force_Brk=40000,
              frictionPlate_count_Brk=8)                           constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_without_TC
              annotation (Placement(transformation(extent={{-4,-62},{36,-2}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Test_Driver_no_TC
              test_Driver_no_TC(steer_table=[0,0; 1,0; 10,1; 30,1; 40,-1])
                                                annotation (Placement(transformation(
                    rotation=0, extent={{-20,60},{0,80}})));
            inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-80,60},{-60,80}})));
          equation
            connect(torque_input.y, testing_torque.u) annotation (Line(
                points={{-79,-30},{-64,-30}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(testing_torque.flange, cross_Drive_without_TC.brg_01) annotation (
                Line(
                points={{-42,-30},{-23,-30},{-23,-32},{-4,-32}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_without_TC.brg_03, left_output.flange) annotation (Line(
                points={{36,-62},{36,-70},{60,-70}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_without_TC.brg_02, right_output.flange) annotation (Line(
                points={{36,-2},{36,10},{60,10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluid_Source_Sink.supply_port, cross_Drive_without_TC.fluid_in)
              annotation (Line(
                points={{-8,10},{-8,2},{-3.88235,2},{-3.88235,-1.85}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, cross_Drive_without_TC.fluid_out)
              annotation (Line(
                points={{4,10},{4,2},{1.76471,2},{1.76471,-1.7}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(test_Driver_no_TC.range_Pack_Control_Bus, cross_Drive_without_TC.range_Pack_Control_Bus)
              annotation (Line(
                points={{0,70.8},{4,70.8},{4,72},{8.94118,72},{8.94118,-2}},
                color={255,0,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_no_TC.steering_Control_Bus, cross_Drive_without_TC.steering_Control_Bus)
              annotation (Line(
                points={{0,68.8},{8,68.8},{8,70},{16.1176,70},{16.1176,-1.85}},
                color={0,127,0},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_no_TC.brake_Control_Bus, cross_Drive_without_TC.brake_Control_Bus)
              annotation (Line(
                points={{0,66.8},{10,66.8},{10,68},{22.9412,68},{22.9412,-1.85}},
                color={255,85,85},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=30, Interval=0.01),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Cross_Drive_without_TC_Basic_Test.mos"
                "Cross_Drive_without_TC_Basic_Test"));
          end Test_Bench_Cross_Drive_without_TC;

          model Test_Bench_Cross_Drive_without_TC_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-76,-100},{-56,-80}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop)
              annotation (Placement(transformation(extent={{-12,10},{8,30}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        right_output(d=15)
              annotation (Placement(transformation(extent={{60,0},{80,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        left_output(d=15)
              annotation (Placement(transformation(extent={{60,-80},{80,-60}})));
            Modelica.Blocks.Sources.Constant torque_input(k=500)
              annotation (Placement(transformation(extent={{-100,-40},{-80,-20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-62,-40},{-42,-20}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_without_TC
              cross_Drive_without_TC
              annotation (Placement(transformation(extent={{-4,-62},{36,-2}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Test_Driver_no_TC
              test_Driver_no_TC(steer_table=[0,0; 1,0; 10,1; 30,1; 40,-1])
                                                annotation (Placement(transformation(
                    rotation=0, extent={{-20,60},{0,80}})));
          equation
            connect(world.frame_b, cutTorque.frame_a) annotation (Line(
                points={{-80,-90},{-76,-90}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(torque_input.y, testing_torque.u) annotation (Line(
                points={{-79,-30},{-64,-30}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(testing_torque.flange, cross_Drive_without_TC.brg_01) annotation (
                Line(
                points={{-42,-30},{-4,-30}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_without_TC.mount_02, cutTorque.frame_b) annotation (Line(
                points={{16,-62},{16,-90},{-56,-90}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_without_TC.brg_03, left_output.flange) annotation (Line(
                points={{30,-50},{30,-70},{60,-70}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_without_TC.brg_02, right_output.flange) annotation (Line(
                points={{30,-10},{30,10},{60,10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluid_Source_Sink.supply_port, cross_Drive_without_TC.fluid_in)
              annotation (Line(
                points={{-8,10},{-8,2},{-0.2,2},{-0.2,-6}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, cross_Drive_without_TC.fluid_out)
              annotation (Line(
                points={{4,10},{4,2},{8,2},{8,-6}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(test_Driver_no_TC.range_Pack_Control_Bus, cross_Drive_without_TC.range_Pack_Control_Bus)
              annotation (Line(
                points={{0,70.8},{4,70.8},{4,72},{13,72},{13,-9.2}},
                color={255,0,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_no_TC.steering_Control_Bus, cross_Drive_without_TC.steering_Control_Bus)
              annotation (Line(
                points={{0,68.8},{8,68.8},{8,70},{16,70},{16,-9.2}},
                color={0,127,0},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_no_TC.brake_Control_Bus, cross_Drive_without_TC.brake_Control_Bus)
              annotation (Line(
                points={{0,66.8},{10,66.8},{10,68},{19,68},{19,-9.2}},
                color={255,85,85},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=30, Interval=0.01),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Cross_Drive_without_TC_Basic_Test.mos"
                "Cross_Drive_without_TC_Basic_Test"));
          end Test_Bench_Cross_Drive_without_TC_original;

          model Test_Bench_Cross_Drive_without_TC_Ricardo
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop)
              annotation (Placement(transformation(extent={{-12,10},{8,30}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        right_output(d=15)
              annotation (Placement(transformation(extent={{60,0},{80,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        left_output(d=15)
              annotation (Placement(transformation(extent={{60,-80},{80,-60}})));
            Modelica.Blocks.Sources.Constant torque_input(k=500)
              annotation (Placement(transformation(extent={{-100,-40},{-80,-20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-62,-40},{-42,-20}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_without_TC
              cross_Drive_without_TC(ratios_RP={-3.2,3.2,2.2,1.5,1.2})
              annotation (Placement(transformation(extent={{-4,-62},{36,-2}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Test_Driver_no_TC
              test_Driver_no_TC(steer_table=[0,0; 1,0; 10,1; 30,1; 40,-1])
                                                annotation (Placement(transformation(
                    rotation=0, extent={{-20,60},{0,80}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
          equation
            connect(torque_input.y, testing_torque.u) annotation (Line(
                points={{-79,-30},{-64,-30}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(testing_torque.flange, cross_Drive_without_TC.brg_01) annotation (
                Line(
                points={{-42,-30},{-4,-30}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_without_TC.brg_03, left_output.flange) annotation (Line(
                points={{30,-50},{30,-70},{60,-70}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_without_TC.brg_02, right_output.flange) annotation (Line(
                points={{30,-10},{30,10},{60,10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluid_Source_Sink.supply_port, cross_Drive_without_TC.fluid_in)
              annotation (Line(
                points={{-8,10},{-8,2},{-0.2,2},{-0.2,-6}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, cross_Drive_without_TC.fluid_out)
              annotation (Line(
                points={{4,10},{4,2},{8,2},{8,-6}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(test_Driver_no_TC.range_Pack_Control_Bus, cross_Drive_without_TC.range_Pack_Control_Bus)
              annotation (Line(
                points={{0,70.8},{4,70.8},{4,72},{13,72},{13,-9.2}},
                color={255,0,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_no_TC.steering_Control_Bus, cross_Drive_without_TC.steering_Control_Bus)
              annotation (Line(
                points={{0,68.8},{8,68.8},{8,70},{16,70},{16,-9.2}},
                color={0,127,0},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_no_TC.brake_Control_Bus, cross_Drive_without_TC.brake_Control_Bus)
              annotation (Line(
                points={{0,66.8},{10,66.8},{10,68},{19,68},{19,-9.2}},
                color={255,85,85},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=30, Interval=0.01),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Cross_Drive_without_TC_Basic_Test.mos"
                "Cross_Drive_without_TC_Basic_Test"));
          end Test_Bench_Cross_Drive_without_TC_Ricardo;

          model Test_Bench_Cross_Drive_with_TC
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-76,-100},{-56,-80}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        right_output(d=15, stateSelect=StateSelect.always)
              annotation (Placement(transformation(extent={{60,0},{80,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        left_output(d=15, stateSelect=StateSelect.always)
              annotation (Placement(transformation(extent={{60,-80},{80,-60}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_rear(d=3, stateSelect=StateSelect.prefer)
              annotation (Placement(transformation(extent={{60,-40},{80,-20}})));
            Modelica.Blocks.Sources.Constant torque_input(k=500)
              annotation (Placement(transformation(extent={{-100,-40},{-80,-20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-62,-40},{-42,-20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTM(d=10, stateSelect=StateSelect.always)
              annotation (Placement(transformation(extent={{-28,-10},{-48,10}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_front(d=2, stateSelect=StateSelect.prefer)
              annotation (Placement(transformation(extent={{-30,-70},{-50,-50}})));
            replaceable Cross_Drive_with_TC
              cross_Drive_with_TC(medium=C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC())
                                  constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_with_TC
              annotation (Placement(transformation(extent={{2,-62},{42,-2}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Test_Driver_with_TC
              test_Driver_with_TC(steer_table=[0,0; 1,0; 10,1; 30,1; 40,-1])
                                                    annotation (Placement(transformation(
                    rotation=0, extent={{-20,50},{0,70}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink_Passive
                                                                                  fluid_Source_Sink1(
                calc_cumulative=false, redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop)
              annotation (Placement(transformation(extent={{-8,10},{12,30}})));
          equation
            connect(world.frame_b, cutTorque.frame_a) annotation (Line(
                points={{-80,-90},{-76,-90}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(torque_input.y, testing_torque.u) annotation (Line(
                points={{-79,-30},{-64,-30}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(cross_Drive_with_TC.brg_06, PTO_rear.flange) annotation (Line(
                points={{42,-32},{51,-32},{51,-30},{60,-30}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_with_TC.brg_02, right_output.flange) annotation (Line(
                points={{42,-2},{42,10},{60,10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_with_TC.brg_03, left_output.flange) annotation (Line(
                points={{42,-62},{42,-70},{60,-70}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(PTM.flange, cross_Drive_with_TC.brg_05) annotation (Line(
                points={{-28,0},{-20,0},{-20,-14},{2,-14}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(testing_torque.flange, cross_Drive_with_TC.brg_01) annotation (Line(
                points={{-42,-30},{-20,-30},{-20,-32},{2,-32}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(PTO_front.flange, cross_Drive_with_TC.brg_04) annotation (Line(
                points={{-30,-60},{-20,-60},{-20,-47},{2,-47}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.torque_Converter_Control_Bus, cross_Drive_with_TC.torque_Converter_Control_Bus)
              annotation (Line(
                points={{0,62.8},{6,62.8},{6,62},{15.0588,62},{15.0588,-2}},
                color={85,255,85},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.range_Pack_Control_Bus, cross_Drive_with_TC.range_Pack_Control_Bus)
              annotation (Line(
                points={{0,60.8},{10,60.8},{10,60},{20.8235,60},{20.8235,-2}},
                color={255,0,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.steering_Control_Bus, cross_Drive_with_TC.steering_Control_Bus)
              annotation (Line(
                points={{0,58.8},{12,58.8},{12,58},{26.5882,58},{26.5882,-1.85}},
                color={0,127,0},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.brake_Control_Bus, cross_Drive_with_TC.brake_Control_Bus)
              annotation (Line(
                points={{0,56.8},{12,56.8},{12,56},{32.7059,56},{32.7059,-1.85}},
                color={255,85,85},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.supply_port, cross_Drive_with_TC.fluid_in)
              annotation (Line(
                points={{-4,10},{-4,0},{2.11765,0},{2.11765,-1.85}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port, cross_Drive_with_TC.fluid_out)
              annotation (Line(
                points={{8,10},{8,2},{7.76471,2},{7.76471,-1.7}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=100),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Cross_Drive_with_TC_Basic_Test.mos"
                "Cross_Drive_with_TC_Basic_Test",   file=
                    "Scripts/Cross_Drive_with_TC_Basic_Test.mos"
                "Cross_Drive_with_TC_Basic_Test"));
          end Test_Bench_Cross_Drive_with_TC;

          model Test_Bench_Cross_Drive_with_TC_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque
              annotation (Placement(transformation(extent={{-76,-100},{-56,-80}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        right_output(d=15, stateSelect=StateSelect.always)
              annotation (Placement(transformation(extent={{60,0},{80,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        left_output(d=15, stateSelect=StateSelect.always)
              annotation (Placement(transformation(extent={{60,-80},{80,-60}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_rear(d=3, stateSelect=StateSelect.prefer)
              annotation (Placement(transformation(extent={{60,-40},{80,-20}})));
            Modelica.Blocks.Sources.Constant torque_input(k=500)
              annotation (Placement(transformation(extent={{-100,-40},{-80,-20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-62,-40},{-42,-20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTM(d=10, stateSelect=StateSelect.always)
              annotation (Placement(transformation(extent={{-28,-10},{-48,10}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_front(d=2, stateSelect=StateSelect.prefer)
              annotation (Placement(transformation(extent={{-30,-70},{-50,-50}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_with_TC
              cross_Drive_with_TC constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_with_TC
              annotation (Placement(transformation(extent={{2,-62},{42,-2}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Test_Driver_with_TC
              test_Driver_with_TC(steer_table=[0,0; 1,0; 10,1; 30,1; 40,-1])
                                                    annotation (Placement(transformation(
                    rotation=0, extent={{-20,50},{0,70}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink_Passive
                                                                                  fluid_Source_Sink1(
                calc_cumulative=false, redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop)
              annotation (Placement(transformation(extent={{-8,10},{12,30}})));
          equation
            connect(world.frame_b, cutTorque.frame_a) annotation (Line(
                points={{-80,-90},{-76,-90}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(torque_input.y, testing_torque.u) annotation (Line(
                points={{-79,-30},{-64,-30}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(cross_Drive_with_TC.brg_06, PTO_rear.flange) annotation (Line(
                points={{42,-30},{60,-30}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_with_TC.brg_02, right_output.flange) annotation (Line(
                points={{36,-10},{36,10},{60,10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cross_Drive_with_TC.brg_03, left_output.flange) annotation (Line(
                points={{36,-50},{36,-70},{60,-70}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(PTM.flange, cross_Drive_with_TC.brg_05) annotation (Line(
                points={{-28,0},{-20,0},{-20,-20},{2,-20}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(testing_torque.flange, cross_Drive_with_TC.brg_01) annotation (Line(
                points={{-42,-30},{2,-30}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(PTO_front.flange, cross_Drive_with_TC.brg_04) annotation (Line(
                points={{-30,-60},{-20,-60},{-20,-40},{2,-40}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cutTorque.frame_b, cross_Drive_with_TC.mount_02) annotation (Line(
                points={{-56,-90},{18.6,-90},{18.6,-62.2}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.torque_Converter_Control_Bus, cross_Drive_with_TC.torque_Converter_Control_Bus)
              annotation (Line(
                points={{0,62.8},{6,62.8},{6,62},{17,62},{17,-9.4}},
                color={85,255,85},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.range_Pack_Control_Bus, cross_Drive_with_TC.range_Pack_Control_Bus)
              annotation (Line(
                points={{0,60.8},{10,60.8},{10,60},{19.4,60},{19.4,-9.4}},
                color={255,0,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.steering_Control_Bus, cross_Drive_with_TC.steering_Control_Bus)
              annotation (Line(
                points={{0,58.8},{12,58.8},{12,58},{22,58},{22,-9.4}},
                color={0,127,0},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.brake_Control_Bus, cross_Drive_with_TC.brake_Control_Bus)
              annotation (Line(
                points={{0,56.8},{12,56.8},{12,56},{24.4,56},{24.4,-9.4}},
                color={255,85,85},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.supply_port, cross_Drive_with_TC.fluid_in)
              annotation (Line(
                points={{-4,10},{-4,0},{5.8,0},{5.8,-6}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port, cross_Drive_with_TC.fluid_out)
              annotation (Line(
                points={{8,10},{8,2},{14,2},{14,-6}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=100),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Cross_Drive_with_TC_Basic_Test.mos"
                "Cross_Drive_with_TC_Basic_Test",   file=
                    "Scripts/Cross_Drive_with_TC_Basic_Test.mos"
                "Cross_Drive_with_TC_Basic_Test"));
          end Test_Bench_Cross_Drive_with_TC_original;
        end Tests;
      end Cross_Drive_Transmission;

      package Drive_Shafts "Test area for drive shafts"
          extends Modelica.Icons.Package;

        model Drive_Shaft
        "Drive shaft implementation with replaceable mechanical and thermal sub-models"
        extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Interfaces.Drive_Shaft;
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
            drive_Shaft(
            length=length,
            length_flange_to_joint_center=length_flange_to_joint_center,
            max_length=max_length,
            Tube_Outside_Diameter=Tube_Outside_Diameter,
            Tube_Thickness=Tube_Thickness,
            lossTable=lossTable,
            k_thermal=k_thermal,
            c_thermal=c_thermal)
            annotation (Placement(transformation(extent={{-26,-19},{29,36}})));
          parameter SI.Length length=1 "Length of shaft, slip joint collapsed";
          parameter SI.Length length_flange_to_joint_center=0.1
          "Length of from connection flanges to the center of the articulating joints";
          parameter SI.Length max_length=1.1
          "Maximum length with slip joint at max extension";
          parameter SI.Diameter Tube_Outside_Diameter=0.05
          "Outer diameter of shaft";
          parameter SI.Diameter Tube_Thickness=0.005 "Wall thickness of shaft";
          parameter Real lossTable[:,5]=[0,0.97,0.97,0,0; 1000,0.97,0.97,0,0]
          "losses at drive shaft joint";
          parameter SI.ThermalConductivity k_thermal=40
          "Conductivity of shaft material";
          parameter SI.SpecificHeatCapacity c_thermal=466
          "Specific heat of shaft material";
        equation
          connect(drive_Shaft.frame_a, frame_a.flange) annotation (Line(
              points={{-26,8.5},{-63,8.5},{-63,10},{-100,10}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(drive_Shaft.frame_b, frame_b.flange) annotation (Line(
              points={{29,8.5},{66,8.5},{66,10},{100,10}},
              color={0,0,0},
              smooth=Smooth.None));
        annotation (
            Diagram(coordinateSystem(
                preserveAspectRatio=true,
                extent={{-100,-100},{100,100}},
                grid={1,1}), graphics),
            Icon(coordinateSystem(preserveAspectRatio=true, extent={{-100,-100},{100,
                    100}})));
        end Drive_Shaft;

        package Interfaces
         extends Modelica.Icons.InterfacesPackage;

          partial model Drive_Shaft
          extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Interfaces.Drive_Shaft_Mechanical;
            annotation (
              Diagram(coordinateSystem(
                  preserveAspectRatio=false,
                  extent={{-100,-100},{100,100}},
                  grid={1,1}), graphics),
              Documentation(info="<html>
<p>Partial model that specifies the connections a drive shaft provides and the sub-models a drive shaft must contain and how they are internally connected.</p>
<p>A drive shaft must contain:</p>
<p><ul>
<li>A mechanical model that extends Partial_Mechanical</li>
<li>A thermal model that extends Partial_Thermal</li>
<li>A data record that extends Drive_Shaft_Record_Template</li>
</ul></p>
<p><br/>The mechanical model must connect to the two external MultiBody frames as well as internally via two heat ports to the thermal model. These two heat ports can be used to represent heat generation within the joints of the drive shaft. The thermal model connects to the mechanical model via two heat ports and must also connect to an external heat port.</p>
<p>The data record is specified as an<b> inner </b>and will be available to the mechanical and thermal models as an <b>outer</b> component.</p>
</html>"),    Icon(coordinateSystem(preserveAspectRatio=true, extent={{-100,-100},{100,
                      100}}), graphics={
                  Polygon(
                    points={{56,74},{48,74},{46,80},{48,86},{56,88},{60,86},{72,86},{82,
                        88},{86,86},{88,76},{82,72},{86,72},{86,66},{80,60},{72,62},{68,
                        66},{66,64},{62,62},{58,60},{52,62},{48,68},{56,74}},
                    lineColor={0,0,0},
                    smooth=Smooth.Bezier,
                    fillColor={254,254,255},
                    fillPattern=FillPattern.Solid),
                  Rectangle(
                    extent={{-82,84},{-60,56}},
                    lineColor={0,0,0},
                    fillColor={175,175,175},
                    fillPattern=FillPattern.HorizontalCylinder),
                  Rectangle(
                    extent={{62,30},{84,2}},
                    lineColor={0,0,0},
                    fillColor={175,175,175},
                    fillPattern=FillPattern.HorizontalCylinder),
                  Polygon(
                    points={{-46,80},{58,30},{48,8},{-56,60},{-46,80}},
                    lineColor={0,0,0},
                    fillPattern=FillPattern.HorizontalCylinder,
                    smooth=Smooth.None,
                    fillColor={175,175,175}),
                  Line(
                    points={{-98,8},{-88,8},{-88,72},{-54,72},{58,14},{100,14}},
                    color={0,0,0},
                    smooth=Smooth.None,
                    pattern=LinePattern.DashDot),
                  Line(
                    points={{60,14},{60,46},{58,64}},
                    color={255,0,0},
                    smooth=Smooth.None),
                  Line(
                    points={{60,86},{60,80},{58,74},{52,70}},
                    color={175,175,175},
                    smooth=Smooth.Bezier),
                  Line(
                    points={{68,66},{68,68},{68,72},{74,74},{82,72}},
                    color={175,175,175},
                    smooth=Smooth.Bezier),
                  Line(
                    points={{58,74},{64,74},{68,70}},
                    color={175,175,175},
                    smooth=Smooth.Bezier),
                  Line(
                    points={{72,86},{70,80},{70,78},{74,74}},
                    color={175,175,175},
                    smooth=Smooth.Bezier),
                  Line(
                    points={{52,54},{58,64},{64,54}},
                    color={255,0,0},
                    smooth=Smooth.None),
                  Line(
                    points={{-6,-5},{0,5},{6,-5}},
                    color={255,0,0},
                    smooth=Smooth.None,
                    origin={42,81},
                    rotation=270),
                  Line(
                    points={{-54,72},{-50,90},{46,80}},
                    color={255,0,0},
                    smooth=Smooth.None),
                  Text(
                    extent={{-120,-20},{-100,-40}},
                    lineColor={215,215,215},
                    fillColor={254,254,255},
                    fillPattern=FillPattern.Solid,
                    textString="a"),
                  Text(
                    extent={{100,-20},{120,-40}},
                    lineColor={215,215,215},
                    fillColor={254,254,255},
                    fillPattern=FillPattern.Solid,
                    textString="b"),
                  Text(
                    extent={{-140,-40},{140,-80}},
                    lineColor={0,0,255},
                    fillColor={254,254,255},
                    fillPattern=FillPattern.Solid,
                    textString="%name")}));
          end Drive_Shaft;

          partial model Drive_Shaft_Mechanical

            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing frame_a(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-110,0},{-90,20}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing frame_b(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{90,0},{110,20}}),
                  iconTransformation(extent={{90,0},{110,20}})));
            inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,80},{-80,100}})));
            annotation (
              Diagram(coordinateSystem(
                  preserveAspectRatio=true,
                  extent={{-100,-100},{100,100}},
                  grid={1,1}), graphics),
              Icon(coordinateSystem(preserveAspectRatio=true, extent={{-100,-100},{100,
                      100}}), graphics));
          end Drive_Shaft_Mechanical;
        end Interfaces;

        package Test_Components
        extends Modelica.Icons.Package;
          model ConstantTorque
            Modelica.Mechanics.Rotational.Sources.ConstantTorque constantTorque(
                tau_constant=100)
              annotation (Placement(transformation(extent={{-84,-10},{-64,10}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing flange
              annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          equation
            connect(constantTorque.flange, flange.flange) annotation (Line(
                points={{-64,0},{100,0}},
                color={0,0,0},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end ConstantTorque;

          model FixedDamper

            Modelica.Mechanics.Rotational.Components.Damper damper(d=1)
              annotation (Placement(transformation(extent={{51,-10},{71,10}})));
            Modelica.Mechanics.Rotational.Components.Fixed fixed
              annotation (Placement(transformation(extent={{80,-10},{100,10}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing flange
              annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
          equation
            connect(damper.flange_b,fixed. flange) annotation (Line(
                points={{71,0},{90,0}},
                color={0,0,0},
                smooth=Smooth.None));
            connect(flange.flange, damper.flange_a) annotation (Line(
                points={{-100,0},{51,0}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end FixedDamper;
        end Test_Components;

        package Tests
        extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Test_Bench_Drive_Shaft_No_3D
          "Tests operation of a driveshaft model with source and sink mounted on isolators"
          extends C2M2L_Ext.Icons.Simple_Test_Case;
          inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-25,-84},{-5,-64}})));

            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{-79,64},{-59,84}})));
            replaceable Drive_Shaft drive_Shaft constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
              annotation (Placement(transformation(extent={{-15,-10},{5,10}})));
            Test_Components.ConstantTorque constantTorque annotation (Placement(
                  transformation(rotation=0, extent={{-85,-10},{-65,10}})));
            Test_Components.FixedDamper fixedDamper annotation (Placement(transformation(
                    rotation=0, extent={{54,-10},{74,10}})));
          equation

            connect(constantTorque.flange, drive_Shaft.frame_a) annotation (Line(
                points={{-65,0},{-40,0},{-40,1},{-15,1}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(drive_Shaft.frame_b, fixedDamper.flange) annotation (Line(
                points={{5,1},{29.5,1},{29.5,0},{54,0}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(
                preserveAspectRatio=true,
                extent={{-100,-100},{100,100}},
                grid={1,1}), graphics),
            Documentation(info="<html>
<p>A test bench for exercising drive shaft models through a range of articulation angles.</p>
<p>Includes:</p>
<p><ul>
<li>Torque source that sets the input torque</li>
<li>Torque sink that sets the rpm by using a controller to set the required reaction torque</li>
<li>A replaceable drive shaft model</li>
<li>A translation that sets the distance between the source and sink</li>
<li>A moving element that adjusts the height of the sink relative to the source</li>
</ul></p>
<p>fhfj</p>
</html>"),  Icon(coordinateSystem(preserveAspectRatio=true, extent={{-100,-100},{100,100}}),
                graphics),
            experiment(
                StopTime=8,
                NumberOfIntervals=5000,
                Algorithm="Dassl"),
            __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Drive_Shaft_Basic_Test.mos"
                "Drive_Shaft_Basic_Test"));
          end Test_Bench_Drive_Shaft_No_3D;

          model Test_Bench_Drive_Shaft_No_3D_original
          "Tests operation of a driveshaft model with source and sink mounted on isolators"
          extends C2M2L_Ext.Icons.Simple_Test_Case;
          inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-25,-84},{-5,-64}})));

            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{-79,64},{-59,84}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
              drive_Shaft
              annotation (Placement(transformation(extent={{-15,-10},{5,10}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing flange
              annotation (Placement(transformation(extent={{20,-10},{40,10}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing flange1
              annotation (Placement(transformation(extent={{-47,-10},{-27,10}})));
            Modelica.Mechanics.Rotational.Sources.ConstantTorque constantTorque(
                tau_constant=100)
              annotation (Placement(transformation(extent={{-84,-10},{-64,10}})));
            Modelica.Mechanics.Rotational.Components.Damper damper(d=1)
              annotation (Placement(transformation(extent={{51,-10},{71,10}})));
            Modelica.Mechanics.Rotational.Components.Fixed fixed
              annotation (Placement(transformation(extent={{80,-10},{100,10}})));
          equation

            connect(drive_Shaft.frame_b, flange) annotation (Line(
                points={{5,0},{30,0}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(drive_Shaft.frame_a, flange1) annotation (Line(
                points={{-15,0},{-37,0}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(constantTorque.flange, flange1.flange) annotation (Line(
                points={{-64,0},{-37,0}},
                color={0,0,0},
                smooth=Smooth.None));
            connect(damper.flange_b, fixed.flange) annotation (Line(
                points={{71,0},{90,0}},
                color={0,0,0},
                smooth=Smooth.None));
            connect(damper.flange_a, flange.flange) annotation (Line(
                points={{51,0},{30,0}},
                color={0,0,0},
                smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(
                preserveAspectRatio=true,
                extent={{-100,-100},{100,100}},
                grid={1,1}), graphics),
            Documentation(info="<html>
<p>A test bench for exercising drive shaft models through a range of articulation angles.</p>
<p>Includes:</p>
<p><ul>
<li>Torque source that sets the input torque</li>
<li>Torque sink that sets the rpm by using a controller to set the required reaction torque</li>
<li>A replaceable drive shaft model</li>
<li>A translation that sets the distance between the source and sink</li>
<li>A moving element that adjusts the height of the sink relative to the source</li>
</ul></p>
<p>fhfj</p>
</html>"),  Icon(coordinateSystem(preserveAspectRatio=true, extent={{-100,-100},{100,100}}),
                graphics),
            experiment(
                StopTime=8,
                NumberOfIntervals=5000,
                Algorithm="Dassl"),
            __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Drive_Shaft_Basic_Test.mos"
                "Drive_Shaft_Basic_Test"));
          end Test_Bench_Drive_Shaft_No_3D_original;

          model Test_Bench_Drive_Shaft_No_3D_Ricardo
          "Tests operation of a driveshaft model with source and sink mounted on isolators"
          extends C2M2L_Ext.Icons.Simple_Test_Case;
          inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-25,-84},{-5,-64}})));

            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{-79,64},{-59,84}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
              drive_Shaft
              annotation (Placement(transformation(extent={{-15,-10},{5,10}})));
            Test_Components.ConstantTorque constantTorque annotation (Placement(
                  transformation(rotation=0, extent={{-85,-10},{-65,10}})));
            Test_Components.FixedDamper fixedDamper annotation (Placement(transformation(
                    rotation=0, extent={{54,-10},{74,10}})));
          equation

            connect(constantTorque.flange, drive_Shaft.frame_a) annotation (Line(
                points={{-65,0},{-15,0}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(drive_Shaft.frame_b, fixedDamper.flange) annotation (Line(
                points={{5,0},{54,0}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(
                preserveAspectRatio=true,
                extent={{-100,-100},{100,100}},
                grid={1,1}), graphics),
            Documentation(info="<html>
<p>A test bench for exercising drive shaft models through a range of articulation angles.</p>
<p>Includes:</p>
<p><ul>
<li>Torque source that sets the input torque</li>
<li>Torque sink that sets the rpm by using a controller to set the required reaction torque</li>
<li>A replaceable drive shaft model</li>
<li>A translation that sets the distance between the source and sink</li>
<li>A moving element that adjusts the height of the sink relative to the source</li>
</ul></p>
<p>fhfj</p>
</html>"),  Icon(coordinateSystem(preserveAspectRatio=true, extent={{-100,-100},{100,100}}),
                graphics),
            experiment(
                StopTime=8,
                NumberOfIntervals=5000,
                Algorithm="Dassl"),
            __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Drive_Shaft_Basic_Test.mos"
                "Drive_Shaft_Basic_Test"));
          end Test_Bench_Drive_Shaft_No_3D_Ricardo;
        end Tests;
      end Drive_Shafts;

      package Final_Drive "Implementations of final drives"
          extends Modelica.Icons.Package;

        model Example_Standalone_Final_Drive_Implementation
        "A simple final drive example"
        extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Interfaces.Example_Standalone_Final_Drive_Implementation(
              brg_01(includeBearingConnector=world.driveTrainMechanics3D), brg_02(
                includeBearingConnector=world.driveTrainMechanics3D));
          parameter Real ratio=3.0
          "Transmission ratio (flange_a.phi/flange_b.phi)"
            annotation (Dialog(group="Transfer Case"));
          parameter Real lossTable[:,5]=[0,0.97,0.97,0,0]
          "Array for mesh efficiencies and bearing friction depending on speed"
            annotation (Dialog(group="Transfer Case"));

          parameter SI.Area case_heat_transfer_area=1.0
          "Area available for heat to transfer through case"
            annotation (Dialog(tab="Thermal Model"));
          parameter SI.Thickness case_heat_transfer_thickness=0.005
          "Effective case thickness for heat transfer"
            annotation (Dialog(tab="Thermal Model"));
          parameter SI.ThermalConductivity case_thermal_conductivity=50
          "Conductivity of case"   annotation (Dialog(tab="Thermal Model"));
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
            example_Standalone_Final_Drive_Implementation(
            useSupport=useSupport,
            ratio=ratio,
            lossTable=lossTable,
            case_heat_transfer_area=case_heat_transfer_area,
            case_heat_transfer_thickness=case_heat_transfer_thickness,
            case_thermal_conductivity=case_thermal_conductivity)
            annotation (Placement(transformation(extent={{-20,-32},{20,28}})));
        equation
          connect(example_Standalone_Final_Drive_Implementation.brg_02, brg_02.flange)
            annotation (Line(
              points={{20,0.2},{112,0.2},{112,0},{200,0}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(example_Standalone_Final_Drive_Implementation.outer_surface_heat_port,
            outer_surface_heat_port) annotation (Line(
              points={{10.2,24},{10.2,146},{122,146},{122,270}},
              color={191,0,0},
              smooth=Smooth.None));
          connect(example_Standalone_Final_Drive_Implementation.brg_01, brg_01.flange)
            annotation (Line(
              points={{-20.2,0},{-200,0}},
              color={0,0,0},
              smooth=Smooth.None));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -320},{200,280}}),
                              graphics), Icon(coordinateSystem(preserveAspectRatio=false,
                  extent={{-200,-320},{200,280}}),
                                              graphics),
            Documentation(revisions="<html>
</html>",         info="<html>
<p>Notes:</p>
<p><ul>
<li>User must input final drive ratio and efficiency</li>
<li>Component will output max torque and speed</li>
</ul></p>
</html>"));
        end Example_Standalone_Final_Drive_Implementation;

        package Interfaces
         extends Modelica.Icons.InterfacesPackage;

          partial model Example_Standalone_Final_Drive_Implementation
          "A simple final drive example"
            parameter Boolean useSupport=false
            "= true, if support flange enabled, otherwise implicitly grounded"
              annotation(Evaluate=true, HideResult=true, choices(__Dymola_checkBox=true));

            parameter Real ratio=3.0
            "Transmission ratio (flange_a.phi/flange_b.phi)"
              annotation (Dialog(group="Transfer Case"));
            parameter Real lossTable[:,5]=[0,0.97,0.97,0,0]
            "Array for mesh efficiencies and bearing friction depending on speed"
              annotation (Dialog(group="Transfer Case"));

            parameter SI.Area case_heat_transfer_area=1.0
            "Area available for heat to transfer through case"
              annotation (Dialog(tab="Thermal Model"));
            parameter SI.Thickness case_heat_transfer_thickness=0.005
            "Effective case thickness for heat transfer"
              annotation (Dialog(tab="Thermal Model"));
            parameter SI.ThermalConductivity case_thermal_conductivity=50
            "Conductivity of case"   annotation (Dialog(tab="Thermal Model"));

        public
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,-10},{-190,10}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_02(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{190,-10},{210,10}})));
            inner
            C2M2L_OM.MSL_Extend.Environments.Lumped_Thermal_Fixed_HTC_Open_Volume
                                                                                        env(
              medium=Modelica.Thermal.FluidHeatFlow.Media.Water(),
              fixed_htc=3000,
              initial_T=293.15)
              annotation (Placement(transformation(extent={{-180,210},{-160,230}})));
            outer Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-180,170},{-160,190}})));
            Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a outer_surface_heat_port
              annotation (Placement(transformation(extent={{112,260},{132,280}})));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -320},{200,280}}),
                                graphics), Icon(coordinateSystem(preserveAspectRatio=false,
                    extent={{-200,-320},{200,280}}),
                                                graphics={
                  Rectangle(
                    extent={{-200,17},{-64,-17}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None),
                  Rectangle(
                    extent={{-80,184},{-34,62}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-80,48},{-34,-52}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None),
                  Rectangle(
                    extent={{-74,138},{48,112}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{36,150},{82,102}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{36,90},{82,-110}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None),
                  Rectangle(
                    extent={{74,18},{200,-16}},
                    fillColor={215,215,215},
                    fillPattern=FillPattern.Solid,
                    pattern=LinePattern.None)}),
              Documentation(revisions="<html>
</html>",           info="<html>
<p>Notes:</p>
<p><ul>
<li>User must input final drive ratio and efficiency</li>
<li>Component will output max torque and speed</li>
</ul></p>
</html>"));
          end Example_Standalone_Final_Drive_Implementation;
        end Interfaces;

        package Tests
        extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Test_Bench_Final_Drive "test model for final drive"
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-60,80},{-40,100}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-80,-80},{-60,-60}})));
            Modelica.Blocks.Sources.Constant const(k=1000)
              annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
            C2M2L_Ext.Environments.Thermal_To_Environment_Thru_Area thermal_To_Environment_Thru_Area(
                area_for_heat_transfer=2)
              annotation (Placement(transformation(extent={{12,30},{32,50}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        output_load(d=30)
              annotation (Placement(transformation(extent={{40,-20},{60,0}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{-100,80},{-80,100}})));
            replaceable
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
              example_Standalone_Final_Drive_Implementation constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
              annotation (Placement(transformation(extent={{-20,-42},{20,18}})));
          equation
            connect(const.y, testing_torque.u)
                                              annotation (Line(
                points={{-79,-10},{-62,-10}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(example_Standalone_Final_Drive_Implementation.outer_surface_heat_port,
              thermal_To_Environment_Thru_Area.solid) annotation (Line(
                points={{12.2,17},{10,17},{10,40},{12,40}},
                color={191,0,0},
                smooth=Smooth.None));
            connect(testing_torque.flange, example_Standalone_Final_Drive_Implementation.brg_01)
              annotation (Line(
                points={{-40,-10},{-20,-10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(example_Standalone_Final_Drive_Implementation.brg_02, output_load.flange)
              annotation (Line(
                points={{20,-10},{40,-10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(extent={{-160,-100},{160,100}},
                    preserveAspectRatio=true),
                                graphics),
              experiment(StopTime=10, Interval=0.01),
              __Dymola_experimentSetupOutput,
              Icon(coordinateSystem(extent={{-160,-100},{160,100}})),
              Commands(file="Scripts/Final_Drive_Instance_Test.mos"
                "Final_Drive_Instance_Test"));
          end Test_Bench_Final_Drive;

          model Test_Bench_Final_Drive_original "test model for final drive"
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-60,80},{-40,100}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-80,-80},{-60,-60}})));
            Modelica.Blocks.Sources.Constant const(k=1000)
              annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
            C2M2L_Ext.Environments.Thermal_To_Environment_Thru_Area thermal_To_Environment_Thru_Area(
                area_for_heat_transfer=2)
              annotation (Placement(transformation(extent={{12,30},{32,50}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        output_load(d=30)
              annotation (Placement(transformation(extent={{40,-20},{60,0}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{-100,80},{-80,100}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
              example_Standalone_Final_Drive_Implementation
              annotation (Placement(transformation(extent={{-20,-42},{20,18}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque(Nm_to_m=100)
              annotation (Placement(transformation(extent={{-40,-80},{-20,-60}})));
          equation
            connect(const.y, testing_torque.u)
                                              annotation (Line(
                points={{-79,-10},{-62,-10}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(example_Standalone_Final_Drive_Implementation.brg_02, output_load.flange)
              annotation (Line(
                points={{20,-10},{40,-10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(testing_torque.flange, example_Standalone_Final_Drive_Implementation.brg_01)
              annotation (Line(
                points={{-40,-10},{-20,-10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(example_Standalone_Final_Drive_Implementation.outer_surface_heat_port,
              thermal_To_Environment_Thru_Area.solid) annotation (Line(
                points={{10.2,14},{10,14},{10,40},{12,40}},
                color={191,0,0},
                smooth=Smooth.None));
            connect(world.frame_b, cutTorque.frame_a) annotation (Line(
                points={{-60,-70},{-40,-70}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(cutTorque.frame_b, example_Standalone_Final_Drive_Implementation.mount_01)
              annotation (Line(
                points={{-20,-70},{-4,-70},{-4,-42}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(extent={{-160,-100},{160,100}},
                    preserveAspectRatio=true),
                                graphics),
              experiment(StopTime=10, Interval=0.01),
              __Dymola_experimentSetupOutput,
              Icon(coordinateSystem(extent={{-160,-100},{160,100}})),
              Commands(file="Scripts/Final_Drive_Instance_Test.mos"
                "Final_Drive_Instance_Test"));
          end Test_Bench_Final_Drive_original;

          model Test_Final_Drive "test model for final drive"
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-60,80},{-40,100}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env(fixed_htc=
                  130)
              annotation (Placement(transformation(extent={{-100,80},{-80,100}})));
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
              example_Standalone_Transfer_Case_Implementation(
              case_heat_transfer_area=0.5,
              case_heat_transfer_thickness=0.008,
              lossTable=[0,0.94,0.94,5,5],
              case_thermal_conductivity=50)
              annotation (Placement(transformation(extent={{-12,-28},{8,4}})));
            Modelica.Blocks.Sources.Step step(
              offset=1500,
              height=-1500,
              startTime=500)
              annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
            C2M2L_Ext.Environments.Thermal_To_Environment_Thru_Area thermal_To_Environment_Thru_Area(
                area_for_heat_transfer=2)
              annotation (Placement(transformation(extent={{14,16},{34,36}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        output_load(d=30)
              annotation (Placement(transformation(extent={{40,-20},{60,0}})));
          equation
            connect(thermal_To_Environment_Thru_Area.solid,
              example_Standalone_Transfer_Case_Implementation.outer_surface_heat_port)
              annotation (Line(
                points={{14,26},{4.1,26},{4.1,3.46667}},
                color={191,0,0},
                smooth=Smooth.None));
            connect(step.y, testing_torque.u) annotation (Line(
                points={{-79,-10},{-62,-10}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(testing_torque.flange,
              example_Standalone_Transfer_Case_Implementation.brg_01) annotation (Line(
                points={{-40,-10},{-26,-10},{-26,-10.9333},{-12,-10.9333}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(example_Standalone_Transfer_Case_Implementation.brg_02, output_load.flange)
              annotation (Line(
                points={{8,-10.9333},{26,-10.9333},{26,-10},{40,-10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(world.frame_b, testing_torque.frame_mount) annotation (Line(
                points={{-80,-70},{-50,-70},{-50,-20}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(extent={{-160,-100},{160,100}},
                    preserveAspectRatio=true),
                                graphics),
              experiment(StopTime=2),
              __Dymola_experimentSetupOutput,
              Icon(coordinateSystem(extent={{-160,-100},{160,100}})));
          end Test_Final_Drive;

          model Test_Final_Drive_original "test model for final drive"
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-60,80},{-40,100}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env(fixed_htc=
                  130)
              annotation (Placement(transformation(extent={{-100,80},{-80,100}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
              example_Standalone_Transfer_Case_Implementation(
              case_heat_transfer_area=0.5,
              case_heat_transfer_thickness=0.008,
              lossTable=[0,0.94,0.94,5,5],
              case_thermal_conductivity=50)
              annotation (Placement(transformation(extent={{-12,-28},{8,4}})));
            Modelica.Blocks.Sources.Step step(
              offset=1500,
              height=-1500,
              startTime=500)
              annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
            C2M2L_Ext.Environments.Thermal_To_Environment_Thru_Area thermal_To_Environment_Thru_Area(
                area_for_heat_transfer=2)
              annotation (Placement(transformation(extent={{14,16},{34,36}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        output_load(d=30)
              annotation (Placement(transformation(extent={{40,-20},{60,0}})));
          equation
            connect(thermal_To_Environment_Thru_Area.solid,
              example_Standalone_Transfer_Case_Implementation.outer_surface_heat_port)
              annotation (Line(
                points={{14,26},{3.1,26},{3.1,1.86667}},
                color={191,0,0},
                smooth=Smooth.None));
            connect(step.y, testing_torque.u) annotation (Line(
                points={{-79,-10},{-62,-10}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(testing_torque.flange,
              example_Standalone_Transfer_Case_Implementation.brg_01) annotation (Line(
                points={{-40,-10},{-26,-10},{-26,-10.9333},{-12,-10.9333}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(example_Standalone_Transfer_Case_Implementation.brg_02, output_load.flange)
              annotation (Line(
                points={{8,-10.9333},{26,-10.9333},{26,-10},{40,-10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(world.frame_b, testing_torque.frame_mount) annotation (Line(
                points={{-80,-70},{-50,-70},{-50,-20}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(extent={{-160,-100},{160,100}},
                    preserveAspectRatio=true),
                                graphics),
              experiment(StopTime=2),
              __Dymola_experimentSetupOutput,
              Icon(coordinateSystem(extent={{-160,-100},{160,100}})));
          end Test_Final_Drive_original;
        end Tests;
      end Final_Drive;

      package Gearbox_90_Degree "90 degree gearbox"
        extends Modelica.Icons.Package;

        model Gearbox_90_Degree "90 degree gearbox bevel"
          extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Interfaces.Gearbox_90_Degree;

          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Gearbox_90_Degree
            gearbox_90_Degree(
            useSupport=useSupport,
            ratio=ratio,
            efficiency=efficiency,
            moi_rotational=moi_rotational,
            case_heat_transfer_area=case_heat_transfer_area,
            case_heat_transfer_thickness=case_heat_transfer_thickness,
            case_thermal_conductivity=case_thermal_conductivity)
            annotation (Placement(transformation(extent={{-46,40},{-12,70}})));
          parameter Real ratio=3.10
          "Bevel or hypoid gear ratio from prop shaft";
          parameter Real efficiency[:,5]=[0,0.96,0.96,0,0]
          "losses for bevel gear mesh";
          parameter SI.Inertia moi_rotational=0.01
          "Input moment of inertia (seen at bevel input)";
          parameter Boolean useSupport=false
          "= true, if support flange enabled, otherwise implicitly grounded";
          parameter SI.Area case_heat_transfer_area=1.0
          "Area available for heat to transfer through case";
          parameter SI.Thickness case_heat_transfer_thickness=0.005
          "Effective case thickness for heat transfer";
          parameter SI.ThermalConductivity case_thermal_conductivity=50
          "Conductivity of case";
        equation
          connect(gearbox_90_Degree.outer_surface_heat_port, outer_surface_heat_port)
            annotation (Line(
              points={{-26,70},{-26,200},{18,200}},
              color={191,0,0},
              smooth=Smooth.None));
          connect(gearbox_90_Degree.brg_2, brg_02.flange) annotation (Line(
              points={{-11,71.2},{-11,152},{140,152},{140,200}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(gearbox_90_Degree.brg_1, brg_01.flange) annotation (Line(
              points={{-45,50.6},{-122.5,50.6},{-122.5,16},{-200,16}},
              color={0,0,0},
              smooth=Smooth.None));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-200,-100},
                    {140,200}}),
                           graphics),               Diagram(coordinateSystem(
                  preserveAspectRatio=true, extent={{-200,-100},{140,200}}),
                                                            graphics),
            Documentation(info="<html>
<p>Notes:</p>
<p><ul>
<li>Model uses Differential_Bevel_Gear_Open and lossy_Gear_With_Environment for bevel ratio</li>
<li>User must input spider and side gear teeth count, mesh efficiency, torque &AMP; speed limits, input bevel ratio and efficiency</li>
</ul></p>
</html>"),  experiment(StopTime=400),
            __Dymola_experimentSetupOutput);
        end Gearbox_90_Degree;

        package Interfaces
        extends Modelica.Icons.InterfacesPackage;

          partial model Gearbox_90_Degree
          extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Interfaces.Gearbox_90_Degree_Mechanical;
          extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Interfaces.Gearbox_90_Degree_Fluid;
            annotation (Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,
                      -100},{140,200}}),        graphics), Icon(coordinateSystem(
                    preserveAspectRatio=false, extent={{-200,-100},{140,200}}),
                  graphics={
                  Rectangle(
                    extent={{139,-16.5},{-139,16.5}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={149.5,71},
                    rotation=90),
                  Polygon(
                    points={{-10,-68},{-10,-220},{20,-220},{20,-52},{-10,-22},{-10,-68}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-10,-58},
                    rotation=90),
                  Rectangle(
                    extent={{-96,13},{96,-13}},
                    pattern=LinePattern.None,
                    lineColor={0,0,0},
                    fillColor={135,135,135},
                    fillPattern=FillPattern.HorizontalCylinder,
                    origin={-94,10},
                    rotation=180),
                  Polygon(
                    points={{-75,-8},{-47,24},{39,24},{69,-8},{-75,-8}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={8,7},
                    rotation=270)}));
          end Gearbox_90_Degree;

          partial model Gearbox_90_Degree_Fluid

            inner
            C2M2L_OM.MSL_Extend.Environments.Lumped_Thermal_Fixed_HTC_Open_Volume
                                                                                        env(
                fluid_area=0.5, medium=Modelica.Thermal.FluidHeatFlow.Media.Water())
              annotation (Placement(transformation(extent={{-176,126},{-156,146}})));
            Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a outer_surface_heat_port
              annotation (Placement(transformation(extent={{8,190},{28,210}})));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true,  extent={{-200,
                      -100},{140,200}}),        graphics), Icon(coordinateSystem(
                    preserveAspectRatio=false, extent={{-200,-100},{140,200}})));
          end Gearbox_90_Degree_Fluid;

          partial model Gearbox_90_Degree_Mechanical

            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,6},{-190,26}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_02(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,190},{150,210}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-200,-100},{-180,-80}})));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true,  extent={{-200,
                      -100},{140,200}}),        graphics), Icon(coordinateSystem(
                    preserveAspectRatio=false, extent={{-200,-100},{140,200}})));
          end Gearbox_90_Degree_Mechanical;
        end Interfaces;

        package Tests
          extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Test_90degree_Gearbox
          " Torques at the input and the outputs can be varied."
            extends C2M2L_Ext.Icons.Simple_Test_Case;

            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));
            Gearbox_90_Degree gearbox_90_Degree
              annotation (Placement(transformation(extent={{0,-17},{20,15}})));
            Modelica.Thermal.HeatTransfer.Components.HeatCapacitor heatCapacitor(C=100000,
                T(start=313.15, fixed=true))
              annotation (Placement(transformation(extent={{-20,40},{0,60}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        output_load(d=15)
              annotation (Placement(transformation(extent={{40,20},{60,40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-40,-10},{-20,10}})));
            Modelica.Blocks.Sources.Constant torque_input(k=100)
              annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));
          equation
            connect(output_load.flange, gearbox_90_Degree.brg_02) annotation (Line(
                points={{40,30},{20,30},{20,15}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(torque_input.y,testing_torque. u) annotation (Line(
                points={{-59,0},{-42,0}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(testing_torque.flange, gearbox_90_Degree.brg_01) annotation (Line(
                points={{-20,0},{-6,0},{-6,-4.62667},{0,-4.62667}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(gearbox_90_Degree.outer_surface_heat_port, heatCapacitor.port)
              annotation (Line(
                points={{12.8235,15},{12.8235,40},{-10,40}},
                color={191,0,0},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=80, Interval=0.01),
              __Dymola_experimentSetupOutput(events=false));
          end Test_90degree_Gearbox;

          model Test_90degree_Gearbox_Original
          " Torques at the input and the outputs can be varied."
            extends C2M2L_Ext.Icons.Simple_Test_Case;

            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));
            Modelica.Mechanics.MultiBody.Sensors.CutTorque cutTorque(Nm_to_m=100)
              annotation (Placement(transformation(extent={{-20,-80},{0,-60}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Gearbox_90_Degree
              gearbox_90_Degree
              annotation (Placement(transformation(extent={{0,-17},{20,15}})));
            Modelica.Thermal.HeatTransfer.Components.HeatCapacitor heatCapacitor(C=100000,
                T(start=313.15, fixed=true))
              annotation (Placement(transformation(extent={{-20,40},{0,60}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        output_load(d=15)
              annotation (Placement(transformation(extent={{40,20},{60,40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-40,-10},{-20,10}})));
            Modelica.Blocks.Sources.Constant torque_input(k=100)
              annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));
          equation
            connect(world.frame_b,cutTorque. frame_a) annotation (Line(
                points={{-40,-70},{-20,-70}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(gearbox_90_Degree.mount_02, cutTorque.frame_b) annotation (Line(
                points={{10,-17},{10,-70},{0,-70}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(output_load.flange, gearbox_90_Degree.brg_02) annotation (Line(
                points={{40,30},{17,30},{17,10.7333}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(torque_input.y,testing_torque. u) annotation (Line(
                points={{-59,0},{-42,0}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(testing_torque.flange, gearbox_90_Degree.brg_01) annotation (Line(
                points={{-20,0},{-6,0},{-6,0.0666667},{0,0.0666667}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(gearbox_90_Degree.outer_surface_heat_port, heatCapacitor.port)
              annotation (Line(
                points={{15.1,12.8667},{15.1,40},{-10,40}},
                color={191,0,0},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=80, Interval=0.01),
              __Dymola_experimentSetupOutput(events=false));
          end Test_90degree_Gearbox_Original;

          model Test_90degree_Gearbox_Ricardo
          " Torques at the input and the outputs can be varied."
            extends C2M2L_Ext.Icons.Simple_Test_Case;

            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Gearbox_90_Degree
              gearbox_90_Degree
              annotation (Placement(transformation(extent={{0,-17},{20,15}})));
            Modelica.Thermal.HeatTransfer.Components.HeatCapacitor heatCapacitor(C=100000,
                T(start=313.15, fixed=true))
              annotation (Placement(transformation(extent={{-20,40},{0,60}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        output_load(d=15)
              annotation (Placement(transformation(extent={{40,20},{60,40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-40,-10},{-20,10}})));
            Modelica.Blocks.Sources.Constant torque_input(k=100)
              annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));
          equation
            connect(output_load.flange, gearbox_90_Degree.brg_02) annotation (Line(
                points={{40,30},{17,30},{17,10.7333}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(torque_input.y,testing_torque. u) annotation (Line(
                points={{-59,0},{-42,0}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(testing_torque.flange, gearbox_90_Degree.brg_01) annotation (Line(
                points={{-20,0},{-6,0},{-6,0.0666667},{0,0.0666667}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(gearbox_90_Degree.outer_surface_heat_port, heatCapacitor.port)
              annotation (Line(
                points={{15.1,12.8667},{15.1,40},{-10,40}},
                color={191,0,0},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=80, Interval=0.01),
              __Dymola_experimentSetupOutput(events=false));
          end Test_90degree_Gearbox_Ricardo;
        end Tests;
      end Gearbox_90_Degree;

      package Power_Take_Off_Module
      "Components that attach to the engine or driveline and distribute shaft power to systems"
          extends Modelica.Icons.Package;

        package Interfaces
        extends Modelica.Icons.InterfacesPackage;

          partial model PTM_with_TC
            parameter Boolean useSupport=false
            "= true, if support flange enabled, otherwise implicitly grounded"
              annotation(Evaluate=true, HideResult=true, choices(__Dymola_checkBox=true));

            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_05(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,90},{-190,110}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,-10},{-190,10}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_02(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,190},{150,210}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_03(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,-210},{150,-190}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_04(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,-110},{-190,-90}})));
            inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-180,-180},{-160,-160}})));

            replaceable package C2M2L_Medium =
                C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop
                  annotation(choicesAllMatching=true, Dialog(tab="Fluid Model"));
            parameter Modelica.Thermal.FluidHeatFlow.Media.Medium adaptor_medium=C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC()
            "Medium in the component"
                  annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fluid Model"));

            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=adaptor_medium,
                redeclare package Medium =
                  C2M2L_Medium) annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-180,170})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                HeatFlowMedium=adaptor_medium,
                redeclare package Medium =
                  C2M2L_Medium) annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-120,170})));
            Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a outer_surface_heat_port
              annotation (Placement(transformation(extent={{20,190},{40,210}})));
            C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Brakes_Clutch.Common_Controls.Brake_Control_Bus
              brake_Control_Bus
              annotation (Placement(transformation(extent={{-40,190},{-20,210}})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  C2M2L_Medium)
              annotation (Placement(transformation(extent={{-196,182},{-162,216}})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_out(redeclare package
              Medium =
                  C2M2L_Medium)
              annotation (Placement(transformation(extent={{-136,182},{-102,216}})));
            C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Torque_Converters.Common_Controls.Torque_Converter_Control_Bus
              torque_Converter_Control_Bus
              annotation (Placement(transformation(extent={{70,190},{90,210}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_06(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,-6},{150,14}})));
          equation
            connect(brg_02, brg_02) annotation (Line(
                points={{140,200},{140,200}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluidAdaptor.fluid_port, fluid_in) annotation (Line(
                points={{-180,180},{-180,199},{-179,199}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port, fluid_out)
                                                       annotation (Line(
                points={{-120,180},{-120,199},{-119,199}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -200},{140,200}}),
                                graphics), Icon(coordinateSystem(preserveAspectRatio=true,
                    extent={{-200,-200},{140,200}}),
                                                graphics={
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={-60,88},
                    rotation=180,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={-82,88},
                    rotation=180,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-125.5,9.5},{125.5,-9.5}},
                    pattern=LinePattern.None,
                    lineColor={0,0,0},
                    fillColor={175,175,175},
                    fillPattern=FillPattern.HorizontalCylinder,
                    origin={-79.5,-0.5},
                    rotation=180),
                  Polygon(
                    points={{-57,-10},{-29,18},{-1,18},{29,-10},{-57,-10}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={50,-15},
                    rotation=270,
                    lineColor={0,0,0}),
                  Polygon(
                    points={{-22,-68},{-22,-90},{10,-90},{10,-50},{-22,-20},{-22,-68}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={30,-26},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{200,-9},{-200,9}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={139,0},
                    rotation=90),
                  Rectangle(
                    extent={{16,-2},{-16,2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={106,-16},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={113,2},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={121,16},
                    rotation=90),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={121,-10},
                    rotation=90),
                  Polygon(
                    points={{-22,70},{-22,90},{10,90},{10,46},{-22,46},{-22,70}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={244,-26},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{16,-2},{-16,2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={174,-16},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={167,2},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={157,16},
                    rotation=90),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={157,-10},
                    rotation=90),
                  Polygon(
                    points={{15,0},{5,14},{5,6},{-15,6},{-15,-6},{5,-6},{5,-14},{15,0}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={255,85,85},
                    fillPattern=FillPattern.Solid,
                    origin={119,40},
                    rotation=270),
                  Rectangle(
                    extent={{-26.5,9.5},{26.5,-9.5}},
                    pattern=LinePattern.None,
                    lineColor={0,0,0},
                    fillColor={175,175,175},
                    fillPattern=FillPattern.HorizontalCylinder,
                    origin={-176.5,-100.5},
                    rotation=180),
                  Rectangle(
                    extent={{-72.5,9.5},{72.5,-9.5}},
                    pattern=LinePattern.None,
                    lineColor={0,0,0},
                    fillColor={175,175,175},
                    fillPattern=FillPattern.HorizontalCylinder,
                    origin={-130.5,99.5},
                    rotation=180),
                  Rectangle(
                    extent={{70,-14},{-70,14}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-140,-2},
                    rotation=90),
                  Rectangle(
                    extent={{22,-14},{-22,14}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-140,-102},
                    rotation=90),
                  Rectangle(
                    extent={{11,-14},{-11,14}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-72,63},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{42,-14},{-42,14}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-72,0},
                    rotation=90),
                  Rectangle(
                    extent={{7,-3.5},{-7,3.5}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-71.5,77},
                    rotation=90,
                    lineColor={0,0,0}),
                  Polygon(
                    points={{15,0},{5,14},{5,6},{-15,6},{-15,-6},{5,-6},{5,-14},{15,0}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={255,85,85},
                    fillPattern=FillPattern.Solid,
                    origin={-41,82},
                    rotation=180)}),
              Documentation(info="<html>
<p>Notes:</p>
<p><ul>
<li>Power take off module outputs include PTO1, PTO2, Waterjet 1, and Waterjet 2</li>
<li>Input from the cross drive transmission with torque converter (This PTM has no torque converter)</li>
<li>User must input ratios and efficiencies for PTO1, PTO2, Waterjet 1, and Waterjet 2</li>
<li>There are two clutches to control operation to the waterjets and PTO2</li>
<li>User must input clutch parameters(max apply force, number of plates, effective radius, mu)</li>
</ul></p>
</html>"));
          end PTM_with_TC;

          partial model PTM_without_TC
            parameter Boolean useSupport=false
            "= true, if support flange enabled, otherwise implicitly grounded"
              annotation(Evaluate=true, HideResult=true, choices(__Dymola_checkBox=true));

            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_05(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,90},{-190,110}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,-10},{-190,10}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_02(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,190},{150,210}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_03(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{130,-210},{150,-190}})));
            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_04(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-210,-110},{-190,-90}})));
            outer Modelica.Mechanics.MultiBody.World world
              annotation (Placement(transformation(extent={{-180,-180},{-160,-160}})));

            replaceable package C2M2L_Medium =
              Modelica.Media.Interfaces.PartialMedium
                  annotation(choicesAllMatching=true, Dialog(tab="Fluid Model"));
            parameter Modelica.Thermal.FluidHeatFlow.Media.Medium adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Medium()
            "Medium in the component"
                  annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fluid Model"));

            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=adaptor_medium,
                redeclare package Medium =
                  C2M2L_Medium) annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-180,170})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                HeatFlowMedium=adaptor_medium,
                redeclare package Medium =
                  C2M2L_Medium) annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-120,170})));
            Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a outer_surface_heat_port
              annotation (Placement(transformation(extent={{20,190},{40,210}})));
            C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Brakes_Clutch.Common_Controls.Brake_Control_Bus
              brake_Control_Bus
              annotation (Placement(transformation(extent={{-40,190},{-20,210}})));
            Modelica.Fluid.Interfaces.FluidPort_a flowPort_a(redeclare package
              Medium =
                  C2M2L_Medium)
              annotation (Placement(transformation(extent={{-196,182},{-162,216}})));
            Modelica.Fluid.Interfaces.FluidPort_a flowPort_b(redeclare package
              Medium =
                  C2M2L_Medium)
              annotation (Placement(transformation(extent={{-136,182},{-102,216}})));
          equation
            connect(brg_02, brg_02) annotation (Line(
                points={{140,200},{140,200}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluidAdaptor.fluid_port,flowPort_a)
                                                       annotation (Line(
                points={{-180,180},{-180,199},{-179,199}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port,flowPort_b)
                                                       annotation (Line(
                points={{-120,180},{-120,199},{-119,199}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=false,extent={{-200,
                      -200},{200,200}}),
                                graphics={Text(
                    extent={{-66,-16},{-16,-84}},
                    lineColor={255,0,0},
                    textString="Bevel modeled as ideal.
Losses assumed to be
in waterjet ratios")}),                    Icon(coordinateSystem(preserveAspectRatio=true,
                    extent={{-200,-200},{200,200}}),
                                                graphics={
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={-60,88},
                    rotation=180,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={-82,88},
                    rotation=180,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{-125.5,9.5},{125.5,-9.5}},
                    pattern=LinePattern.None,
                    lineColor={0,0,0},
                    fillColor={175,175,175},
                    fillPattern=FillPattern.HorizontalCylinder,
                    origin={-79.5,-0.5},
                    rotation=180),
                  Polygon(
                    points={{-57,-10},{-29,18},{-1,18},{29,-10},{-57,-10}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={50,-15},
                    rotation=270,
                    lineColor={0,0,0}),
                  Polygon(
                    points={{-22,-68},{-22,-90},{10,-90},{10,-50},{-22,-20},{-22,-68}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={30,-26},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{200,-9},{-200,9}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={139,0},
                    rotation=90),
                  Rectangle(
                    extent={{16,-2},{-16,2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={106,-16},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={113,2},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={121,16},
                    rotation=90),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={121,-10},
                    rotation=90),
                  Polygon(
                    points={{-22,70},{-22,90},{10,90},{10,46},{-22,46},{-22,70}},
                    pattern=LinePattern.None,
                    smooth=Smooth.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={244,-26},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{16,-2},{-16,2}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={174,-16},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={95,95,95},
                    fillPattern=FillPattern.Solid,
                    origin={167,2},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={157,16},
                    rotation=90),
                  Rectangle(
                    extent={{2,9},{-2,-9}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={157,-10},
                    rotation=90),
                  Polygon(
                    points={{15,0},{5,14},{5,6},{-15,6},{-15,-6},{5,-6},{5,-14},{15,0}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={255,85,85},
                    fillPattern=FillPattern.Solid,
                    origin={119,40},
                    rotation=270),
                  Rectangle(
                    extent={{-26.5,9.5},{26.5,-9.5}},
                    pattern=LinePattern.None,
                    lineColor={0,0,0},
                    fillColor={175,175,175},
                    fillPattern=FillPattern.HorizontalCylinder,
                    origin={-176.5,-100.5},
                    rotation=180),
                  Rectangle(
                    extent={{-72.5,9.5},{72.5,-9.5}},
                    pattern=LinePattern.None,
                    lineColor={0,0,0},
                    fillColor={175,175,175},
                    fillPattern=FillPattern.HorizontalCylinder,
                    origin={-130.5,99.5},
                    rotation=180),
                  Rectangle(
                    extent={{70,-14},{-70,14}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-140,-2},
                    rotation=90),
                  Rectangle(
                    extent={{22,-14},{-22,14}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-140,-102},
                    rotation=90),
                  Rectangle(
                    extent={{11,-14},{-11,14}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-72,63},
                    rotation=90,
                    lineColor={0,0,0}),
                  Rectangle(
                    extent={{42,-14},{-42,14}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-72,0},
                    rotation=90),
                  Rectangle(
                    extent={{7,-3.5},{-7,3.5}},
                    pattern=LinePattern.None,
                    fillColor={175,175,175},
                    fillPattern=FillPattern.Solid,
                    origin={-71.5,77},
                    rotation=90,
                    lineColor={0,0,0}),
                  Polygon(
                    points={{15,0},{5,14},{5,6},{-15,6},{-15,-6},{5,-6},{5,-14},{15,0}},
                    lineColor={0,0,0},
                    smooth=Smooth.None,
                    fillColor={255,85,85},
                    fillPattern=FillPattern.Solid,
                    origin={-41,82},
                    rotation=180)}),
              Documentation(info="<html>
<p>Notes:</p>
<p><ul>
<li>Power take off module outputs include PTO1, PTO2, Waterjet 1, and Waterjet 2</li>
<li>Input from the cross drive transmission with torque converter (This PTM has no torque converter)</li>
<li>User must input ratios and efficiencies for PTO1, PTO2, Waterjet 1, and Waterjet 2</li>
<li>There are two clutches to control operation to the waterjets and PTO2</li>
<li>User must input clutch parameters(max apply force, number of plates, effective radius, mu)</li>
</ul></p>
</html>"));
          end PTM_without_TC;
        end Interfaces;

        model PTM_with_TC
          extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.Interfaces.PTM_with_TC;
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC()
          "Medium in the component"
                annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fluid Model"));
        //inertia
          parameter SI.Inertia moi_rotational=0.2
          "rotational moment of inertia";

        //PTO 1
          parameter Real ratio_PTO1(start=1) = 1
          "Transmission ratio (flange_a.phi/flange_b.phi)"  annotation (Dialog(group="PTO 1"));
          parameter Real lossTable_PTO1[:, 5]=[0, 0.97, 0.97, 0, 0]
          "Array for mesh efficiencies and bearing friction depending on speed"
                                                                                 annotation (Dialog(group="PTO 1"));

        //PTO 2
          parameter Real ratio_PTO2(start=1) = 2
          "Transmission ratio (flange_a.phi/flange_b.phi)"  annotation (Dialog(group="PTO 2"));
          parameter Real lossTable_PTO2[:, 5]=[0, 0.97, 0.97, 0, 0]
          "Array for mesh efficiencies and bearing friction depending on speed"
                                                                                 annotation (Dialog(group="PTO 2"));

        //waterjet 1
          parameter Real ratio_WJ1(start=1) = 2
          "Transmission ratio (flange_a.phi/flange_b.phi)"  annotation (Dialog(group="Waterjet 1"));
          parameter Real lossTable_WJ1[:, 5]=[0, 0.97, 0.97, 0, 0]
          "Array for mesh efficiencies and bearing friction depending on speed"
                                                                                 annotation (Dialog(group="Waterjet 1"));

        //Waterjet 2
          parameter Real ratio_WJ2(start=1) = 2
          "Transmission ratio (flange_a.phi/flange_b.phi)"  annotation (Dialog(group="Waterjet 2"));
          parameter Real lossTable_WJ2[:, 5]=[0, 0.97, 0.97, 0, 0]
          "Array for mesh efficiencies and bearing friction depending on speed"
                                                                                 annotation (Dialog(group="Waterjet 2"));

        //Clutch Waterjet
          parameter SI.Force clutch_F_max_waterjet=100000
          "Maximum clutch apply force"                                                 annotation (Dialog(group="Clutch Waterjet"));
          parameter Integer clutch_N_plate_waterjet(min=1)=3
          "Number of clutch friction plates"   annotation (Dialog(group="Clutch Waterjet"));
          parameter SI.Length clutch_R_eff_waterjet=0.1
          "Friction plate mean radius"                                               annotation (Dialog(group="Clutch Waterjet"));
          parameter Real clutch_mu_waterjet[:,2]=[0,0.14]
          "Assume holding mu=0.14 and shifting mu=0.12, if no data given by the supplier :: [w,mue] positive sliding friction coefficient (w_rel>=0)"
                                                                                                              annotation (Dialog(group="Clutch Waterjet"));
        //Clutch PTO 2
          parameter SI.Force clutch_F_max_PTO2=10000
          "Maximum clutch apply force"                                            annotation (Dialog(group="Clutch PTO 2"));
          parameter Integer clutch_N_plate_PTO2(min=1)=3
          "Number of clutch friction plates"   annotation (Dialog(group="Clutch PTO 2"));
          parameter SI.Length clutch_R_eff_PTO2=0.1
          "Friction plate mean radius"                                           annotation (Dialog(group="Clutch PTO 2"));
          parameter Real clutch_mu_PTO2[:,2]=[0,0.14]
          "Assume holding mu=0.14 and shifting mu=0.12, if no data given by the supplier :: [w,mue] positive sliding friction coefficient (w_rel>=0)"
                                                                                                              annotation (Dialog(group="Clutch PTO 2"));
          parameter Real hx_dp_a=1000 "HX quadratic loss term"
            annotation (Dialog(tab="Fluid Model"));
          parameter Real hx_dp_b=100 "HX linear loss term"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area HX_internal_area=1
          "Heat transfer area internal to the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.CoefficientOfHeatTransfer HX_internal_HTC=50000
          "heat transfer coefficient internal to the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area HX_external_area=1.0
          "Area available for convective heat transferon the outside of the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area case_heat_transfer_area=1.0
          "Area available for heat to transfer through case"
            annotation (Dialog(tab="Thermal Model"));
          parameter SI.Thickness case_heat_transfer_thickness=0.005
          "Effective case thickness for heat transfer"
            annotation (Dialog(tab="Thermal Model"));
          parameter SI.ThermalConductivity case_thermal_conductivity=50
          "Conductivity of case"   annotation (Dialog(tab="Thermal Model"));
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_with_TC
            pTM_with_TC(
            powerCoeffTable_TC=powerCoeffTable_TC,
            torqueConverTable_TC=torqueConverTable_TC,
            Diameter_TC=Diameter_TC,
            fluidDensity_TC=fluidDensity_TC,
            locked_max_torque_TC=locked_max_torque_TC,
            synchronizer_max_torque_TC=synchronizer_max_torque_TC,
            medium=C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC())
            annotation (Placement(transformation(extent={{-40,-20},{0,20}})));
          parameter Real powerCoeffTable_TC[:,2]=[-10, 0.2; 0, 0.2; 0.00001, 0.2; 0.1, 0.2488; 0.2, 0.2712; 0.3, 0.2872; 0.4, 0.2968; 0.5, 0.3; 0.6, 0.2968; 0.7, 0.2872; 0.8, 0.2712; 0.9, 0.2488; 1, 0.00; 1.01, 0; 10, 0.0]
          "Table for power coefficientas a function of speed ratio"
            annotation (Dialog(tab="Torque Converter"));
          parameter Real torqueConverTable_TC[:,2]=[-10, 2; 0, 2; 0.00001, 2; 0.1, 1.9; 0.2, 1.8; 0.3, 1.7; 0.4, 1.6; 0.5, 1.5; 0.6, 1.4; 0.7, 1.3; 0.8, 1.0; 0.9, 0.90; 0.95, 0.85; 0.985, 0.8; 1, 0.0; 1.01, 0.0; 10, 0.0]
          "Torque Ratio as a function of speed ratio"
            annotation (Dialog(tab="Torque Converter"));
          parameter SI.Length Diameter_TC=0.2 "Torque Converter Diameter"
            annotation (Dialog(tab="Torque Converter"));
          parameter SI.Density fluidDensity_TC=850
          "Density of transmission fluid"
            annotation (Dialog(tab="Torque Converter"));
          parameter SI.Torque locked_max_torque_TC=1200
          "Max torque transmitted when TC clutch is locked"
            annotation (Dialog(tab="Torque Converter"));
          parameter SI.Torque synchronizer_max_torque_TC=1000
          "Max torque transmitted while synchronizing impeller & turbine"
            annotation (Dialog(tab="Torque Converter"));
        equation
          connect(fluidAdaptor1.fluidHeatflow_port, pTM_with_TC.flowPort_b) annotation (
             Line(
              points={{-120,160},{-120,130},{-34,130},{-34,20}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(fluidAdaptor.fluidHeatflow_port, pTM_with_TC.flowPort_a) annotation (
              Line(
              points={{-180,160},{-180,120},{-40,120},{-40,20}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(pTM_with_TC.PTO2_clutch_apply_command, brake_Control_Bus.PTO2_clutch_apply_command)
            annotation (Line(
              points={{-30,20.8},{-30,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(pTM_with_TC.waterjet_clutch_apply_command, brake_Control_Bus.waterjet_clutch_apply_command)
            annotation (Line(
              points={{-24,20.8},{-24,180},{-30,180},{-30,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(pTM_with_TC.lockup_torque_converter, torque_Converter_Control_Bus.lockup_torque_converter)
            annotation (Line(
              points={{-12,20.8},{-12,60},{80,60},{80,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(pTM_with_TC.outer_surface_heat_port, outer_surface_heat_port)
            annotation (Line(
              points={{-18,20},{-18,84},{30,84},{30,200}},
              color={191,0,0},
              smooth=Smooth.None));
          connect(pTM_with_TC.brg_02, brg_02.flange) annotation (Line(
              points={{-6,20},{-6,40},{140,40},{140,200}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(pTM_with_TC.brg_03, brg_03.flange) annotation (Line(
              points={{-6,-20},{-6,-40},{140,-40},{140,-200}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(brg_04.flange, pTM_with_TC.brg_04) annotation (Line(
              points={{-200,-100},{-120,-100},{-120,-10},{-40,-10}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(brg_01.flange, pTM_with_TC.brg_01) annotation (Line(
              points={{-200,0},{-40,0}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(brg_05.flange, pTM_with_TC.brg_05) annotation (Line(
              points={{-200,100},{-120,100},{-120,10},{-40,10}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(pTM_with_TC.brg_06, brg_06.flange) annotation (Line(
              points={{0,0},{72,0},{72,4},{140,4}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(pTM_with_TC.output_speed_torque_converter,
            torque_Converter_Control_Bus.output_speed_torque_converter) annotation (
              Line(
              points={{-34,-20.6},{-34,-112},{80,-112},{80,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(pTM_with_TC.input_speed_torque_converter,
            torque_Converter_Control_Bus.input_speed_torque_converter) annotation (Line(
              points={{-28,-20.6},{-28,-102},{80,-102},{80,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -200},{140,200}}),
                                 graphics));
        end PTM_with_TC;

        package Tests
          extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Test_Bench_PTM_with_TC "Tests the PTM implementation"
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{40,80},{60,100}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-60,-100},{-40,-80}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_1(d=4)
              annotation (Placement(transformation(extent={{-20,-60},{-40,-40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_2(d=20)
              annotation (Placement(transformation(extent={{-20,0},{-40,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        waterjet_right(d=30)
              annotation (Placement(transformation(extent={{60,0},{80,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        waterjet_left(d=30)
              annotation (Placement(transformation(extent={{60,-60},{80,-40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-40,-30},{-20,-10}})));
            Modelica.Blocks.Sources.Constant torque_input(k=1000)
              annotation (Placement(transformation(extent={{-100,-30},{-80,-10}})));
            replaceable PTM_with_TC pTM_with_TC(
              redeclare package C2M2L_Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop,
              adaptor_medium=C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC(),
              medium=C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC()) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_with_TC
                          annotation (Placement(transformation(extent={{-2,-52},{38,8}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.Test_Driver_with_TC
              test_Driver_with_TC
              annotation (Placement(transformation(extent={{-20,60},{0,80}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink_Passive
                                                                                  fluid_Source_Sink1(
                calc_cumulative=false, redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop)
              annotation (Placement(transformation(extent={{-20,28},{0,48}})));
          equation
            connect(torque_input.y,testing_torque. u) annotation (Line(
                points={{-79,-20},{-42,-20}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(testing_torque.flange, pTM_with_TC.brg_01) annotation (Line(
                points={{-20,-20},{-11,-20},{-11,-22},{-2,-22}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(PTO_2.flange, pTM_with_TC.brg_05) annotation (Line(
                points={{-20,10},{-12,10},{-12,-7},{-2,-7}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(PTO_1.flange, pTM_with_TC.brg_04) annotation (Line(
                points={{-20,-50},{-10,-50},{-10,-37},{-2,-37}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(pTM_with_TC.brg_03, waterjet_left.flange) annotation (Line(
                points={{38,-52},{38,-50},{60,-50}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(pTM_with_TC.brg_02, waterjet_right.flange) annotation (Line(
                points={{38,8},{38,10},{60,10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.torque_Converter_Control_Bus, pTM_with_TC.torque_Converter_Control_Bus)
              annotation (Line(
                points={{0,68},{30.9412,68},{30.9412,8}},
                color={85,255,85},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.brake_Control_Bus, pTM_with_TC.brake_Control_Bus)
              annotation (Line(
                points={{0,72},{18,72},{18,8}},
                color={255,85,85},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.supply_port, pTM_with_TC.fluid_in) annotation (
                Line(
                points={{-16,28},{-16,12},{0.470588,12},{0.470588,7.85}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port, pTM_with_TC.fluid_out) annotation (
                Line(
                points={{-4,28},{-4,20},{7.52941,20},{7.52941,7.85}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=30),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/PTO_with_TC_Basic_Test.mos"
                "PTO_with_TC_Basic_Test",
                  file="Scripts/PTO_with_TC_Basic_Test.mos"
                "PTO_with_TC_Basic_Test"));
          end Test_Bench_PTM_with_TC;

          model Test_Bench_PTM_with_TC_original "Tests the PTM implementation"
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{40,80},{60,100}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-60,-100},{-40,-80}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_1(d=4)
              annotation (Placement(transformation(extent={{-20,-60},{-40,-40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_2(d=20)
              annotation (Placement(transformation(extent={{-20,0},{-40,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        waterjet_right(d=30)
              annotation (Placement(transformation(extent={{60,0},{80,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        waterjet_left(d=30)
              annotation (Placement(transformation(extent={{60,-60},{80,-40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-40,-30},{-20,-10}})));
            Modelica.Blocks.Sources.Constant torque_input(k=1000)
              annotation (Placement(transformation(extent={{-100,-30},{-80,-10}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_with_TC
              pTM_with_TC annotation (Placement(transformation(extent={{-2,-52},{38,8}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.Test_Driver_with_TC
              test_Driver_with_TC
              annotation (Placement(transformation(extent={{-20,60},{0,80}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink_Passive
                                                                                  fluid_Source_Sink1(
                calc_cumulative=false, redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop)
              annotation (Placement(transformation(extent={{-20,28},{0,48}})));
          equation
            connect(torque_input.y,testing_torque. u) annotation (Line(
                points={{-79,-20},{-42,-20}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(testing_torque.flange, pTM_with_TC.brg_01) annotation (Line(
                points={{-20,-20},{-2,-20}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(PTO_2.flange, pTM_with_TC.brg_05) annotation (Line(
                points={{-20,10},{-12,10},{-12,-10},{-2,-10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(PTO_1.flange, pTM_with_TC.brg_04) annotation (Line(
                points={{-20,-50},{-10,-50},{-10,-30},{-2,-30}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(pTM_with_TC.brg_03, waterjet_left.flange) annotation (Line(
                points={{32,-40},{32,-50},{60,-50}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(pTM_with_TC.brg_02, waterjet_right.flange) annotation (Line(
                points={{32,0},{32,10},{60,10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.torque_Converter_Control_Bus, pTM_with_TC.torque_Converter_Control_Bus)
              annotation (Line(
                points={{0,68},{13.8,68},{13.8,0.2}},
                color={85,255,85},
                thickness=0.5,
                smooth=Smooth.None));
            connect(test_Driver_with_TC.brake_Control_Bus, pTM_with_TC.brake_Control_Bus)
              annotation (Line(
                points={{0,72},{18,72},{18,0.2}},
                color={255,85,85},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.supply_port, pTM_with_TC.fluid_in) annotation (
                Line(
                points={{-16,28},{-16,12},{1.8,12},{1.8,4}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port, pTM_with_TC.fluid_out) annotation (
                Line(
                points={{-4,28},{-4,20},{10,20},{10,4}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=30),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/PTO_with_TC_Basic_Test.mos"
                "PTO_with_TC_Basic_Test",
                  file="Scripts/PTO_with_TC_Basic_Test.mos"
                "PTO_with_TC_Basic_Test"));
          end Test_Bench_PTM_with_TC_original;

          model Test_Bench_PTM_without_TC
          "Tests the PTM without Torque Converter"
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{40,80},{60,100}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-60,-100},{-40,-80}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(
              m_flow=1.5,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop,
              T=353.15,
              p=200000)
              annotation (Placement(transformation(extent={{-8,20},{12,40}})));
            replaceable
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_without_TC
              pTM_without_TC(
              medium=C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC(),
              redeclare package C2M2L_Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop,
              adaptor_medium=C2M2L_OM.MSL_Extend.Media.Essotherm650_80degC())
              constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_without_TC
              annotation (Placement(transformation(extent={{0,-52},{40,8}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_1(d=4)
              annotation (Placement(transformation(extent={{-20,-60},{-40,-40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_2(d=20)
              annotation (Placement(transformation(extent={{-20,0},{-40,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        waterjet_right(d=30)
              annotation (Placement(transformation(extent={{60,0},{80,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        waterjet_left(d=30)
              annotation (Placement(transformation(extent={{60,-60},{80,-40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-40,-30},{-20,-10}})));
            Modelica.Blocks.Sources.Constant torque_input(k=1000)
              annotation (Placement(transformation(extent={{-100,-30},{-80,-10}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.Test_Driver_no_TC
              test_Driver_no_TC
              annotation (Placement(transformation(extent={{-60,60},{-40,80}})));
          equation
            connect(PTO_1.flange, pTM_without_TC.brg_04) annotation (Line(
                points={{-20,-50},{-10,-50},{-10,-37},{0,-37}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(pTM_without_TC.brg_02,waterjet_right. flange) annotation (Line(
                points={{40,8},{40,10},{60,10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(pTM_without_TC.brg_03,waterjet_left. flange) annotation (Line(
                points={{40,-52},{40,-50},{60,-50}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(PTO_2.flange, pTM_without_TC.brg_05) annotation (Line(
                points={{-20,10},{-10,10},{-10,-7},{0,-7}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(testing_torque.flange, pTM_without_TC.brg_01) annotation (Line(
                points={{-20,-20},{-10,-20},{-10,-22},{0,-22}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(torque_input.y,testing_torque. u) annotation (Line(
                points={{-79,-20},{-42,-20}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(test_Driver_no_TC.brake_Control_Bus, pTM_without_TC.brake_Control_Bus)
              annotation (Line(
                points={{-40,70},{20,70},{20,8}},
                color={255,85,85},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluid_Source_Sink.supply_port, pTM_without_TC.flowPort_a) annotation (
               Line(
                points={{-4,20},{-4,14},{2.47059,14},{2.47059,7.85}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, pTM_without_TC.flowPort_b) annotation (
               Line(
                points={{8,20},{8,7.85},{9.52941,7.85}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=30),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/PTO_without_TC_Instance_Test.mos"
                "PTO_without_TC_Instance_Test"));
          end Test_Bench_PTM_without_TC;

          model Test_Bench_PTM_without_TC_original
          "Tests the PTM without Torque Converter"
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Fluid.System system
              annotation (Placement(transformation(extent={{40,80},{60,100}})));
            inner Modelica.Mechanics.MultiBody.World world(gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.NoGravity,
                enableAnimation=false,
              driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-60,-100},{-40,-80}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(
              m_flow=1.5,
              redeclare package Medium =
                  C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop,
              T=353.15,
              p=200000)
              annotation (Placement(transformation(extent={{-8,20},{12,40}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_without_TC
              pTM_without_TC
              annotation (Placement(transformation(extent={{0,-52},{40,8}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_1(d=4)
              annotation (Placement(transformation(extent={{-20,-60},{-40,-40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        PTO_2(d=20)
              annotation (Placement(transformation(extent={{-20,0},{-40,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        waterjet_right(d=30)
              annotation (Placement(transformation(extent={{60,0},{80,20}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load
                                        waterjet_left(d=30)
              annotation (Placement(transformation(extent={{60,-60},{80,-40}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Torque
                                          testing_torque
              annotation (Placement(transformation(extent={{-40,-30},{-20,-10}})));
            Modelica.Blocks.Sources.Constant torque_input(k=1000)
              annotation (Placement(transformation(extent={{-100,-30},{-80,-10}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.Test_Driver_no_TC
              test_Driver_no_TC
              annotation (Placement(transformation(extent={{-60,60},{-40,80}})));
          equation
            connect(PTO_1.flange, pTM_without_TC.brg_04) annotation (Line(
                points={{-20,-50},{-10,-50},{-10,-30},{0,-30}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(pTM_without_TC.brg_02,waterjet_right. flange) annotation (Line(
                points={{34,0},{34,10},{60,10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(pTM_without_TC.brg_03,waterjet_left. flange) annotation (Line(
                points={{34,-40},{34,-50},{60,-50}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(fluid_Source_Sink.supply_port, pTM_without_TC.fluid_in) annotation (
                Line(
                points={{-4,20},{-4,12},{3.8,12},{3.8,4}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(pTM_without_TC.fluid_out, fluid_Source_Sink.return_port) annotation (
                Line(
                points={{12,4},{12,12},{8,12},{8,20}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(PTO_2.flange, pTM_without_TC.brg_05) annotation (Line(
                points={{-20,10},{-10,10},{-10,-10},{0,-10}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(testing_torque.flange, pTM_without_TC.brg_01) annotation (Line(
                points={{-20,-20},{0,-20}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(torque_input.y,testing_torque. u) annotation (Line(
                points={{-79,-20},{-42,-20}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(test_Driver_no_TC.brake_Control_Bus, pTM_without_TC.brake_Control_Bus)
              annotation (Line(
                points={{-40,70},{20,70},{20,0.2}},
                color={255,85,85},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=30),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/PTO_without_TC_Instance_Test.mos"
                "PTO_without_TC_Instance_Test"));
          end Test_Bench_PTM_without_TC_original;
        end Tests;

        model PTM_without_TC
        "Example PTM that includes 2 PTOs and 2 swim (waterjet) power take offs"
          extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.Interfaces.PTM_without_TC;
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=Modelica.Thermal.FluidHeatFlow.Media.Water()
          "Medium in the component"
                annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fluid Model"));
        //inertia
          parameter SI.Inertia moi_rotational=0.2
          "rotational moment of inertia";

        //PTO 1
          parameter Real ratio_PTO1(start=1) = 1
          "Transmission ratio (flange_a.phi/flange_b.phi)"  annotation (Dialog(group="PTO 1"));
          parameter Real lossTable_PTO1[:, 5]=[0, 0.97, 0.97, 0, 0]
          "Array for mesh efficiencies and bearing friction depending on speed"
                                                                                 annotation (Dialog(group="PTO 1"));

        //PTO 2
          parameter Real ratio_PTO2(start=1) = 2
          "Transmission ratio (flange_a.phi/flange_b.phi)"  annotation (Dialog(group="PTO 2"));
          parameter Real lossTable_PTO2[:, 5]=[0, 0.97, 0.97, 0, 0]
          "Array for mesh efficiencies and bearing friction depending on speed"
                                                                                 annotation (Dialog(group="PTO 2"));

        //waterjet 1
          parameter Real ratio_WJ1(start=1) = 2
          "Transmission ratio (flange_a.phi/flange_b.phi)"  annotation (Dialog(group="Waterjet 1"));
          parameter Real lossTable_WJ1[:, 5]=[0, 0.97, 0.97, 0, 0]
          "Array for mesh efficiencies and bearing friction depending on speed"
                                                                                 annotation (Dialog(group="Waterjet 1"));

        //Waterjet 2
          parameter Real ratio_WJ2(start=1) = 2
          "Transmission ratio (flange_a.phi/flange_b.phi)"  annotation (Dialog(group="Waterjet 2"));
          parameter Real lossTable_WJ2[:, 5]=[0, 0.97, 0.97, 0, 0]
          "Array for mesh efficiencies and bearing friction depending on speed"
                                                                                 annotation (Dialog(group="Waterjet 2"));

        //Clutch Waterjet
          parameter SI.Force clutch_F_max_waterjet=100000
          "Maximum clutch apply force"                                                 annotation (Dialog(group="Clutch Waterjet"));
          parameter Integer clutch_N_plate_waterjet(min=1)=3
          "Number of clutch friction plates"   annotation (Dialog(group="Clutch Waterjet"));
          parameter SI.Length clutch_R_eff_waterjet=0.1
          "Friction plate mean radius"                                               annotation (Dialog(group="Clutch Waterjet"));
          parameter Real clutch_mu_waterjet[:,2]=[0,0.14]
          "Assume holding mu=0.14 and shifting mu=0.12, if no data given by the supplier :: [w,mue] positive sliding friction coefficient (w_rel>=0)"
                                                                                                              annotation (Dialog(group="Clutch Waterjet"));
        //Clutch PTO 2
          parameter SI.Force clutch_F_max_PTO2=10000
          "Maximum clutch apply force"                                            annotation (Dialog(group="Clutch PTO 2"));
          parameter Integer clutch_N_plate_PTO2(min=1)=3
          "Number of clutch friction plates"   annotation (Dialog(group="Clutch PTO 2"));
          parameter SI.Length clutch_R_eff_PTO2=0.1
          "Friction plate mean radius"                                           annotation (Dialog(group="Clutch PTO 2"));
          parameter Real clutch_mu_PTO2[:,2]=[0,0.14]
          "Assume holding mu=0.14 and shifting mu=0.12, if no data given by the supplier :: [w,mue] positive sliding friction coefficient (w_rel>=0)"
                                                                                                              annotation (Dialog(group="Clutch PTO 2"));
          parameter Real hx_dp_a=1000 "HX quadratic loss term"
            annotation (Dialog(tab="Fluid Model"));
          parameter Real hx_dp_b=100 "HX linear loss term"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area HX_internal_area=1
          "Heat transfer area internal to the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.CoefficientOfHeatTransfer HX_internal_HTC=2000
          "heat transfer coefficient internal to the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area HX_external_area=1.0
          "Area available for convective heat transferon the outside of the HX"
            annotation (Dialog(tab="Fluid Model"));
          parameter SI.Area case_heat_transfer_area=1.0
          "Area available for heat to transfer through case"
            annotation (Dialog(tab="Thermal Model"));
          parameter SI.Thickness case_heat_transfer_thickness=0.005
          "Effective case thickness for heat transfer"
            annotation (Dialog(tab="Thermal Model"));
          parameter SI.ThermalConductivity case_thermal_conductivity=50
          "Conductivity of case"   annotation (Dialog(tab="Thermal Model"));
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_without_TC
            pTM_without_TC(
            useSupport=useSupport,
            medium=medium,
            moi_rotational=moi_rotational,
            ratio_PTO1=ratio_PTO1,
            lossTable_PTO1=lossTable_PTO1,
            ratio_PTO2=ratio_PTO2,
            lossTable_PTO2=lossTable_PTO2,
            ratio_WJ1=ratio_WJ1,
            lossTable_WJ1=lossTable_WJ1,
            ratio_WJ2=ratio_WJ2,
            lossTable_WJ2=lossTable_WJ2,
            clutch_F_max_waterjet=clutch_F_max_waterjet,
            clutch_N_plate_waterjet=clutch_N_plate_waterjet,
            clutch_R_eff_waterjet=clutch_R_eff_waterjet,
            clutch_mu_waterjet=clutch_mu_waterjet,
            clutch_F_max_PTO2=clutch_F_max_PTO2,
            clutch_N_plate_PTO2=clutch_N_plate_PTO2,
            clutch_R_eff_PTO2=clutch_R_eff_PTO2,
            clutch_mu_PTO2=clutch_mu_PTO2,
            hx_dp_a=hx_dp_a,
            hx_dp_b=hx_dp_b,
            HX_internal_area=HX_internal_area,
            HX_internal_HTC=HX_internal_HTC,
            HX_external_area=HX_external_area,
            case_heat_transfer_area=case_heat_transfer_area,
            case_heat_transfer_thickness=case_heat_transfer_thickness,
            case_thermal_conductivity=case_thermal_conductivity)
            annotation (Placement(transformation(extent={{-40,0},{0,40}})));
        equation

          connect(pTM_without_TC.flowPort_a, fluidAdaptor.fluidHeatflow_port)
            annotation (Line(
              points={{-40,40},{-140,40},{-140,160},{-180,160}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(pTM_without_TC.flowPort_b, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{-34,40},{-34,52},{-120,52},{-120,160}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(brg_05.flange, pTM_without_TC.brg_05) annotation (Line(
              points={{-200,100},{-160,100},{-160,30},{-40,30}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(brg_01.flange, pTM_without_TC.brg_01) annotation (Line(
              points={{-200,0},{-120,0},{-120,20},{-40,20}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(brg_04.flange, pTM_without_TC.brg_04) annotation (Line(
              points={{-200,-100},{-60,-100},{-60,10},{-40,10}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(pTM_without_TC.PTO2_clutch_apply_command, brake_Control_Bus.PTO2_clutch_apply_command)
            annotation (Line(
              points={{-30,40.8},{-30,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(pTM_without_TC.waterjet_clutch_apply_command, brake_Control_Bus.waterjet_clutch_apply_command)
            annotation (Line(
              points={{-24,40.8},{-24,182},{-30,182},{-30,200}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(pTM_without_TC.outer_surface_heat_port, outer_surface_heat_port)
            annotation (Line(
              points={{-18,40},{-18,160},{30,160},{30,200}},
              color={191,0,0},
              smooth=Smooth.None));
          connect(pTM_without_TC.brg_02, brg_02.flange) annotation (Line(
              points={{-6,40},{68,40},{68,200},{140,200}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(pTM_without_TC.brg_03, brg_03.flange) annotation (Line(
              points={{-6,0},{66,0},{66,-200},{140,-200}},
              color={0,0,0},
              smooth=Smooth.None));

        end PTM_without_TC;
      end Power_Take_Off_Module;
    end Drive_Line;

    package Electrical_System "Electrical components related to mobility"
    extends Modelica.Icons.Package;

      package Charging_Systems
      "Maintains the vehicles electrical system for supporting ancilliary loads"
      extends Modelica.Icons.Package;

        model Alternator
        extends
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Interfaces.Alternator;
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Alternator
            alternator(
            useSupport=useSupport,
            rotating_inertia=rotating_inertia,
            v_nom=v_nom,
            pow_max=pow_max,
            trq_max=trq_max,
            efficiency=efficiency,
            v_max=v_max,
            trq_nom=trq_nom,
            temp_max=temp_max,
            heat_transfer_area=heat_transfer_area)
            annotation (Placement(transformation(extent={{-54,-60},{64,58}})));
          parameter Boolean useSupport=false
          "= true, if support flange enabled, otherwise implicitly grounded";
          parameter SI.Inertia rotating_inertia=0.1
          "Moment of inertia of device around its axis of rotation";
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at";
          parameter SI.Power pow_max=100000 "Maximum input power at v_nom";
          parameter SI.Torque trq_max=100 "Maximum output torque";
          parameter Real efficiency=0.95
          "Efficiency of electrical to mechanical conversion";
          parameter SI.Voltage v_max=250
          "Maximum voltage at which data was generated";
          parameter SI.Torque trq_nom=50 "Nominal output torque";
          parameter SI.Temperature temp_max=373.15 "Maximum device temp";
          parameter SI.Area heat_transfer_area=1.0
          "Area available for heat to transfer through case";
        equation
          connect(pin_p, alternator.pin_p) annotation (Line(
              points={{-200,120},{-126,120},{-126,34.4},{-54,34.4}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(alternator.pin_n, pin_n) annotation (Line(
              points={{64,34.4},{94,34.4},{94,34},{122,34},{122,120},{200,120}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(brg_01.flange, alternator.brg_01) annotation (Line(
              points={{-200,0},{-127,0},{-127,-1},{-54,-1}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(alternator.v, electric_Machine_Bus.v) annotation (Line(
              points={{16.8,59.77},{16.8,129.885},{1,129.885},{1,199}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(alternator.w, electric_Machine_Bus.w) annotation (Line(
              points={{-0.9,59.77},{-0.9,130.885},{1,130.885},{1,199}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(alternator.tau, electric_Machine_Bus.tau) annotation (Line(
              points={{10.9,59.77},{10.9,129.885},{1,129.885},{1,199}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(alternator.demand, electric_Machine_Bus.demand) annotation (Line(
              points={{-6.8,59.77},{-6.8,130.885},{1,130.885},{1,199}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(alternator.i, electric_Machine_Bus.i) annotation (Line(
              points={{5,59.77},{5,128.885},{1,128.885},{1,199}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -200},{200,200}}), graphics));
        end Alternator;

        package Interfaces
        extends Modelica.Icons.InterfacesPackage;
          partial model Alternator
          extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Interfaces.Alternator_Electrical;
          extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Interfaces.Alternator_Mechanical;
          extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Interfaces.Alternator_Cyber;
          extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Interfaces.Alternator_Fluid;
            annotation (Diagram(coordinateSystem(preserveAspectRatio=false,extent={{-200,-200},
                      {200,200}}), graphics), Icon(coordinateSystem(preserveAspectRatio=
                      true, extent={{-200,-200},{200,200}}), graphics={
                  Line(
                    points={{-130,-156},{-160,10}},
                    color={0,0,0},
                    smooth=Smooth.None,
                    thickness=0.5),
                  Rectangle(
                    extent={{-162,10},{-110,-10}},
                    lineColor={0,0,0},
                    fillPattern=FillPattern.HorizontalCylinder,
                    fillColor={95,95,95}),
                  Line(
                    points={{-190,0},{-178,-168}},
                    color={0,0,0},
                    smooth=Smooth.None,
                    thickness=0.5),
                  Line(
                    points={{200,120},{24,120},{24,70}},
                    color={0,0,255},
                    smooth=Smooth.None),
                  Line(
                    points={{-198,120},{-86,120},{-86,72}},
                    color={0,0,255},
                    smooth=Smooth.None),
                  Rectangle(
                    extent={{-110,76},{48,-76}},
                    fillPattern=FillPattern.HorizontalCylinder,
                    fillColor={127,0,0},
                    pattern=LinePattern.None,
                    lineColor={0,0,0}),
                  Ellipse(
                    extent={{-178,-196},{-130,-122}},
                    fillColor={135,135,135},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0}),
                  Ellipse(
                    extent={{-190,-20},{-160,24}},
                    fillColor={135,135,135},
                    fillPattern=FillPattern.Solid,
                    lineColor={0,0,0})}),
              Documentation(info="<html>
<p>Basic model of a belt driven alternator. The output voltage is generated when torque is applied to the shaft. The voltage is limited by the maximum torque parameter. </p>
</html>"));
          end Alternator;

          partial model Alternator_Cyber

            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus
                                                       electric_Machine_Bus
              annotation (Placement(transformation(extent={{-20,178},{22,220}})));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=false,extent={{-200,-200},
                      {200,200}}), graphics), Icon(coordinateSystem(preserveAspectRatio=
                      true, extent={{-200,-200},{200,200}})));
          end Alternator_Cyber;

          partial model Alternator_Electrical

            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-210,110},{-190,130}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{190,110},{210,130}})));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=false,extent={{-200,-200},
                      {200,200}}), graphics), Icon(coordinateSystem(preserveAspectRatio=
                      true, extent={{-200,-200},{200,200}})));
          end Alternator_Electrical;

          partial model Alternator_Fluid

            inner
            C2M2L_OM.MSL_Extend.Environments.Lumped_Thermal_Fixed_HTC_Infinite
                                                                 env
              annotation (Placement(transformation(extent={{180,180},{200,200}})));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -200},{200,200}}),
                                   graphics), Icon(coordinateSystem(preserveAspectRatio=
                      true, extent={{-200,-200},{200,200}})));
          end Alternator_Fluid;

          partial model Alternator_Mechanical

            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                includeBearingConnector=false)
              annotation (Placement(transformation(extent={{-210,-10},{-190,10}})));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -200},{200,200}}),
                                   graphics), Icon(coordinateSystem(preserveAspectRatio=
                      true, extent={{-200,-200},{200,200}})));
          end Alternator_Mechanical;
        end Interfaces;

        package Tests
        extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;
          model Battery_To_Alternator
            Modelica.Blocks.Logical.Hysteresis hysteresis(
              uLow=uLow,
              uHigh=uHigh,
              pre_y_start=pre_y_start)
              annotation (Placement(transformation(extent={{36,-10},{16,10}})));
            Modelica.Blocks.Math.BooleanToReal booleanToReal(realTrue=realTrue, realFalse=
                 realFalse)
              annotation (Placement(transformation(extent={{0,-10},{-20,10}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
            C2M2L_Ext.Electrical.Interfaces.Battery_Bus battery_Bus
              annotation (Placement(transformation(extent={{90,-10},{110,10}})));
            parameter Real realTrue=1.0 "Output signal for true Boolean input";
            parameter Real realFalse=0.0
            "Output signal for false Boolean input";
            parameter Real uLow "if y=true and u<=uLow, switch to y=false";
            parameter Real uHigh "if y=false and u>=uHigh, switch to y=true";
            parameter Boolean pre_y_start=false
            "Value of pre(y) at initial time";
          equation
            connect(hysteresis.u,battery_Bus. soc) annotation (Line(
                points={{38,0},{100,0}},
                color={0,0,127},
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            connect(booleanToReal.y, electric_Machine_Bus.demand) annotation (Line(
                points={{-21,0},{-100,0}},
                color={0,0,127},
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            connect(hysteresis.y, booleanToReal.u) annotation (Line(
                points={{15,0},{2,0}},
                color={255,0,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end Battery_To_Alternator;

          model Grounded_Resistor
            Modelica.Electrical.Analog.Basic.VariableResistor resistor
                                                               annotation (Placement(
                  transformation(
                  extent={{-10,10},{10,-10}},
                  rotation=0,
                  origin={0,-44})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{36,-64},{56,-44}})));
            Modelica.Blocks.Sources.Constant const2(k=k)
              annotation (Placement(transformation(extent={{60,-90},{40,-70}})));
            Modelica.Electrical.Analog.Interfaces.Pin p annotation (Placement(
                  transformation(rotation=0, extent={{90,30},{110,50}})));
            Modelica.Electrical.Analog.Interfaces.PositivePin p1 annotation (Placement(
                  transformation(rotation=0, extent={{-110,30},{-90,50}})));
            parameter SI.Temperature T_ref=300.15 "Reference temperature";
            parameter SI.LinearTemperatureCoefficient alpha=0
            "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
            parameter SI.Temperature T=T_ref
            "Fixed device temperature if useHeatPort = false";
            parameter Boolean useHeatPort=false "=true, if HeatPort is enabled";
            parameter Real k "Constant output value";
          equation
            connect(ground.p, resistor.n) annotation (Line(
                points={{46,-44},{10,-44}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(const2.y, resistor.R) annotation (Line(
                points={{39,-80},{0,-80},{0,-55}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(p, ground.p) annotation (Line(points={{100,40},{100,28},{46,28},{46,
                    -44}}, color={0,0,255}));
            connect(p1, resistor.p) annotation (Line(points={{-100,40},{-55,40},{-55,-44},
                    {-10,-44}}, color={0,0,255}));
            annotation (Diagram(graphics));
          end Grounded_Resistor;

          model Test_Alternator
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Simple_Dyno
                                       simple_Dyno(
              Ti=0.1,
              k=10,
              controllerType=Modelica.Blocks.Types.SimpleController.P,
              use_inertia=true,
              max_res_trq=100,
              trq_start=10,
              J=0.1)                                                    annotation (
                Placement(transformation(
                  extent={{20,-30},{-20,30}},
                  rotation=0,
                  origin={-60,-2})));
            Modelica.Blocks.Sources.Constant const(k=100)
              annotation (Placement(transformation(extent={{-100,40},{-80,60}})));
            replaceable Alternator alternator(v_nom=28, pow_max=1000) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Alternator(
                v_nom=28, pow_max=1000)
              annotation (Placement(transformation(extent={{-14,-12},{26,28}})));
            Starting_Systems.Lead_Acid_Battery lead_Acid_Battery(
              soc_init=0.8,
              q_max=100,
              v_nom=24,
              e_max=24.2)
              annotation (Placement(transformation(extent={{80,-16},{122,26}})));

            Battery_To_Alternator battery_To_Alternator(
              uLow=0.1,
              uHigh=0.8,
              realTrue=0,
              realFalse=-1.0) annotation (Placement(transformation(rotation=0, extent={{
                      30,48},{92,90}})));
            Grounded_Resistor grounded_Resistor(k=1) annotation (Placement(transformation(
                    rotation=0, extent={{18,-86},{38,-66}})));
            inner
            C2M2L_OM.MSL_Extend.Environments.Lumped_Thermal_Fixed_HTC_Infinite
                                                                 env1
              annotation (Placement(transformation(extent={{-120,80},{-100,100}})));
          equation
            connect(const.y, simple_Dyno.request_speed) annotation (Line(
                points={{-79,50},{-60,50},{-60,22.4}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(alternator.brg_01, simple_Dyno.brg_01) annotation (Line(
                points={{-14,8},{-27,8},{-27,0},{-40,0}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(alternator.pin_n,grounded_Resistor.p)
                                                annotation (Line(
                points={{26,20},{54,20},{54,-72},{38,-72}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(lead_Acid_Battery.pin_n, alternator.pin_n) annotation (Line(
                points={{122,8.31579},{130,8.31579},{130,16},{138,16},{138,38},{30,38},{
                    30,26},{26,26},{26,20}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(lead_Acid_Battery.pin_p,grounded_Resistor.p1)
                                                         annotation (Line(
                points={{80,8.31579},{78,8.31579},{78,-58},{12,-58},{12,-72},{18,-72}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(alternator.pin_p,grounded_Resistor.p1)
                                                  annotation (Line(
                points={{-14,20},{-30,20},{-30,-72},{18,-72}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(battery_To_Alternator.electric_Machine_Bus, alternator.electric_Machine_Bus)
              annotation (Line(
                points={{30,69},{20,69},{20,68},{6.1,68},{6.1,27.9}},
                color={170,213,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(battery_To_Alternator.battery_Bus, lead_Acid_Battery.battery_Bus)
              annotation (Line(
                points={{92,69},{101,69},{101,25.5579}},
                color={64,64,160},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (
              Diagram(coordinateSystem(extent={{-100,-100},{100,100}},
                    preserveAspectRatio=true),
                      graphics),
              experiment(StopTime=1000),
              __Dymola_experimentSetupOutput(events=false),
              Icon(coordinateSystem(extent={{-100,-100},{100,100}})));
          end Test_Alternator;

          model Test_Alternator_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world
              annotation (Placement(transformation(extent={{-98,-98},{-78,-78}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Simple_Dyno
                                       simple_Dyno(
              Ti=0.1,
              k=10,
              controllerType=Modelica.Blocks.Types.SimpleController.P,
              use_inertia=true,
              max_res_trq=100,
              trq_start=10,
              J=0.1)                                                    annotation (
                Placement(transformation(
                  extent={{20,-30},{-20,30}},
                  rotation=0,
                  origin={-60,-2})));
            Modelica.Blocks.Sources.Constant const(k=100)
              annotation (Placement(transformation(extent={{-100,40},{-80,60}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{36,-64},{56,-44}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{-24,48},{-4,68}})));
            Modelica.Blocks.Sources.Constant const2(k=1)
              annotation (Placement(transformation(extent={{60,-90},{40,-70}})));
            Modelica.Electrical.Analog.Basic.VariableResistor
                                                      resistor annotation (Placement(
                  transformation(
                  extent={{-10,10},{10,-10}},
                  rotation=0,
                  origin={0,-40})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{60,80},{80,100}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Alternator
              alternator(v_nom=28, pow_max=1000)
              annotation (Placement(transformation(extent={{-14,-32},{26,28}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
              lead_Acid_Battery(
              soc_init=0.8,
              redeclare model V_Battery =

                C2M2L_Ext.Electrical.Batteries.Voltage_Versus_Charge_Submodels.Shepard_Equation_Extended,
              q_max=100,
              v_nom=24,
              e_max=24.2)
              annotation (Placement(transformation(extent={{82,-34},{122,26}})));

            Modelica.Blocks.Sources.Constant const3(k=100)
              annotation (Placement(transformation(extent={{140,-88},{120,-68}})));
            Modelica.Blocks.Logical.Hysteresis hysteresis(
              pre_y_start=false,
              uLow=0.1,
              uHigh=0.8)
              annotation (Placement(transformation(extent={{78,50},{58,70}})));
            C2M2L_Ext.Electrical.Interfaces.Battery_Bus battery_Bus
              annotation (Placement(transformation(extent={{92,50},{112,70}})));
            Modelica.Blocks.Math.BooleanToReal booleanToReal(realTrue=0, realFalse=-1)
              annotation (Placement(transformation(extent={{42,50},{22,70}})));
          equation
            connect(const.y, simple_Dyno.request_speed) annotation (Line(
                points={{-79,50},{-60,50},{-60,22.4}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ground.p, resistor.n) annotation (Line(
                points={{46,-44},{28,-44},{28,-40},{10,-40}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(const2.y, resistor.R) annotation (Line(
                points={{39,-80},{0,-80},{0,-51}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(electric_Machine_Bus, alternator.electric_Machine_Bus) annotation (
                Line(
                points={{-14,58},{-14,40},{6,40},{6,20}},
                color={170,213,255},
                thickness=0.5,
                smooth=Smooth.None), Text(
                string="%first",
                index=-1,
                extent={{-6,3},{-6,3}}));
            connect(alternator.brg_01, simple_Dyno.brg_01) annotation (Line(
                points={{-14,0},{-40,0}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(alternator.pin_n, ground.p) annotation (Line(
                points={{26,12},{46,12},{46,-44}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(world.frame_b, alternator.mount_01) annotation (Line(
                points={{-78,-88},{-42,-88},{-42,-64},{-1,-64},{-1,-32}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(lead_Acid_Battery.pin_n, alternator.pin_n) annotation (Line(
                points={{122,10},{130,10},{130,16},{138,16},{138,44},{26,44},{26,12}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(world.frame_b, lead_Acid_Battery.origin) annotation (Line(
                points={{-78,-88},{102,-88},{102,-22}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(lead_Acid_Battery.pin_p, resistor.p) annotation (Line(
                points={{82,10},{78,10},{78,-56},{-10,-56},{-10,-40}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(lead_Acid_Battery.battery_Bus, battery_Bus) annotation (Line(
                points={{102,17.8},{102,60}},
                color={64,64,160},
                thickness=0.5,
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            connect(hysteresis.u, battery_Bus.soc) annotation (Line(
                points={{80,60},{102,60}},
                color={0,0,127},
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            connect(hysteresis.y, booleanToReal.u) annotation (Line(
                points={{57,60},{44,60}},
                color={255,0,255},
                smooth=Smooth.None));
            connect(booleanToReal.y, electric_Machine_Bus.demand) annotation (Line(
                points={{21,60},{10.5,60},{10.5,58},{-14,58}},
                color={0,0,127},
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            connect(alternator.pin_p, resistor.p) annotation (Line(
                points={{-14,12},{-30,12},{-30,-40},{-10,-40}},
                color={0,0,255},
                smooth=Smooth.None));
            annotation (
              Diagram(graphics),
              experiment(StopTime=1000),
              __Dymola_experimentSetupOutput(events=false));
          end Test_Alternator_original;

          model Test_Alternator_Ricardo
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
                enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Simple_Dyno
                                       simple_Dyno(
              Ti=0.1,
              k=10,
              controllerType=Modelica.Blocks.Types.SimpleController.P,
              use_inertia=true,
              max_res_trq=100,
              trq_start=10,
              J=0.1)                                                    annotation (
                Placement(transformation(
                  extent={{20,-30},{-20,30}},
                  rotation=0,
                  origin={-60,-2})));
            Modelica.Blocks.Sources.Constant const(k=100)
              annotation (Placement(transformation(extent={{-100,40},{-80,60}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{-120,80},{-100,100}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Alternator
              alternator(v_nom=28, pow_max=1000)
              annotation (Placement(transformation(extent={{-14,-32},{26,28}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
              lead_Acid_Battery(
              soc_init=0.8,
              redeclare model V_Battery =

                C2M2L_Ext.Electrical.Batteries.Voltage_Versus_Charge_Submodels.Shepard_Equation_Extended,
              q_max=100,
              v_nom=24,
              e_max=24.2)
              annotation (Placement(transformation(extent={{82,-34},{122,26}})));

            Battery_To_Alternator battery_To_Alternator(
              uLow=0.1,
              uHigh=0.8,
              realTrue=0,
              realFalse=-1.0) annotation (Placement(transformation(rotation=0, extent={{
                      30,48},{92,90}})));
            Grounded_Resistor grounded_Resistor(k=1) annotation (Placement(transformation(
                    rotation=0, extent={{18,-86},{38,-66}})));
          equation
            connect(const.y, simple_Dyno.request_speed) annotation (Line(
                points={{-79,50},{-60,50},{-60,22.4}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(alternator.brg_01, simple_Dyno.brg_01) annotation (Line(
                points={{-14,0},{-40,0}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(alternator.pin_n,grounded_Resistor.p)
                                                annotation (Line(
                points={{26,12},{36,12},{36,12},{54,12},{54,-72},{38,-72},{38,-72}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(lead_Acid_Battery.pin_n, alternator.pin_n) annotation (Line(
                points={{122,10},{130,10},{130,16},{138,16},{138,38},{30,38},{30,26},{26,
                    26},{26,12}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(lead_Acid_Battery.pin_p,grounded_Resistor.p1)
                                                         annotation (Line(
                points={{82,10},{78,10},{78,-58},{12,-58},{12,-72},{18,-72}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(alternator.pin_p,grounded_Resistor.p1)
                                                  annotation (Line(
                points={{-14,12},{-30,12},{-30,-72},{18,-72}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(battery_To_Alternator.electric_Machine_Bus, alternator.electric_Machine_Bus)
              annotation (Line(
                points={{30,69},{20,69},{20,68},{6,68},{6,20}},
                color={170,213,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(battery_To_Alternator.battery_Bus, lead_Acid_Battery.battery_Bus)
              annotation (Line(
                points={{92,69},{102,69},{102,17.8}},
                color={64,64,160},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (
              Diagram(coordinateSystem(extent={{-100,-100},{100,100}},
                    preserveAspectRatio=true),
                      graphics),
              experiment(StopTime=1000),
              __Dymola_experimentSetupOutput(events=false),
              Icon(coordinateSystem(extent={{-100,-100},{100,100}})));
          end Test_Alternator_Ricardo;
        end Tests;
      end Charging_Systems;

      package Circuit_Systems
        extends Modelica.Icons.Package;

        package Tests
        extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Test_Circuit_Breaker
              extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{14,-92},{26,-80}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-40,-92},{0,-32}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-40,-30},{-20,-10}})));
            replaceable Circuit_Breaker circuit_Breaker constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Circuit_Breaker
                                            annotation (Placement(transformation(
                  extent={{-20,-30},{20,30}},
                  rotation=0,
                  origin={-20,18})));
            Modelica.Blocks.Math.Add add1
              annotation (Placement(transformation(extent={{76,44},{82,50}})));
            Modelica.Electrical.Analog.Basic.VariableResistor load_resistor
                                                               annotation (Placement(
                  transformation(
                  extent={{10,10},{-10,-10}},
                  rotation=90,
                  origin={40,-18})));
            Modelica.Blocks.Math.Add add2
              annotation (Placement(transformation(extent={{46,42},{52,48}})));
            Modelica.Blocks.Sources.BooleanTable booleanTable1(
                                                              table={300,546,650})
              annotation (Placement(transformation(extent={{-88,36},{-68,56}})));
            Modelica.Blocks.Sources.Ramp ramp3(
              duration=100,
              offset=0,
              startTime=290,
              height=1000)
              annotation (Placement(transformation(extent={{6,56},{26,76}})));
            Modelica.Blocks.Sources.Ramp ramp4(
              offset=1000,
              duration=100,
              height=-997)
              annotation (Placement(transformation(extent={{12,82},{32,102}})));
            Modelica.Blocks.Sources.Ramp ramp5(
              duration=100,
              startTime=390,
              offset=0,
              height=-999.9)
              annotation (Placement(transformation(extent={{44,78},{64,98}})));
          equation

            connect(fluid_Source_Sink1.supply_port,high_Voltage_Battery. fluid_in)
              annotation (Line(
                points={{-36,-30},{-36,-36},{-36.2,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port,high_Voltage_Battery. fluid_out)
              annotation (Line(
                points={{-24,-30},{-26,-30},{-26,-36},{-28,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ground.p, high_Voltage_Battery.pin_n) annotation (Line(
                points={{20,-80},{20,-48},{0,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(high_Voltage_Battery.pin_p, circuit_Breaker.pin_p) annotation (Line(
                points={{-40,-48},{-60,-48},{-60,18},{-40,18}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(add1.y, load_resistor.R)
                                         annotation (Line(
                points={{82.3,47},{88,47},{88,-18},{51,-18}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(circuit_Breaker.pin_n, load_resistor.p) annotation (Line(
                points={{0,18},{40,18},{40,-8}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_resistor.n, high_Voltage_Battery.pin_n) annotation (Line(
                points={{40,-28},{40,-48},{0,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(add2.y, add1.u2) annotation (Line(
                points={{52.3,45},{58.15,45},{58.15,45.2},{75.4,45.2}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp3.y, add2.u2) annotation (Line(
                points={{27,66},{30,66},{30,43.2},{45.4,43.2}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp4.y, add2.u1) annotation (Line(
                points={{33,92},{40,92},{40,46.8},{45.4,46.8}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp5.y, add1.u1) annotation (Line(
                points={{65,88},{70,88},{70,48.8},{75.4,48.8}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(booleanTable1.y, circuit_Breaker.reset) annotation (Line(
                points={{-67,46},{-40,46},{-40,42}},
                color={255,0,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=500),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/DC_DC_Converter_Liquid_Cooled_plot_script.mos", file="C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/circuit_breaker_plot.mos"));
          end Test_Circuit_Breaker;

          model Test_Circuit_Breaker_original
              extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{14,-92},{26,-80}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-40,-92},{0,-32}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-40,-30},{-20,-10}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Circuit_Breaker
              circuit_Breaker constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Circuit_Breaker
                                            annotation (Placement(transformation(
                  extent={{-20,-30},{20,30}},
                  rotation=0,
                  origin={-20,18})));
            Modelica.Blocks.Math.Add add1
              annotation (Placement(transformation(extent={{76,44},{82,50}})));
            Modelica.Electrical.Analog.Basic.VariableResistor load_resistor
                                                               annotation (Placement(
                  transformation(
                  extent={{10,10},{-10,-10}},
                  rotation=90,
                  origin={40,-18})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{80,-100},{100,-80}})));
            Modelica.Blocks.Math.Add add2
              annotation (Placement(transformation(extent={{46,42},{52,48}})));
            Modelica.Blocks.Sources.BooleanTable booleanTable1(
                                                              table={300,546,650})
              annotation (Placement(transformation(extent={{-88,36},{-68,56}})));
            Modelica.Blocks.Sources.Ramp ramp3(
              duration=100,
              offset=0,
              startTime=290,
              height=1000)
              annotation (Placement(transformation(extent={{6,56},{26,76}})));
            Modelica.Blocks.Sources.Ramp ramp4(
              offset=1000,
              duration=100,
              height=-997)
              annotation (Placement(transformation(extent={{12,82},{32,102}})));
            Modelica.Blocks.Sources.Ramp ramp5(
              duration=100,
              startTime=390,
              offset=0,
              height=-999.9)
              annotation (Placement(transformation(extent={{44,78},{64,98}})));
          equation

            connect(fluid_Source_Sink1.supply_port,high_Voltage_Battery. fluid_in)
              annotation (Line(
                points={{-36,-30},{-36,-36},{-36.2,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port,high_Voltage_Battery. fluid_out)
              annotation (Line(
                points={{-24,-30},{-26,-30},{-26,-36},{-28,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ground.p, high_Voltage_Battery.pin_n) annotation (Line(
                points={{20,-80},{20,-48},{0,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(high_Voltage_Battery.pin_p, circuit_Breaker.pin_p) annotation (Line(
                points={{-40,-48},{-60,-48},{-60,32},{-40,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(add1.y, load_resistor.R)
                                         annotation (Line(
                points={{82.3,47},{88,47},{88,-18},{51,-18}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(circuit_Breaker.pin_n, load_resistor.p) annotation (Line(
                points={{0,32},{40,32},{40,-8}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_resistor.n, high_Voltage_Battery.pin_n) annotation (Line(
                points={{40,-28},{40,-48},{0,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(add2.y, add1.u2) annotation (Line(
                points={{52.3,45},{58.15,45},{58.15,45.2},{75.4,45.2}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp3.y, add2.u2) annotation (Line(
                points={{27,66},{30,66},{30,43.2},{45.4,43.2}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp4.y, add2.u1) annotation (Line(
                points={{33,92},{40,92},{40,46.8},{45.4,46.8}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp5.y, add1.u1) annotation (Line(
                points={{65,88},{70,88},{70,48.8},{75.4,48.8}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(booleanTable1.y, circuit_Breaker.reset) annotation (Line(
                points={{-67,46},{-20,46},{-20,40.4}},
                color={255,0,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=500),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/DC_DC_Converter_Liquid_Cooled_plot_script.mos", file="C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/circuit_breaker_plot.mos"));
          end Test_Circuit_Breaker_original;

          model Test_Fuse
              extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{14,-74},{26,-62}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-40,-74},{0,-14}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-40,-12},{-20,8}})));
            Modelica.Blocks.Sources.Ramp ramp(
              offset=1000,
              duration=100,
              height=-997)
              annotation (Placement(transformation(extent={{28,68},{48,88}})));
            Modelica.Electrical.Analog.Basic.VariableResistor load_resistor
                                                               annotation (Placement(
                  transformation(
                  extent={{10,10},{-10,-10}},
                  rotation=90,
                  origin={40,0})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{80,-100},{100,-80}})));
            replaceable Fuse fuse constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Fuse
                      annotation (Placement(transformation(extent={{-40,4},{0,64}})));
            Modelica.Blocks.Sources.Ramp ramp5(
              height=1000,
              offset=0,
              duration=100,
              startTime=150)
              annotation (Placement(transformation(extent={{40,-60},{60,-40}})));
            Modelica.Blocks.Math.Add add1
              annotation (Placement(transformation(extent={{70,-4},{62,4}})));
          equation

            connect(fluid_Source_Sink1.supply_port,high_Voltage_Battery. fluid_in)
              annotation (Line(
                points={{-36,-12},{-36,-18},{-36.2,-18}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port,high_Voltage_Battery. fluid_out)
              annotation (Line(
                points={{-24,-12},{-26,-12},{-26,-18},{-28,-18}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ground.p, high_Voltage_Battery.pin_n) annotation (Line(
                points={{20,-62},{20,-30},{0,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_resistor.n, high_Voltage_Battery.pin_n) annotation (Line(
                points={{40,-10},{40,-30},{0,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(fuse.pin_p, high_Voltage_Battery.pin_p) annotation (Line(
                points={{-40,34},{-60,34},{-60,-30},{-40,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(fuse.pin_n, load_resistor.p) annotation (Line(
                points={{0,34},{40,34},{40,10}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(add1.y, load_resistor.R) annotation (Line(
                points={{61.6,0},{57.85,0},{57.85,-6.73556e-016},{51,-6.73556e-016}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp.y, add1.u1) annotation (Line(
                points={{49,78},{80,78},{80,2.4},{70.8,2.4}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp5.y, add1.u2) annotation (Line(
                points={{61,-50},{80,-50},{80,-2.4},{70.8,-2.4}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=250),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/DC_DC_Converter_Liquid_Cooled_plot_script.mos",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/fuse_plot.mos"
                "fuse_plot",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/fuse_plot.mos"
                "fuse_plot"));
          end Test_Fuse;

          model Test_Fuse_original
              extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{14,-74},{26,-62}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-40,-74},{0,-14}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-40,-12},{-20,8}})));
            Modelica.Blocks.Sources.Ramp ramp(
              offset=1000,
              duration=100,
              height=-997)
              annotation (Placement(transformation(extent={{28,68},{48,88}})));
            Modelica.Electrical.Analog.Basic.VariableResistor load_resistor
                                                               annotation (Placement(
                  transformation(
                  extent={{10,10},{-10,-10}},
                  rotation=90,
                  origin={40,0})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{80,-100},{100,-80}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Fuse
              fuse constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Fuse
                      annotation (Placement(transformation(extent={{-40,4},{0,64}})));
            Modelica.Blocks.Sources.Ramp ramp5(
              height=1000,
              offset=0,
              duration=100,
              startTime=150)
              annotation (Placement(transformation(extent={{40,-60},{60,-40}})));
            Modelica.Blocks.Math.Add add1
              annotation (Placement(transformation(extent={{70,-4},{62,4}})));
          equation

            connect(fluid_Source_Sink1.supply_port,high_Voltage_Battery. fluid_in)
              annotation (Line(
                points={{-36,-12},{-36,-18},{-36.2,-18}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port,high_Voltage_Battery. fluid_out)
              annotation (Line(
                points={{-24,-12},{-26,-12},{-26,-18},{-28,-18}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ground.p, high_Voltage_Battery.pin_n) annotation (Line(
                points={{20,-62},{20,-30},{0,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_resistor.n, high_Voltage_Battery.pin_n) annotation (Line(
                points={{40,-10},{40,-30},{0,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(fuse.pin_p, high_Voltage_Battery.pin_p) annotation (Line(
                points={{-40,48},{-60,48},{-60,-30},{-40,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(fuse.pin_n, load_resistor.p) annotation (Line(
                points={{0,48},{40,48},{40,10}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(add1.y, load_resistor.R) annotation (Line(
                points={{61.6,0},{57.85,0},{57.85,-6.73556e-016},{51,-6.73556e-016}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp.y, add1.u1) annotation (Line(
                points={{49,78},{80,78},{80,2.4},{70.8,2.4}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp5.y, add1.u2) annotation (Line(
                points={{61,-50},{80,-50},{80,-2.4},{70.8,-2.4}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=250),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/DC_DC_Converter_Liquid_Cooled_plot_script.mos",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/fuse_plot.mos"
                "fuse_plot",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/fuse_plot.mos"
                "fuse_plot"));
          end Test_Fuse_original;

          model Test_Relay
              extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{14,-74},{26,-62}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-40,-74},{0,-14}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-40,-12},{-20,8}})));
            Modelica.Blocks.Sources.Ramp ramp(
              offset=1000,
              duration=100,
              height=-999.9999)
              annotation (Placement(transformation(extent={{28,68},{48,88}})));
            Modelica.Electrical.Analog.Basic.VariableResistor load_resistor
                                                               annotation (Placement(
                  transformation(
                  extent={{10,10},{-10,-10}},
                  rotation=90,
                  origin={40,0})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{80,-100},{100,-80}})));
            replaceable Relay relay constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Relay
                        annotation (Placement(transformation(extent={{-42,6},{-2,66}})));
            Modelica.Electrical.Analog.Sources.PulseVoltage    constantVoltage(
              V=5,
              width=60,
              period=120,
              startTime=15)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=270,
                  origin={-80,56})));
            Modelica.Electrical.Analog.Basic.Ground ground1
              annotation (Placement(transformation(extent={{-90,18},{-70,38}})));
            Modelica.Blocks.Math.Add add1
              annotation (Placement(transformation(extent={{70,-4},{62,4}})));
            Modelica.Blocks.Sources.Ramp ramp1(
              duration=100,
              height=1000,
              offset=0,
              startTime=150)
              annotation (Placement(transformation(extent={{30,-60},{50,-40}})));
          equation

            connect(fluid_Source_Sink1.supply_port,high_Voltage_Battery. fluid_in)
              annotation (Line(
                points={{-36,-12},{-36,-18},{-36.2,-18}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port,high_Voltage_Battery. fluid_out)
              annotation (Line(
                points={{-24,-12},{-26,-12},{-26,-18},{-28,-18}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ground.p, high_Voltage_Battery.pin_n) annotation (Line(
                points={{20,-62},{20,-30},{0,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_resistor.n, high_Voltage_Battery.pin_n) annotation (Line(
                points={{40,-10},{40,-30},{0,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(relay.pin_p, high_Voltage_Battery.pin_p) annotation (Line(
                points={{-42,36},{-60,36},{-60,-30},{-40,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(relay.pin_n, load_resistor.p) annotation (Line(
                points={{-2,36},{40,36},{40,10}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(ground1.p,constantVoltage. n) annotation (Line(
                points={{-80,38},{-80,46}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(constantVoltage.p, relay.control) annotation (Line(
                points={{-80,66},{-80,80},{-22,80},{-22,66}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(add1.y, load_resistor.R) annotation (Line(
                points={{61.6,0},{56.3,0},{56.3,-6.73556e-016},{51,-6.73556e-016}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp.y, add1.u1) annotation (Line(
                points={{49,78},{80,78},{80,2.4},{70.8,2.4}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp1.y, add1.u2) annotation (Line(
                points={{51,-50},{80,-50},{80,-2.4},{70.8,-2.4}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=250),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/DC_DC_Converter_Liquid_Cooled_plot_script.mos",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/relay_plot.mos"
                "relay_plot",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/relay_plot.mos"
                "relay_plot",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/relay_plot.mos"
                "relay_plot"));
          end Test_Relay;

          model Test_Relay_original
              extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{14,-74},{26,-62}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-40,-74},{0,-14}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-40,-12},{-20,8}})));
            Modelica.Blocks.Sources.Ramp ramp(
              offset=1000,
              duration=100,
              height=-999.9999)
              annotation (Placement(transformation(extent={{28,68},{48,88}})));
            Modelica.Electrical.Analog.Basic.VariableResistor load_resistor
                                                               annotation (Placement(
                  transformation(
                  extent={{10,10},{-10,-10}},
                  rotation=90,
                  origin={40,0})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{80,-100},{100,-80}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Relay
              relay constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Relay
                        annotation (Placement(transformation(extent={{-42,6},{-2,66}})));
            Modelica.Electrical.Analog.Sources.PulseVoltage    constantVoltage(
              V=5,
              width=60,
              period=120,
              startTime=15)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=270,
                  origin={-80,56})));
            Modelica.Electrical.Analog.Basic.Ground ground1
              annotation (Placement(transformation(extent={{-90,18},{-70,38}})));
            Modelica.Blocks.Math.Add add1
              annotation (Placement(transformation(extent={{70,-4},{62,4}})));
            Modelica.Blocks.Sources.Ramp ramp1(
              duration=100,
              height=1000,
              offset=0,
              startTime=150)
              annotation (Placement(transformation(extent={{30,-60},{50,-40}})));
          equation

            connect(fluid_Source_Sink1.supply_port,high_Voltage_Battery. fluid_in)
              annotation (Line(
                points={{-36,-12},{-36,-18},{-36.2,-18}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port,high_Voltage_Battery. fluid_out)
              annotation (Line(
                points={{-24,-12},{-26,-12},{-26,-18},{-28,-18}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ground.p, high_Voltage_Battery.pin_n) annotation (Line(
                points={{20,-62},{20,-30},{0,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_resistor.n, high_Voltage_Battery.pin_n) annotation (Line(
                points={{40,-10},{40,-30},{0,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(relay.pin_p, high_Voltage_Battery.pin_p) annotation (Line(
                points={{-42,50},{-60,50},{-60,-30},{-40,-30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(relay.pin_n, load_resistor.p) annotation (Line(
                points={{-2,50},{40,50},{40,10}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(ground1.p,constantVoltage. n) annotation (Line(
                points={{-80,38},{-80,46}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(constantVoltage.p, relay.control) annotation (Line(
                points={{-80,66},{-80,80},{-22,80},{-22,58}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(add1.y, load_resistor.R) annotation (Line(
                points={{61.6,0},{56.3,0},{56.3,-6.73556e-016},{51,-6.73556e-016}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp.y, add1.u1) annotation (Line(
                points={{49,78},{80,78},{80,2.4},{70.8,2.4}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ramp1.y, add1.u2) annotation (Line(
                points={{51,-50},{80,-50},{80,-2.4},{70.8,-2.4}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=250),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/DC_DC_Converter_Liquid_Cooled_plot_script.mos",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/relay_plot.mos"
                "relay_plot",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/relay_plot.mos"
                "relay_plot",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Circuit_Systems/relay_plot.mos"
                "relay_plot"));
          end Test_Relay_original;
        end Tests;

        model Circuit_Breaker
          extends Interfaces.Circuit_Breaker;
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Current i_max=100 "Maximum current" annotation (Dialog(tab="Electrical Model"));
          parameter SI.Area heat_transfer_area=1.0
          "Area available for heat to transfer through case"
            annotation (Dialog(tab="Thermal Model"));

          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Circuit_Breaker
            circuit_Breaker(
            v_nom=v_nom,
            i_max=i_max,
            heat_transfer_area=heat_transfer_area)
            annotation (Placement(transformation(extent={{-20,-32},{20,28}})));
        equation
          connect(reset, circuit_Breaker.reset) annotation (Line(
              points={{-100,80},{0,80},{0,20.4}},
              color={255,0,255},
              smooth=Smooth.None));
          connect(circuit_Breaker.pin_p, pin_p) annotation (Line(
              points={{-20,12},{-60,12},{-60,0},{-100,0}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(circuit_Breaker.pin_n, pin_n) annotation (Line(
              points={{20,12},{60,12},{60,0},{100,0}},
              color={0,0,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Circuit_Breaker;

        model Fuse
          extends Interfaces.Fuse;
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Current i_max=100 "Maximum current" annotation (Dialog(tab="Electrical Model"));
          parameter SI.Area heat_transfer_area=1.0
          "Area available for heat to transfer through case"
            annotation (Dialog(tab="Thermal Model"));
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Fuse
            fuse(
            v_nom=v_nom,
            i_max=i_max,
            heat_transfer_area=heat_transfer_area)
                 annotation (Placement(transformation(extent={{-20,-44},{20,16}})));
        equation
          connect(fuse.pin_p, pin_p) annotation (Line(
              points={{-20,0},{-100,0}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(fuse.pin_n, pin_n) annotation (Line(
              points={{20,0},{100,0}},
              color={0,0,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Fuse;

        package Interfaces
           extends Modelica.Icons.InterfacesPackage;

          partial model Circuit_Breaker

            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
            Modelica.Electrical.Analog.Interfaces.PositivePin pin_n
              annotation (Placement(transformation(extent={{90,-10},{110,10}})));
            Modelica.Blocks.Interfaces.BooleanInput reset
              annotation (Placement(transformation(extent={{-120,60},{-80,100}})));
            inner
            C2M2L_OM.MSL_Extend.Environments.Lumped_Thermal_Fixed_HTC_Infinite       env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            annotation (Diagram(graphics));
          end Circuit_Breaker;

          partial model Fuse

            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{90,-10},{110,10}})));
            inner
            C2M2L_OM.MSL_Extend.Environments.Lumped_Thermal_Fixed_HTC_Infinite       env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
          end Fuse;

          partial model Relay

            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
            Modelica.Electrical.Analog.Interfaces.PositivePin control
              annotation (Placement(transformation(extent={{-10,90},{10,110}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{90,-10},{110,10}})));
            inner
            C2M2L_OM.MSL_Extend.Environments.Lumped_Thermal_Fixed_HTC_Infinite       env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
          end Relay;
        end Interfaces;

        model Relay
          extends Interfaces.Relay;
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Voltage v_enable=0.5 "Relay enable voltage"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Current i_max=100 "Maximum current"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Area heat_transfer_area=1.0
          "Area available for heat to transfer through case"
            annotation (Dialog(tab="Thermal Model"));
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Electrical_System.Circuit_Systems.Relay
            relay(
            v_nom=v_nom,
            v_enable=v_enable,
            i_max=i_max,
            heat_transfer_area=heat_transfer_area)
                  annotation (Placement(transformation(extent={{-20,-44},{20,16}})));
        equation
          connect(pin_p, relay.pin_p) annotation (Line(
              points={{-100,0},{-20,0}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(relay.pin_n, pin_n) annotation (Line(
              points={{20,0},{100,0}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(relay.control, control) annotation (Line(
              points={{0,8},{0,100}},
              color={0,0,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Relay;
      end Circuit_Systems;

      package Hybrid_Drive_Systems
      "Components related to high power electronics for hybrid systems (e.g. traction motors, ISGs, Lithium-Ion battery packs)"
        extends Modelica.Icons.Package;

        package Tests
        extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

          model Test_DC_DC_Converter
              extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable DC_DC_Converter_Liquid_Cooled dC_DC_Converter(gain=0.05,
                redeclare package Transported_Fluid =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
              constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.DC_DC_Converter_Liquid_Cooled(
                gain=0.05, redeclare package Transported_Fluid =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
              annotation (Placement(transformation(extent={{-20,-12},{20,48}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-20,50},{0,70}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{34,-92},{46,-80}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-20,-92},{20,-32}})));
            Modelica.Electrical.Analog.Basic.Resistor load_low_voltage(R=0.01)
              annotation (Placement(transformation(extent={{-20,80},{0,100}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-20,-30},{0,-10}})));
          equation

            connect(fluid_Source_Sink.supply_port, dC_DC_Converter.fluid_in) annotation (
                Line(
                points={{-16,50},{-16,50},{-16,48}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, dC_DC_Converter.fluid_out) annotation (
               Line(
                points={{-4,50},{-8,50},{-8,48}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ground.p,high_Voltage_Battery. pin_n) annotation (Line(
                points={{40,-80},{40,-48},{20,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_low_voltage.p, dC_DC_Converter.pin_p) annotation (Line(
                points={{-20,90},{-40,90},{-40,30},{-20,30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_low_voltage.n, dC_DC_Converter.pin_n) annotation (Line(
                points={{0,90},{40,90},{40,30},{20,30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(high_Voltage_Battery.pin_p, dC_DC_Converter.pin_p_supply) annotation (
               Line(
                points={{-20,-48},{-40,-48},{-40,0},{-20,0}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(high_Voltage_Battery.pin_n, dC_DC_Converter.pin_n_supply) annotation (
               Line(
                points={{20,-48},{40,-48},{40,0},{20,0}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.supply_port, high_Voltage_Battery.fluid_in)
              annotation (Line(
                points={{-16,-30},{-16,-36},{-16.2,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port, high_Voltage_Battery.fluid_out)
              annotation (Line(
                points={{-4,-30},{-6,-30},{-6,-36},{-8,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=5000),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/DC_DC_Converter_Liquid_Cooled_plot_script.mos"));
          end Test_DC_DC_Converter;

          model Test_DC_DC_Converter_original
              extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.DC_DC_Converter_Liquid_Cooled
              dC_DC_Converter(gain=0.05, redeclare package Transported_Fluid =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
              constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.DC_DC_Converter_Liquid_Cooled(
                gain=0.05, redeclare package Transported_Fluid =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
              annotation (Placement(transformation(extent={{-20,-12},{20,48}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-20,50},{0,70}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{34,-92},{46,-80}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-20,-92},{20,-32}})));
            Modelica.Electrical.Analog.Basic.Resistor load_low_voltage(R=0.01)
              annotation (Placement(transformation(extent={{-20,80},{0,100}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-20,-30},{0,-10}})));
          equation

            connect(fluid_Source_Sink.supply_port, dC_DC_Converter.fluid_in) annotation (
                Line(
                points={{-16,50},{-16.2,50},{-16.2,44}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, dC_DC_Converter.fluid_out) annotation (
               Line(
                points={{-4,50},{-8,50},{-8,44}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(ground.p,high_Voltage_Battery. pin_n) annotation (Line(
                points={{40,-80},{40,-48},{20,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_low_voltage.p, dC_DC_Converter.pin_p) annotation (Line(
                points={{-20,90},{-40,90},{-40,32},{-20,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_low_voltage.n, dC_DC_Converter.pin_n) annotation (Line(
                points={{0,90},{40,90},{40,32},{20,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(high_Voltage_Battery.pin_p, dC_DC_Converter.pin_p_supply) annotation (
               Line(
                points={{-20,-48},{-40,-48},{-40,8},{-20,8}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(high_Voltage_Battery.pin_n, dC_DC_Converter.pin_n_supply) annotation (
               Line(
                points={{20,-48},{40,-48},{40,8},{20,8}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.supply_port, high_Voltage_Battery.fluid_in)
              annotation (Line(
                points={{-16,-30},{-16,-36},{-16.2,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port, high_Voltage_Battery.fluid_out)
              annotation (Line(
                points={{-4,-30},{-6,-30},{-6,-36},{-8,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=5000),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/DC_DC_Converter_Liquid_Cooled_plot_script.mos"));
          end Test_DC_DC_Converter_original;

          model Test_High_Voltage_Battery
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            Modelica.Electrical.Analog.Basic.Resistor discharge_load(useHeatPort=false, R=0.5)
                                                                     annotation (
                Placement(transformation(
                  extent={{-7,-7},{7,7}},
                  rotation=180,
                  origin={7,-1})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{-2,-88},{10,-76}})));
            C2M2L_Ext.Electrical.Interfaces.Battery_Bus
                                      battery_Bus
              annotation (Placement(transformation(extent={{82,-18},{102,2}})));
            replaceable High_Voltage_Battery
              high_Voltage_Battery(medium=high_Voltage_Battery.adapterMedium)
              constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              annotation (Placement(transformation(extent={{-60,-92},{-20,-32}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant, T=323.15)
              annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,80},{-80,100}})));
            Modelica.Electrical.Analog.Ideal.IdealCommutingSwitch    switch_mode
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=0,
                  origin={-4,32})));
            Modelica.Blocks.Logical.Hysteresis hysteresis(
              pre_y_start=false,
              uLow=0.1,
              uHigh=0.95)
              annotation (Placement(transformation(extent={{82,40},{62,60}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage charging_source(V=500)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=180,
                  origin={40,-18})));
            Modelica.Electrical.Analog.Basic.Resistor charging_current_limiter(
                useHeatPort=false, R=0.05)                           annotation (
                Placement(transformation(
                  extent={{-7,-7},{7,7}},
                  rotation=180,
                  origin={9,-19})));
          equation

            connect(high_Voltage_Battery.pin_n, discharge_load.n) annotation (Line(
                points={{-20,-62},{-10,-62},{-10,-1},{-8.88178e-016,-1}},
                color={0,0,255},
                smooth=Smooth.None));

            connect(ground.p, high_Voltage_Battery.pin_n) annotation (Line(
                points={{4,-76},{4,-62},{-20,-62}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(battery_Bus, high_Voltage_Battery.battery_Bus) annotation (Line(
                points={{92,-8},{92,-30},{-40,-30},{-40,-32}},
                color={0,0,255},
                smooth=Smooth.None), Text(
                string="%first",
                index=-1,
                extent={{-6,3},{-6,3}}));
            connect(fluid_Source_Sink1.supply_port, high_Voltage_Battery.fluid_in)
              annotation (Line(
                points={{-56,-20},{-56,-32}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port, high_Voltage_Battery.fluid_out)
              annotation (Line(
                points={{-44,-20},{-46,-20},{-46,-32},{-48,-32}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(battery_Bus.soc,hysteresis. u) annotation (Line(
                points={{92,-8},{92,50},{84,50}},
                color={221,221,0},
                smooth=Smooth.None,
                thickness=0.5), Text(
                string="%first",
                index=-1,
                extent={{-6,3},{-6,3}}));
            connect(switch_mode.n1, charging_source.p) annotation (Line(
                points={{6,37},{50,37},{50,-18}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(switch_mode.n2, discharge_load.p) annotation (Line(
                points={{6,32},{34,32},{34,-1},{14,-1}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(hysteresis.y,switch_mode. control) annotation (Line(
                points={{61,50},{-4,50},{-4,40}},
                color={255,0,255},
                smooth=Smooth.None));
            connect(switch_mode.p, high_Voltage_Battery.pin_p) annotation (Line(
                points={{-14,32},{-74,32},{-74,-62},{-60,-62}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(charging_current_limiter.p,charging_source. n) annotation (Line(
                points={{16,-19},{24,-19},{24,-18},{30,-18}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(charging_current_limiter.n, ground.p) annotation (Line(
                points={{2,-19},{-4,-19},{-4,-20},{-10,-20},{-10,-48},{4,-48},{4,-76}},
                color={0,0,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=1000),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/High_Voltage_Battery_plot_script.mos"));
          end Test_High_Voltage_Battery;

          model Test_High_Voltage_Battery_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            Modelica.Electrical.Analog.Basic.Resistor discharge_load(useHeatPort=false, R=0.5)
                                                                     annotation (
                Placement(transformation(
                  extent={{-7,-7},{7,7}},
                  rotation=180,
                  origin={7,-1})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{-2,-88},{10,-76}})));
            C2M2L_Ext.Electrical.Interfaces.Battery_Bus
                                      battery_Bus
              annotation (Placement(transformation(extent={{82,-18},{102,2}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-60,-92},{-20,-32}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,80},{-80,100}})));
            Modelica.Electrical.Analog.Ideal.IdealCommutingSwitch    switch_mode
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=0,
                  origin={-4,32})));
            Modelica.Blocks.Logical.Hysteresis hysteresis(
              pre_y_start=false,
              uLow=0.1,
              uHigh=0.95)
              annotation (Placement(transformation(extent={{82,40},{62,60}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage charging_source(V=500)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=180,
                  origin={40,-18})));
            Modelica.Electrical.Analog.Basic.Resistor charging_current_limiter(
                useHeatPort=false, R=0.05)                           annotation (
                Placement(transformation(
                  extent={{-7,-7},{7,7}},
                  rotation=180,
                  origin={9,-19})));
          equation

            connect(high_Voltage_Battery.pin_n, discharge_load.n) annotation (Line(
                points={{-20,-48},{-10,-48},{-10,-1},{-8.88178e-016,-1}},
                color={0,0,255},
                smooth=Smooth.None));

            connect(ground.p, high_Voltage_Battery.pin_n) annotation (Line(
                points={{4,-76},{4,-48},{-20,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(battery_Bus, high_Voltage_Battery.battery_Bus) annotation (Line(
                points={{92,-8},{92,-30},{-40,-30},{-40,-40.2}},
                color={0,0,255},
                smooth=Smooth.None), Text(
                string="%first",
                index=-1,
                extent={{-6,3},{-6,3}}));
            connect(fluid_Source_Sink1.supply_port, high_Voltage_Battery.fluid_in)
              annotation (Line(
                points={{-56,-20},{-56,-36},{-56.2,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port, high_Voltage_Battery.fluid_out)
              annotation (Line(
                points={{-44,-20},{-46,-20},{-46,-36},{-48,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(battery_Bus.soc,hysteresis. u) annotation (Line(
                points={{92,-8},{92,50},{84,50}},
                color={221,221,0},
                smooth=Smooth.None,
                thickness=0.5), Text(
                string="%first",
                index=-1,
                extent={{-6,3},{-6,3}}));
            connect(switch_mode.n1, charging_source.p) annotation (Line(
                points={{6,37},{50,37},{50,-18}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(switch_mode.n2, discharge_load.p) annotation (Line(
                points={{6,32},{34,32},{34,-1},{14,-1}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(hysteresis.y,switch_mode. control) annotation (Line(
                points={{61,50},{-4,50},{-4,40}},
                color={255,0,255},
                smooth=Smooth.None));
            connect(switch_mode.p, high_Voltage_Battery.pin_p) annotation (Line(
                points={{-14,32},{-74,32},{-74,-48},{-60,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(charging_current_limiter.p,charging_source. n) annotation (Line(
                points={{16,-19},{24,-19},{24,-18},{30,-18}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(charging_current_limiter.n, ground.p) annotation (Line(
                points={{2,-19},{-4,-19},{-4,-20},{-10,-20},{-10,-48},{4,-48},{4,-76}},
                color={0,0,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=1000),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/High_Voltage_Battery_plot_script.mos"));
          end Test_High_Voltage_Battery_original;

          model Test_Inverter
              extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-80,60},{-60,80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{34,-92},{46,-80}})));
            Modelica.Electrical.Analog.Basic.Resistor load_resistor(R=0.1)
              annotation (Placement(transformation(extent={{-20,80},{0,100}})));
            replaceable Inverter_Liquid_Cooled
              inverter_Liquid_Cooled(adapterMedium=inverter_Liquid_Cooled.adapterMedium,
                medium=inverter_Liquid_Cooled.adapterMedium)
                                     constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Inverter_Liquid_Cooled
              annotation (Placement(transformation(extent={{-20,-12},{20,48}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-20,-92},{20,-32}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-80,-20},{-60,0}})));
          equation

            connect(inverter_Liquid_Cooled.pin_p, load_resistor.p)    annotation (Line(
                points={{-20,30},{-40,30},{-40,90},{-20,90}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_resistor.n, inverter_Liquid_Cooled.pin_n)    annotation (Line(
                points={{0,90},{40,90},{40,30},{20,30}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(inverter_Liquid_Cooled.fluid_in, fluid_Source_Sink.supply_port)
              annotation (Line(
                points={{-16,48},{-76,48},{-76,60}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(inverter_Liquid_Cooled.fluid_out, fluid_Source_Sink.return_port)
              annotation (Line(
                points={{-8,48},{-8,60},{-64,60}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.supply_port,high_Voltage_Battery. fluid_in)
              annotation (Line(
                points={{-76,-20},{-76,-36},{-16.2,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port,high_Voltage_Battery. fluid_out)
              annotation (Line(
                points={{-64,-20},{-6,-20},{-6,-36},{-8,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(high_Voltage_Battery.pin_p, inverter_Liquid_Cooled.pin_p_supply)
              annotation (Line(
                points={{-20,-48},{-40,-48},{-40,6},{-20,6}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(inverter_Liquid_Cooled.pin_n_supply, high_Voltage_Battery.pin_n)
              annotation (Line(
                points={{20,6},{40,6},{40,-48},{20,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(ground.p, high_Voltage_Battery.pin_n) annotation (Line(
                points={{40,-80},{40,-48},{20,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(inverter_Liquid_Cooled.pin_n, ground.p) annotation (Line(
                points={{20,30},{40,30},{40,-80}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(world.frame_b, high_Voltage_Battery.mount_01) annotation (Line(
                points={{-80,-90},{-40,-90},{-40,-100},{0,-100},{0,-92}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=1000),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/DC_DC_Converter_Liquid_Cooled_plot_script.mos"));
          end Test_Inverter;

          model Test_Inverter_original
              extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-80,60},{-60,80}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{34,-92},{46,-80}})));
            Modelica.Electrical.Analog.Basic.Resistor load_resistor(R=0.1)
              annotation (Placement(transformation(extent={{-20,80},{0,100}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Inverter_Liquid_Cooled
              inverter_Liquid_Cooled constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Inverter_Liquid_Cooled
              annotation (Placement(transformation(extent={{-20,-12},{20,48}})));
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
              high_Voltage_Battery
              annotation (Placement(transformation(extent={{-20,-92},{20,-32}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink1(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                                                                         T=323.15)
              annotation (Placement(transformation(extent={{-80,-20},{-60,0}})));
          equation

            connect(inverter_Liquid_Cooled.pin_p, load_resistor.p)    annotation (Line(
                points={{-20,32},{-40,32},{-40,90},{-20,90}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(load_resistor.n, inverter_Liquid_Cooled.pin_n)    annotation (Line(
                points={{0,90},{40,90},{40,32},{20,32}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(inverter_Liquid_Cooled.fluid_in, fluid_Source_Sink.supply_port)
              annotation (Line(
                points={{-16.2,44},{-76,44},{-76,60}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(inverter_Liquid_Cooled.fluid_out, fluid_Source_Sink.return_port)
              annotation (Line(
                points={{-8,44},{-8,60},{-64,60}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.supply_port,high_Voltage_Battery. fluid_in)
              annotation (Line(
                points={{-76,-20},{-76,-36},{-16.2,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink1.return_port,high_Voltage_Battery. fluid_out)
              annotation (Line(
                points={{-64,-20},{-6,-20},{-6,-36},{-8,-36}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(high_Voltage_Battery.pin_p, inverter_Liquid_Cooled.pin_p_supply)
              annotation (Line(
                points={{-20,-48},{-40,-48},{-40,8},{-20,8}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(inverter_Liquid_Cooled.pin_n_supply, high_Voltage_Battery.pin_n)
              annotation (Line(
                points={{20,8},{40,8},{40,-48},{20,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(ground.p, high_Voltage_Battery.pin_n) annotation (Line(
                points={{40,-80},{40,-48},{20,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(inverter_Liquid_Cooled.pin_n, ground.p) annotation (Line(
                points={{20,32},{40,32},{40,-80}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(world.frame_b, high_Voltage_Battery.mount_01) annotation (Line(
                points={{-80,-90},{-40,-90},{-40,-100},{0,-100},{0,-92}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(world.frame_b, inverter_Liquid_Cooled.origin) annotation (Line(
                points={{-80,-90},{-32,-90},{-32,0},{0,0}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=1000),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/DC_DC_Converter_Liquid_Cooled_plot_script.mos"));
          end Test_Inverter_original;

          model Test_Starter_Generator
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-98,-98},{-78,-78}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Simple_Dyno
                                       simple_Dyno(
              Ti=0.1,
              max_res_trq=1000,
              k=10,
              controllerType=Modelica.Blocks.Types.SimpleController.P,
              use_inertia=true)                                         annotation (
                Placement(transformation(
                  extent={{20,-30},{-20,30}},
                  rotation=0,
                  origin={-60,-2})));
            Modelica.Blocks.Sources.Constant const(k=100)
              annotation (Placement(transformation(extent={{-100,40},{-80,60}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{36,-64},{56,-44}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{-10,44},{10,64}})));
            Modelica.Blocks.Sources.Constant const2(k=1)
              annotation (Placement(transformation(extent={{60,-90},{40,-70}})));
            Modelica.Electrical.Analog.Basic.VariableResistor
                                                      resistor annotation (Placement(
                  transformation(
                  extent={{-10,10},{10,-10}},
                  rotation=0,
                  origin={0,-40})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  Modelica.Media.Air.DryAirNasa)
              annotation (Placement(transformation(extent={{-40,40},{-20,60}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{60,80},{80,100}})));
            replaceable Integrated_Starter_Generator
              integrated_Starter_Generator(adapterMedium=integrated_Starter_Generator.adapterMedium,
                medium=integrated_Starter_Generator.adapterMedium) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Integrated_Starter_Generator
              annotation (Placement(transformation(extent={{-20,-32},{20,28}})));
            Modelica.Blocks.Sources.Pulse pulse1(
              offset=0,
              width=50,
              period=50,
              amplitude=-1)
              annotation (Placement(transformation(extent={{-42,74},{-22,94}})));
          equation
            connect(const.y, simple_Dyno.request_speed) annotation (Line(
                points={{-79,50},{-60,50},{-60,22.4}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ground.p, resistor.n) annotation (Line(
                points={{46,-44},{28,-44},{28,-40},{10,-40}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(simple_Dyno.brg_01, integrated_Starter_Generator.brg_01) annotation (
                Line(
                points={{-40,0},{-30,0},{-30,-2},{-20,-2}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(electric_Machine_Bus, integrated_Starter_Generator.electric_Machine_Bus)
              annotation (Line(
                points={{0,54},{0,28}},
                color={170,213,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(resistor.p, integrated_Starter_Generator.pin_p) annotation (Line(
                points={{-10,-40},{-30,-40},{-30,10},{-20,10}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(resistor.n, integrated_Starter_Generator.pin_n) annotation (Line(
                points={{10,-40},{32,-40},{32,10},{20,10}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(const2.y, resistor.R) annotation (Line(
                points={{39,-80},{0,-80},{0,-51}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, integrated_Starter_Generator.fluid_out)
              annotation (Line(
                points={{-24,40},{-24,34},{-8,34},{-8,28}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.supply_port, integrated_Starter_Generator.fluid_in)
              annotation (Line(
                points={{-36,40},{-36,30},{-16,30},{-16,28}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(world.frame_b, simple_Dyno.origin) annotation (Line(
                points={{-78,-88},{-60,-88},{-60,-20}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(pulse1.y, electric_Machine_Bus.demand) annotation (Line(
                points={{-21,84},{0,84},{0,54}},
                color={0,0,127},
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            annotation (
              Diagram(graphics),
              experiment(StopTime=500),
              __Dymola_experimentSetupOutput,
              Commands(file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Hybrid_Drive_Systems/generator.mos"
                "Generator"));
          end Test_Starter_Generator;

          model Test_Starter_Generator_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            inner Modelica.Mechanics.MultiBody.World world
              annotation (Placement(transformation(extent={{-98,-98},{-78,-78}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Simple_Dyno
                                       simple_Dyno(
              Ti=0.1,
              max_res_trq=1000,
              k=10,
              controllerType=Modelica.Blocks.Types.SimpleController.P,
              use_inertia=true)                                         annotation (
                Placement(transformation(
                  extent={{20,-30},{-20,30}},
                  rotation=0,
                  origin={-60,-2})));
            Modelica.Blocks.Sources.Constant const(k=100)
              annotation (Placement(transformation(extent={{-100,40},{-80,60}})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{36,-64},{56,-44}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{-10,44},{10,64}})));
            Modelica.Blocks.Sources.Constant const2(k=1)
              annotation (Placement(transformation(extent={{60,-90},{40,-70}})));
            Modelica.Electrical.Analog.Basic.VariableResistor
                                                      resistor annotation (Placement(
                  transformation(
                  extent={{-10,10},{10,-10}},
                  rotation=0,
                  origin={0,-40})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  Modelica.Media.Air.DryAirNasa)
              annotation (Placement(transformation(extent={{-40,40},{-20,60}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{60,80},{80,100}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Integrated_Starter_Generator
              integrated_Starter_Generator
              annotation (Placement(transformation(extent={{-20,-32},{20,28}})));
            Modelica.Blocks.Sources.Pulse pulse1(
              offset=0,
              width=50,
              period=50,
              amplitude=-1)
              annotation (Placement(transformation(extent={{-42,74},{-22,94}})));
          equation
            connect(const.y, simple_Dyno.request_speed) annotation (Line(
                points={{-79,50},{-60,50},{-60,22.4}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(ground.p, resistor.n) annotation (Line(
                points={{46,-44},{28,-44},{28,-40},{10,-40}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(simple_Dyno.brg_01, integrated_Starter_Generator.brg_01) annotation (
                Line(
                points={{-40,0},{-20,0}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(electric_Machine_Bus, integrated_Starter_Generator.electric_Machine_Bus)
              annotation (Line(
                points={{0,54},{0,19.8}},
                color={170,213,255},
                thickness=0.5,
                smooth=Smooth.None));
            connect(resistor.p, integrated_Starter_Generator.pin_p) annotation (Line(
                points={{-10,-40},{-30,-40},{-30,12},{-20,12}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(resistor.n, integrated_Starter_Generator.pin_n) annotation (Line(
                points={{10,-40},{32,-40},{32,12},{20,12}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(const2.y, resistor.R) annotation (Line(
                points={{39,-80},{0,-80},{0,-51}},
                color={0,0,127},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, integrated_Starter_Generator.fluid_out)
              annotation (Line(
                points={{-24,40},{-24,34},{-8,34},{-8,24}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.supply_port, integrated_Starter_Generator.fluid_in)
              annotation (Line(
                points={{-36,40},{-36,30},{-16.2,30},{-16.2,24}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(world.frame_b, simple_Dyno.origin) annotation (Line(
                points={{-78,-88},{-60,-88},{-60,-20}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(pulse1.y, electric_Machine_Bus.demand) annotation (Line(
                points={{-21,84},{0,84},{0,54}},
                color={0,0,127},
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            annotation (
              Diagram(graphics),
              experiment(StopTime=500),
              __Dymola_experimentSetupOutput,
              Commands(file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Hybrid_Drive_Systems/generator.mos"
                "Generator"));
          end Test_Starter_Generator_original;

          model Test_Traction_Motor_air
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable Traction_Motor_Liquid_Cooled
              traction_Motor_Liquid_Cooled(temp_max=355.15) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Traction_Motor_Liquid_Cooled
              annotation (Placement(transformation(extent={{-8,-20},{12,12}})));
            inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Simple_Dyno
                                       simple_Dyno(
              Ti=0.1,
              controllerType=Modelica.Blocks.Types.SimpleController.PI,
              max_res_trq=10000000)                                     annotation (
                Placement(transformation(
                  extent={{10,-16},{-10,16}},
                  rotation=0,
                  origin={-52,-4})));
            Modelica.Blocks.Sources.Constant const(k=50)
              annotation (Placement(transformation(extent={{-94,42},{-74,62}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage constantVoltage(V=450)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=270,
                  origin={56,-2})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{46,-46},{66,-26}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant, T=353.15)
              annotation (Placement(transformation(extent={{-44,58},{-24,78}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{10,40},{30,60}})));
            Modelica.Blocks.Sources.Pulse pulse1(
              offset=0,
              amplitude=1,
              width=50,
              period=50)
              annotation (Placement(transformation(extent={{-14,80},{6,100}})));
            Modelica.Blocks.Sources.Pulse pulse2(
              offset=0,
              width=50,
              period=50,
              amplitude=800)
              annotation (Placement(transformation(extent={{-94,72},{-74,92}})));
          equation
            connect(simple_Dyno.brg_01, traction_Motor_Liquid_Cooled.brg_01) annotation (
                Line(
                points={{-42,-2.93333},{-33.5,-2.93333},{-33.5,-3.86666},{-25,-3.86666},{
                    -25,-4},{-8,-4}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(constantVoltage.p, traction_Motor_Liquid_Cooled.pin_p) annotation (
                Line(
                points={{56,8},{54,8},{54,24},{-14,24},{-14,2.4},{-8,2.4}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(constantVoltage.n, ground.p) annotation (Line(
                points={{56,-12},{56,-26}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(traction_Motor_Liquid_Cooled.pin_n, constantVoltage.n) annotation (
                Line(
                points={{12,2.4},{26,2.4},{26,-18},{56,-18},{56,-12}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(electric_Machine_Bus, traction_Motor_Liquid_Cooled.electric_Machine_Bus)
              annotation (Line(
                points={{20,50},{24,50},{24,16},{2,16},{2,12}},
                color={0,0,255},
                smooth=Smooth.None), Text(
                string="%first",
                index=-1,
                extent={{-6,3},{-6,3}}));
            connect(traction_Motor_Liquid_Cooled.fluid_in, fluid_Source_Sink.supply_port)
              annotation (Line(
                points={{-6,12},{-6,38},{-40,38},{-40,58}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, traction_Motor_Liquid_Cooled.fluid_out)
              annotation (Line(
                points={{-28,58},{-28,48},{0,48},{0,12},{-2,12}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(pulse1.y, electric_Machine_Bus.demand) annotation (Line(
                points={{7,90},{20,90},{20,50}},
                color={0,0,127},
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            connect(pulse2.y, simple_Dyno.request_speed) annotation (Line(
                points={{-73,82},{-52,82},{-52,9.01333}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (
              Diagram(graphics),
              experiment(StopTime=100),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Traction_Motor_Liquid_Cooled_plot_script.mos", file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Hybrid_Drive_Systems/traction_motor_plots.mos"
                "traction_motor_plots",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Hybrid_Drive_Systems/traction_motor.mos"
                "traction_motor"));
          end Test_Traction_Motor_air;

          model Test_Traction_Motor_liquid
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable Traction_Motor_Liquid_Cooled
              traction_Motor_Liquid_Cooled(temp_max=355.15) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Traction_Motor_Liquid_Cooled
              annotation (Placement(transformation(extent={{-8,-20},{12,12}})));
            inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Simple_Dyno
                                       simple_Dyno(
              Ti=0.1,
              controllerType=Modelica.Blocks.Types.SimpleController.PI,
              max_res_trq=10000000)                                     annotation (
                Placement(transformation(
                  extent={{10,-16},{-10,16}},
                  rotation=0,
                  origin={-52,-4})));
            Modelica.Blocks.Sources.Constant const(k=50)
              annotation (Placement(transformation(extent={{-94,42},{-74,62}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage constantVoltage(V=450)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=270,
                  origin={56,-2})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{46,-46},{66,-26}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant, T=353.15)
              annotation (Placement(transformation(extent={{-44,58},{-24,78}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{10,40},{30,60}})));
            Modelica.Blocks.Sources.Pulse pulse1(
              offset=0,
              amplitude=1,
              width=50,
              period=50)
              annotation (Placement(transformation(extent={{-14,80},{6,100}})));
            Modelica.Blocks.Sources.Pulse pulse2(
              offset=0,
              width=50,
              period=50,
              amplitude=800)
              annotation (Placement(transformation(extent={{-94,72},{-74,92}})));
          equation
            connect(simple_Dyno.brg_01, traction_Motor_Liquid_Cooled.brg_01) annotation (
                Line(
                points={{-42,-2.93333},{-33.5,-2.93333},{-33.5,-3.86666},{-25,-3.86666},{
                    -25,-4},{-8,-4}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(constantVoltage.p, traction_Motor_Liquid_Cooled.pin_p) annotation (
                Line(
                points={{56,8},{54,8},{54,24},{-14,24},{-14,2.4},{-8,2.4}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(constantVoltage.n, ground.p) annotation (Line(
                points={{56,-12},{56,-26}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(traction_Motor_Liquid_Cooled.pin_n, constantVoltage.n) annotation (
                Line(
                points={{12,2.4},{26,2.4},{26,-18},{56,-18},{56,-12}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(electric_Machine_Bus, traction_Motor_Liquid_Cooled.electric_Machine_Bus)
              annotation (Line(
                points={{20,50},{24,50},{24,16},{2,16},{2,12}},
                color={0,0,255},
                smooth=Smooth.None), Text(
                string="%first",
                index=-1,
                extent={{-6,3},{-6,3}}));
            connect(traction_Motor_Liquid_Cooled.fluid_in, fluid_Source_Sink.supply_port)
              annotation (Line(
                points={{-6,12},{-6,38},{-40,38},{-40,58}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, traction_Motor_Liquid_Cooled.fluid_out)
              annotation (Line(
                points={{-28,58},{-28,48},{0,48},{0,12},{-2,12}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(pulse1.y, electric_Machine_Bus.demand) annotation (Line(
                points={{7,90},{20,90},{20,50}},
                color={0,0,127},
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            connect(pulse2.y, simple_Dyno.request_speed) annotation (Line(
                points={{-73,82},{-52,82},{-52,9.01333}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (
              Diagram(graphics),
              experiment(StopTime=100),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Traction_Motor_Liquid_Cooled_plot_script.mos", file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Hybrid_Drive_Systems/traction_motor_plots.mos"
                "traction_motor_plots",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Hybrid_Drive_Systems/traction_motor.mos"
                "traction_motor"));
          end Test_Traction_Motor_liquid;

          model Test_Traction_Motor_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Traction_Motor_Liquid_Cooled
              traction_Motor_Liquid_Cooled(temp_max=355.15) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Traction_Motor_Liquid_Cooled
              annotation (Placement(transformation(extent={{-8,-20},{12,12}})));
            inner Modelica.Mechanics.MultiBody.World world
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Simple_Dyno
                                       simple_Dyno(
              Ti=0.1,
              controllerType=Modelica.Blocks.Types.SimpleController.PI,
              max_res_trq=10000000)                                     annotation (
                Placement(transformation(
                  extent={{10,-16},{-10,16}},
                  rotation=0,
                  origin={-52,-4})));
            Modelica.Blocks.Sources.Constant const(k=50)
              annotation (Placement(transformation(extent={{-94,42},{-74,62}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage constantVoltage(V=450)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=270,
                  origin={56,-2})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{46,-46},{66,-26}})));
            C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink
                                             fluid_Source_Sink(redeclare
              package Medium =
                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant, T=353.15)
              annotation (Placement(transformation(extent={{-44,58},{-24,78}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
              annotation (Placement(transformation(extent={{10,40},{30,60}})));
            Modelica.Blocks.Sources.Pulse pulse1(
              offset=0,
              amplitude=1,
              width=50,
              period=50)
              annotation (Placement(transformation(extent={{-14,80},{6,100}})));
            Modelica.Blocks.Sources.Pulse pulse2(
              offset=0,
              width=50,
              period=50,
              amplitude=800)
              annotation (Placement(transformation(extent={{-94,72},{-74,92}})));
          equation
            connect(world.frame_b, traction_Motor_Liquid_Cooled.origin) annotation (Line(
                points={{-80,-90},{2,-90},{2,-13.6}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(simple_Dyno.brg_01, traction_Motor_Liquid_Cooled.brg_01) annotation (
                Line(
                points={{-42,-2.93333},{-33.5,-2.93333},{-33.5,-3.86666},{-25,-3.86666},{
                    -25,-2.93333},{-8,-2.93333}},
                color={135,135,135},
                thickness=0.5,
                smooth=Smooth.None));
            connect(constantVoltage.p, traction_Motor_Liquid_Cooled.pin_p) annotation (
                Line(
                points={{56,8},{54,8},{54,24},{-14,24},{-14,3.46667},{-8,3.46667}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(constantVoltage.n, ground.p) annotation (Line(
                points={{56,-12},{56,-26}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(traction_Motor_Liquid_Cooled.pin_n, constantVoltage.n) annotation (
                Line(
                points={{12,3.46667},{26,3.46667},{26,-18},{56,-18},{56,-12}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(electric_Machine_Bus, traction_Motor_Liquid_Cooled.electric_Machine_Bus)
              annotation (Line(
                points={{20,50},{24,50},{24,16},{2,16},{2,7.73333}},
                color={0,0,255},
                smooth=Smooth.None), Text(
                string="%first",
                index=-1,
                extent={{-6,3},{-6,3}}));
            connect(traction_Motor_Liquid_Cooled.fluid_in, fluid_Source_Sink.supply_port)
              annotation (Line(
                points={{-6.1,9.86667},{-6.1,38},{-40,38},{-40,58}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_Source_Sink.return_port, traction_Motor_Liquid_Cooled.fluid_out)
              annotation (Line(
                points={{-28,58},{-28,48},{0,48},{0,9.86667},{-2,9.86667}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(pulse1.y, electric_Machine_Bus.demand) annotation (Line(
                points={{7,90},{20,90},{20,50}},
                color={0,0,127},
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            connect(pulse2.y, simple_Dyno.request_speed) annotation (Line(
                points={{-73,82},{-52,82},{-52,9.01333}},
                color={0,0,127},
                smooth=Smooth.None));
            annotation (
              Diagram(graphics),
              experiment(StopTime=100),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Traction_Motor_Liquid_Cooled_plot_script.mos", file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Hybrid_Drive_Systems/traction_motor_plots.mos"
                "traction_motor_plots",
                file=
                    "C2M2L_Delivered_Component_Implementations/Electrical_System/Hybrid_Drive_Systems/traction_motor.mos"
                "traction_motor"));
          end Test_Traction_Motor_original;
        end Tests;

        model DC_DC_Converter_Liquid_Cooled
          extends Interfaces.DC_DC_Converter_Liquid_Cooled;
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at"
            annotation (Dialog(tab="Electrical Model"));
          parameter Real gain=0.5 "Converter gain"
            annotation (Dialog(tab="Electrical Model"));
          parameter Real eff=1 "Inverter efficiency"
            annotation (Dialog(tab="Electrical Model"));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=Modelica.Thermal.FluidHeatFlow.Media.Water()
          "Medium in the component"
            annotation(__Dymola_choicesAllMatching=true);
          parameter Real effectiveness_nom=0.7
          "Nominal effectiveness of the cooling passages"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Power cooling_Q_nom=1000
          "Nominal amount of heat rejection required"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Temperature T_inlet_nom=323.15
          "Nominal fluid inlet temperature"                                            annotation (Dialog(tab="Fluid Model"));
          parameter SI.VolumeFlowRate V_dot_nom=0.001
          "Nominal volume flow rate of fluid"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Pressure dp_nom=2000
          "Nominal pressure drop at V_dot_nom"                                  annotation (Dialog(tab="Fluid Model"));

          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.DC_DC_Converter_Liquid_Cooled
            dC_DC_Converter_Liquid_Cooled(
            v_nom=v_nom,
            gain=gain,
            eff=eff,
            effectiveness_nom=effectiveness_nom,
            cooling_Q_nom=cooling_Q_nom,
            T_inlet_nom=T_inlet_nom,
            V_dot_nom=V_dot_nom,
            dp_nom=dp_nom,
            medium=medium)
            annotation (Placement(transformation(extent={{-20,-24},{20,24}})));
        equation
          connect(dC_DC_Converter_Liquid_Cooled.pin_n_supply, pin_n_supply) annotation (
             Line(
              points={{20,-12},{60,-12},{60,-60},{100,-60}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(dC_DC_Converter_Liquid_Cooled.pin_p_supply, pin_p_supply) annotation (
             Line(
              points={{-20,-12},{-60,-12},{-60,-60},{-100,-60}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(dC_DC_Converter_Liquid_Cooled.pin_p, pin_p) annotation (Line(
              points={{-20,12},{-60,12},{-60,40},{-100,40}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(dC_DC_Converter_Liquid_Cooled.pin_n, pin_n) annotation (Line(
              points={{20,12},{60,12},{60,40},{100,40}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(dC_DC_Converter_Liquid_Cooled.fluid_in, fluidAdaptor.fluidHeatflow_port)
            annotation (Line(
              points={{-16,24},{-18,24},{-18,50},{-80,50},{-80,68}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(dC_DC_Converter_Liquid_Cooled.fluid_out, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{-8,24},{-10,24},{-10,60},{-40,60},{-40,68}},
              color={255,0,0},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end DC_DC_Converter_Liquid_Cooled;

        model High_Voltage_Battery
          extends Interfaces.High_Voltage_Battery;
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium
          "Medium in the component"
            annotation(__Dymola_choicesAllMatching=true);
          parameter SI.Voltage v_nom=400
          "Nominal voltage that device is intended to operate at"
            annotation (Dialog(tab="Electrical Model"));
           parameter SI.Resistance R_batt=0.001
          "Battery internal resistance (Ohm)"
             annotation(Dialog(tab="Electrical Model"));
           parameter SI.Temperature T_ref=293.15
          "Reference temperature for battery operation"
                 annotation(Dialog(tab="Electrical Model"));
           parameter SI.Mass mass_batt=5 "Thermal mass of battery"
               annotation(Dialog(tab="Electrical Model"));
           parameter SI.ThermalResistance R_thermal=0.01
          "Battery thermal resistance"
               annotation(Dialog(tab="Electrical Model"));
           parameter SI.SpecificHeatCapacity cp_batt=1000
          "Specific heat of battery"
               annotation(Dialog(tab="Electrical Model"));
           parameter SI.Temperature T_start=293.15
          "Start temperature of battery"
               annotation(Dialog(tab="Electrical Model"));
           parameter Real soc_init=0.6 "Initial state of charge (0 - 1)"
               annotation(Dialog(tab="Electrical Model"));
          parameter SI.Voltage e_max = 450 "Maximum battery voltage" annotation(Dialog(tab="Electrical Model"));
          parameter SI.Charge q_max = 100000 "Maximum capacity" annotation(Dialog(tab="Electrical Model"));

          parameter Real effectiveness_nom=0.7
          "Nominal effectiveness of the cooling passages"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Power cooling_Q_nom=1000
          "Nominal amount of heat rejection required"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Temperature T_inlet_nom=323.15
          "Nominal fluid inlet temperature"                                            annotation (Dialog(tab="Fluid Model"));
          parameter SI.VolumeFlowRate V_dot_nom=0.001
          "Nominal volume flow rate of fluid"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Pressure dp_nom=2000
          "Nominal pressure drop at V_dot_nom"                                  annotation (Dialog(tab="Fluid Model"));
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.High_Voltage_Battery
            high_Voltage_Battery(
            medium=medium,
            v_nom=v_nom,
            R_batt=R_batt,
            T_ref=T_ref,
            mass_batt=mass_batt,
            R_thermal=R_thermal,
            cp_batt=cp_batt,
            T_start=T_start,
            soc_init=soc_init,
            e_max=e_max,
            q_max=q_max,
            effectiveness_nom=effectiveness_nom,
            cooling_Q_nom=cooling_Q_nom,
            T_inlet_nom=T_inlet_nom,
            V_dot_nom=V_dot_nom,
            dp_nom=dp_nom)
            annotation (Placement(transformation(extent={{-20,-34},{20,6}})));
        equation
          connect(pin_p, high_Voltage_Battery.pin_p) annotation (Line(
              points={{-100,0},{-20,0}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(high_Voltage_Battery.pin_n, pin_n) annotation (Line(
              points={{20,0},{100,0}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(high_Voltage_Battery.fluid_in, fluidAdaptor.fluidHeatflow_port)
            annotation (Line(
              points={{-20,6},{-80,6},{-80,68}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(high_Voltage_Battery.fluid_out, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{-14,6},{-14,40},{-40,40},{-40,68}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(high_Voltage_Battery.i, battery_Bus.i) annotation (Line(
              points={{20.6,-10},{30,-10},{30,40},{0,40},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(high_Voltage_Battery.v, battery_Bus.v) annotation (Line(
              points={{20.6,-14},{34,-14},{34,44},{0,44},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(high_Voltage_Battery.Temp, battery_Bus.T) annotation (Line(
              points={{20.6,-18},{38,-18},{38,48},{0,48},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(high_Voltage_Battery.soc, battery_Bus.soc) annotation (Line(
              points={{20.6,-22},{42,-22},{42,54},{0,54},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          annotation (Diagram(graphics));
        end High_Voltage_Battery;

        model Integrated_Starter_Generator
          extends Interfaces.Integrated_Starter_Generator;
          parameter SI.Inertia rotating_inertia = 1.0
          "Moment of inertia of device around its axis of rotation";
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at"
            annotation (Dialog(tab="Electrical Model"));
            parameter SI.AngularVelocity w_cut = 50
          "Rotational speed below which the device is not designed to perform"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Torque max_torque=1800 "Maximum torque"
            annotation (Dialog(tab="Electrical Model"));
          parameter Real efficiency=0.95
          "Efficiency of electrical to mechanical conversion"
            annotation (Dialog(tab="Electrical Model"));

          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC()
          "Medium in the component"
            annotation(__Dymola_choicesAllMatching=true);
          parameter Real effectiveness_nom=0.7
          "Nominal effectiveness of the cooling passages"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Power cooling_Q_nom=1000
          "Nominal amount of heat rejection required"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Temperature T_inlet_nom=323.15
          "Nominal fluid inlet temperature"                                            annotation (Dialog(tab="Fluid Model"));
          parameter SI.VolumeFlowRate V_dot_nom=0.001
          "Nominal volume flow rate of fluid"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Pressure dp_nom=2000
          "Nominal pressure drop at V_dot_nom"                                  annotation (Dialog(tab="Fluid Model"));

          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Integrated_Starter_Generator
            integrated_Starter_Generator(
            rotating_inertia=rotating_inertia,
            v_nom=v_nom,
            w_cut=w_cut,
            max_torque=max_torque,
            efficiency=efficiency,
            medium=medium,
            effectiveness_nom=effectiveness_nom,
            cooling_Q_nom=cooling_Q_nom,
            T_inlet_nom=T_inlet_nom,
            V_dot_nom=V_dot_nom,
            dp_nom=dp_nom)
            annotation (Placement(transformation(extent={{-20,-24},{20,24}})));
        equation
          connect(pin_p, integrated_Starter_Generator.pin_p) annotation (Line(
              points={{-100,40},{-60,40},{-60,12},{-20,12}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(brg_01.flange, integrated_Starter_Generator.brg_01) annotation (Line(
              points={{-100,0},{-20,0}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(integrated_Starter_Generator.pin_n, pin_n) annotation (Line(
              points={{20,12},{60,12},{60,40},{100,40}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(fluidAdaptor.fluidHeatflow_port, integrated_Starter_Generator.fluid_in)
            annotation (Line(
              points={{-80,70},{-80,50},{-16,50},{-16,24}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(fluidAdaptor1.fluidHeatflow_port, integrated_Starter_Generator.fluid_out)
            annotation (Line(
              points={{-40,70},{-40,60},{-8,60},{-8,24}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(integrated_Starter_Generator.demand, electric_Machine_Bus.demand)
            annotation (Line(
              points={{-4,24.8},{-4,90},{0,90},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(integrated_Starter_Generator.w, electric_Machine_Bus.w) annotation (
              Line(
              points={{20.6,4},{26,4},{26,80},{0,80},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(integrated_Starter_Generator.tau, electric_Machine_Bus.tau)
            annotation (Line(
              points={{20.6,-4},{36,-4},{36,86},{0,86},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(integrated_Starter_Generator.i, electric_Machine_Bus.i) annotation (
              Line(
              points={{20.6,0},{30,0},{30,84},{0,84},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(integrated_Starter_Generator.v, electric_Machine_Bus.v) annotation (
              Line(
              points={{20.6,-8},{40,-8},{40,92},{0,92},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          annotation (Diagram(graphics));
        end Integrated_Starter_Generator;

        package Interfaces
           extends Modelica.Icons.InterfacesPackage;

          partial model DC_DC_Converter_Liquid_Cooled

          replaceable package Transported_Fluid =
                C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant;

            parameter Modelica.Thermal.FluidHeatFlow.Media.Medium adapterMedium=Modelica.Thermal.FluidHeatFlow.Media.Water()
            "Medium in the component"
              annotation(__Dymola_choicesAllMatching=true);

            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p_supply
              annotation (Placement(transformation(extent={{-110,-70},{-90,-50}})));
            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-110,30},{-90,50}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{90,30},{110,50}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n_supply
              annotation (Placement(transformation(extent={{90,-70},{110,-50}})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  Transported_Fluid)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-90,90},{-70,110}})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  Transported_Fluid)
            "Port that nominally flows fluid out of the container"
              annotation (Placement(transformation(extent={{-50,90},{-30,110}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=adapterMedium, redeclare package Medium =
                  Transported_Fluid)                                                     annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-80,78})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                redeclare package Medium = Transported_Fluid, HeatFlowMedium=
                  adapterMedium)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-40,78})));
          equation
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{-40,88},{-40,100}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor.fluid_port, fluid_in) annotation (Line(
                points={{-80,88},{-80,100}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end DC_DC_Converter_Liquid_Cooled;

          partial model High_Voltage_Battery

          replaceable package Transported_Fluid =
                C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant;

            parameter Modelica.Thermal.FluidHeatFlow.Media.Medium adapterMedium=Modelica.Thermal.FluidHeatFlow.Media.Water()
            "Medium in the component"
              annotation(__Dymola_choicesAllMatching=true);

            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  Transported_Fluid)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-90,90},{-70,110}})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  Transported_Fluid)
            "Port that nominally flows fluid out of the container"
              annotation (Placement(transformation(extent={{-50,90},{-30,110}})));
            C2M2L_Ext.Electrical.Interfaces.Battery_Bus
                                              battery_Bus
              annotation (Placement(transformation(extent={{-10,90},{10,110}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{90,-10},{110,10}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=adapterMedium, redeclare package Medium =
                  Transported_Fluid)                                                     annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-80,78})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                redeclare package Medium = Transported_Fluid, HeatFlowMedium=
                  adapterMedium)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-40,78})));
          equation
            connect(fluid_in, fluidAdaptor.fluid_port) annotation (Line(
                points={{-80,100},{-80,88}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluid_out, fluidAdaptor1.fluid_port) annotation (Line(
                points={{-40,100},{-40,88}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end High_Voltage_Battery;

          partial model Integrated_Starter_Generator

          replaceable package Transported_Fluid =
                Modelica.Media.Air.DryAirNasa;

            parameter Modelica.Thermal.FluidHeatFlow.Media.Medium adapterMedium=Modelica.Thermal.FluidHeatFlow.Media.Water()
            "Medium in the component"
              annotation(__Dymola_choicesAllMatching=true);

            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-110,30},{-90,50}})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  Transported_Fluid)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-90,90},{-70,110}})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  Transported_Fluid)
            "Port that nominally flows fluid out of the container"
              annotation (Placement(transformation(extent={{-50,90},{-30,110}})));
              C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus                                                             electric_Machine_Bus
              annotation (Placement(transformation(extent={{-10,90},{10,110}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{90,30},{110,50}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=adapterMedium, redeclare package Medium =
                  Transported_Fluid)                                                     annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-80,80})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                redeclare package Medium = Transported_Fluid, HeatFlowMedium=
                  adapterMedium)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-40,80})));
            outer Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{60,-80},{80,-60}})));
          equation
            connect(fluidAdaptor.fluid_port, fluid_in) annotation (Line(
                points={{-80,90},{-80,100}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{-40,90},{-40,100}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end Integrated_Starter_Generator;

          partial model Inverter

          replaceable package Transported_Fluid =
                C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant;

            parameter Modelica.Thermal.FluidHeatFlow.Media.Medium adapterMedium=Modelica.Thermal.FluidHeatFlow.Media.Water()
            "Medium in the component"
              annotation(__Dymola_choicesAllMatching=true);

            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p_supply
              annotation (Placement(transformation(extent={{-110,-50},{-90,-30}})));
            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-110,30},{-90,50}})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  Transported_Fluid)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-90,90},{-70,110}})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  Transported_Fluid)
            "Port that nominally flows fluid out of the container"
              annotation (Placement(transformation(extent={{-50,90},{-30,110}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{90,30},{110,50}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n_supply
              annotation (Placement(transformation(extent={{90,-50},{110,-30}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=adapterMedium, redeclare package Medium =
                  Transported_Fluid)                                                     annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-80,80})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                redeclare package Medium = Transported_Fluid, HeatFlowMedium=
                  adapterMedium)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-40,80})));
          equation
            connect(fluidAdaptor.fluid_port, fluid_in) annotation (Line(
                points={{-80,90},{-80,100}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{-40,90},{-40,100}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end Inverter;

          partial model Traction_Motor_Liquid_Cooled

          replaceable package Transported_Fluid =
                C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant;

            parameter Modelica.Thermal.FluidHeatFlow.Media.Medium adapterMedium=Modelica.Thermal.FluidHeatFlow.Media.Water()
            "Medium in the component"
              annotation(__Dymola_choicesAllMatching=true);

            Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                includeBearingConnector=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-110,30},{-90,50}})));
            Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
              Medium =
                  Transported_Fluid)
            "Port that nominally flows fluid into the container"
              annotation (Placement(transformation(extent={{-90,90},{-70,110}})));
            Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
              Medium =
                  Transported_Fluid)
            "Port that nominally flows fluid out of the container"
              annotation (Placement(transformation(extent={{-50,90},{-30,110}})));
            C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus
                                                       electric_Machine_Bus
              annotation (Placement(transformation(extent={{-10,90},{10,110}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{90,30},{110,50}})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                HeatFlowMedium=adapterMedium, redeclare package Medium =
                  Transported_Fluid)                                                     annotation (
                Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-80,78})));
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                redeclare package Medium = Transported_Fluid, HeatFlowMedium=
                  adapterMedium)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=90,
                  origin={-40,80})));
            outer Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=world.driveTrainMechanics3D)
              annotation (Placement(transformation(extent={{60,-100},{80,-80}})));
          equation
            connect(fluidAdaptor.fluid_port, fluid_in) annotation (Line(
                points={{-80,88},{-80,100}},
                color={0,127,255},
                smooth=Smooth.None));
            connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
                points={{-40,90},{-40,90},{-40,100}},
                color={0,127,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end Traction_Motor_Liquid_Cooled;
        end Interfaces;

        model Inverter_Liquid_Cooled
          extends Interfaces.Inverter;
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at"
            annotation (Dialog(tab="Electrical Model"));
          parameter Real eff=1 "Converter efficiency"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Voltage v_targ=200 "Target voltage on the output side"
              annotation (Dialog(tab="Electrical Model"));
          parameter SI.Voltage v_cutoff=100
          "Minimum allowed voltage on the input side"
              annotation (Dialog(tab="Electrical Model"));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=Modelica.Thermal.FluidHeatFlow.Media.Water()
          "Medium in the component"
            annotation(__Dymola_choicesAllMatching=true);
          parameter Real effectiveness_nom=0.7
          "Nominal effectiveness of the cooling passages"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Power cooling_Q_nom=1000
          "Nominal amount of heat rejection required"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Temperature T_inlet_nom=323.15
          "Nominal fluid inlet temperature"                                            annotation (Dialog(tab="Fluid Model"));
          parameter SI.VolumeFlowRate V_dot_nom=0.001
          "Nominal volume flow rate of fluid"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Pressure dp_nom=2000
          "Nominal pressure drop at V_dot_nom"                                  annotation (Dialog(tab="Fluid Model"));

          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Inverter_Liquid_Cooled
            inverter_Liquid_Cooled(
            v_nom=v_nom,
            eff=eff,
            v_targ=v_targ,
            v_cutoff=v_cutoff,
            medium=medium,
            effectiveness_nom=effectiveness_nom,
            cooling_Q_nom=cooling_Q_nom,
            T_inlet_nom=T_inlet_nom,
            V_dot_nom=V_dot_nom,
            dp_nom=dp_nom)
            annotation (Placement(transformation(extent={{-20,-16},{20,32}})));
        equation
          connect(inverter_Liquid_Cooled.pin_p, pin_p) annotation (Line(
              points={{-20,20},{-60,20},{-60,40},{-100,40}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(inverter_Liquid_Cooled.pin_p_supply, pin_p_supply) annotation (Line(
              points={{-20,-4},{-60,-4},{-60,-40},{-100,-40}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(inverter_Liquid_Cooled.pin_n, pin_n) annotation (Line(
              points={{20,20},{60,20},{60,40},{100,40}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(inverter_Liquid_Cooled.pin_n_supply, pin_n_supply) annotation (Line(
              points={{20,-4},{62,-4},{62,-40},{100,-40}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(inverter_Liquid_Cooled.fluid_in, fluidAdaptor.fluidHeatflow_port)
            annotation (Line(
              points={{-16,32},{-16,52},{-80,52},{-80,70}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(inverter_Liquid_Cooled.fluid_out, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{-8,32},{-8,60},{-40,60},{-40,70}},
              color={255,0,0},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Inverter_Liquid_Cooled;

        model Traction_Motor_Liquid_Cooled
          extends Interfaces.Traction_Motor_Liquid_Cooled;
          parameter SI.Inertia rotating_inertia = 0.1
          "Moment of inertia of device around its axis of rotation";
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Power pow_max=100000 "Maximum input power at v_nom"
          annotation (Dialog(tab="Electrical Model"));
          parameter SI.Torque trq_max=100 "Maximum output torque"
          annotation (Dialog(tab="Electrical Model"));
          parameter Real efficiency=0.95
          "Efficiency of electrical to mechanical conversion"
            annotation (Dialog(tab="Electrical Model"));
          parameter Modelica.Thermal.FluidHeatFlow.Media.Medium medium=Modelica.Thermal.FluidHeatFlow.Media.Water()
          "Medium in the component"
            annotation(__Dymola_choicesAllMatching=true);
          parameter Real effectiveness_nom=0.7
          "Nominal effectiveness of the cooling passages"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Power cooling_Q_nom=1000
          "Nominal amount of heat rejection required"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Temperature T_inlet_nom=323.15
          "Nominal fluid inlet temperature"                                            annotation (Dialog(tab="Fluid Model"));
          parameter SI.VolumeFlowRate V_dot_nom=0.001
          "Nominal volume flow rate of fluid"  annotation (Dialog(tab="Fluid Model"));
          parameter SI.Pressure dp_nom=2000
          "Nominal pressure drop at V_dot_nom"                                  annotation (Dialog(tab="Fluid Model"));
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Electrical_System.Hybrid_Drive_Systems.Traction_Motor_Liquid_Cooled
            traction_Motor_Liquid_Cooled(
            useSupport=useSupport,
            rotating_inertia=rotating_inertia,
            v_nom=v_nom,
            pow_max=pow_max,
            trq_max=trq_max,
            efficiency=efficiency,
            medium=medium,
            effectiveness_nom=effectiveness_nom,
            cooling_Q_nom=cooling_Q_nom,
            T_inlet_nom=T_inlet_nom,
            V_dot_nom=V_dot_nom,
            dp_nom=dp_nom,
            v_max=v_max,
            trq_nom=trq_nom,
            temp_max=temp_max)
            annotation (Placement(transformation(extent={{-20,-24},{20,24}})));
          parameter Boolean useSupport=false
          "= true, if support flange enabled, otherwise implicitly grounded";
          parameter SI.Voltage v_max=250
          "Maximum voltage at which data was generated"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Torque trq_nom=50 "Nominal output torque"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Temperature temp_max=373.15 "Maximum device temp"
            annotation (Dialog(tab="Electrical Model"));
        equation
          connect(brg_01.flange, traction_Motor_Liquid_Cooled.brg_01) annotation (Line(
              points={{-100,0},{-20,0}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(pin_p, traction_Motor_Liquid_Cooled.pin_p) annotation (Line(
              points={{-100,40},{-62,40},{-62,12},{-20,12}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(pin_n, traction_Motor_Liquid_Cooled.pin_n) annotation (Line(
              points={{100,40},{60,40},{60,12},{20,12}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(fluidAdaptor.fluidHeatflow_port, traction_Motor_Liquid_Cooled.fluid_in)
            annotation (Line(
              points={{-80,68},{-80,48},{-16,48},{-16,24}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(traction_Motor_Liquid_Cooled.fluid_out, fluidAdaptor1.fluidHeatflow_port)
            annotation (Line(
              points={{-8,24},{-10,24},{-10,60},{-40,60},{-40,70}},
              color={255,0,0},
              smooth=Smooth.None));
          connect(traction_Motor_Liquid_Cooled.demand, electric_Machine_Bus.demand)
            annotation (Line(
              points={{-4,24.8},{-4,80},{0,80},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(traction_Motor_Liquid_Cooled.tau, electric_Machine_Bus.tau)
            annotation (Line(
              points={{20.6,8},{24,8},{24,40},{0,40},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(traction_Motor_Liquid_Cooled.w, electric_Machine_Bus.w) annotation (
              Line(
              points={{20.6,4},{28,4},{28,44},{0,44},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(traction_Motor_Liquid_Cooled.i, electric_Machine_Bus.i) annotation (
              Line(
              points={{20.6,0},{32,0},{32,48},{0,48},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(traction_Motor_Liquid_Cooled.v, electric_Machine_Bus.v) annotation (
              Line(
              points={{20.6,-4},{36,-4},{36,52},{0,52},{0,100}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          annotation (Diagram(graphics));
        end Traction_Motor_Liquid_Cooled;
      end Hybrid_Drive_Systems;

      package Starting_Systems
      "Components that support starting the vehicle prime mover"
      extends Modelica.Icons.Package;

        package Interfaces
        extends Modelica.Icons.InterfacesPackage;
          partial model Lead_Acid_Battery
          extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Interfaces.Lead_Acid_Battery_Cyber;
          extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Interfaces.Lead_Acid_Battery_Electrical;
          extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Interfaces.Lead_Acid_Battery_Fluid;
            annotation (Diagram(coordinateSystem(preserveAspectRatio=false,extent={{-200,
                      -180},{200,180}}), graphics), Icon(coordinateSystem(extent={{-200,
                      -180},{200,180}}),                 graphics={
                  Line(
                    points={{200,120},{78,120},{78,88}},
                    color={0,0,255},
                    smooth=Smooth.None),
                  Line(
                    points={{-198,120},{-76,120},{-76,88}},
                    color={0,0,255},
                    smooth=Smooth.None),
                  Rectangle(
                    extent={{-101,100},{101,-100}},
                    lineColor={95,95,95},
                    fillColor={175,175,175},
                    fillPattern=FillPattern.HorizontalCylinder,
                    origin={4,1},
                    rotation=180),
                  Text(
                    extent={{-62.5,20.5},{62.5,-20.5}},
                    lineColor={255,0,0},
                    origin={-0.5,-64.5},
                    rotation=360,
                    textString="Battery"),
                  Text(
                    extent={{-42,39},{42,-39}},
                    lineColor={0,0,0},
                    textString="-",
                    origin={84,67},
                    rotation=180),
                  Text(
                    extent={{-118,102},{-34,24}},
                    lineColor={255,0,0},
                    textString="+")}));
          end Lead_Acid_Battery;

          partial model Lead_Acid_Battery_Cyber

            C2M2L_Ext.Electrical.Interfaces.Battery_Bus
                                              battery_Bus
              annotation (Placement(transformation(extent={{-28,152},{32,208}})));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -320},{200,280}}), graphics), Icon);
          end Lead_Acid_Battery_Cyber;

          partial model Lead_Acid_Battery_Electrical

            Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
              annotation (Placement(transformation(extent={{-210,-8},{-190,12}})));
            Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
              annotation (Placement(transformation(extent={{190,-8},{210,12}})));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -320},{200,280}}), graphics), Icon);
          end Lead_Acid_Battery_Electrical;

          partial model Lead_Acid_Battery_Fluid

            inner
            C2M2L_OM.MSL_Extend.Environments.Lumped_Thermal_Fixed_HTC_Infinite       env
              annotation (Placement(transformation(extent={{180,160},{200,180}})));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=false,extent={{-200,
                      -320},{200,280}}), graphics), Icon);
          end Lead_Acid_Battery_Fluid;
        end Interfaces;

        model Lead_Acid_Battery
          extends Interfaces.Lead_Acid_Battery;
          C2M2L_OM.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
            lead_Acid_Battery(
            v_nom=v_nom,
            R_batt=R_batt,
            T_ref=T_ref,
            mass_batt=mass_batt,
            R_thermal=R_thermal,
            cp_batt=cp_batt,
            T_start=T_start,
            soc_init=soc_init,
            heat_transfer_area=heat_transfer_area,
            e_max=e_max,
            q_max=q_max)
            annotation (Placement(transformation(extent={{-12,-20},{8,0}})));
          parameter SI.Voltage v_nom=24
          "Nominal voltage that device is intended to operate at"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Resistance R_batt=0.001
          "Battery internal resistance (Ohm)"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Temperature T_ref=293.15
          "Reference temperature for battery operation"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Mass mass_batt=5 "Thermal mass of battery"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.ThermalResistance R_thermal=0.01
          "Battery thermal resistance"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.SpecificHeatCapacity cp_batt=1000
          "Specific heat of battery"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Temperature T_start=293.15
          "Start temperature of battery"
            annotation (Dialog(tab="Electrical Model"));
          parameter Real soc_init=0.6 "Initial state of charge (0 - 1)"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Voltage e_max=28 "Maximum battery voltage"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Charge q_max=10000 "Maximum capacity"
            annotation (Dialog(tab="Electrical Model"));
          parameter SI.Area heat_transfer_area=1.0
          "Area available for heat to transfer through case"
            annotation (Dialog(tab="Thermal Model"));
        equation
          connect(pin_p, lead_Acid_Battery.pin_p) annotation (Line(
              points={{-200,2},{-22,2}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(lead_Acid_Battery.pin_n, pin_n) annotation (Line(
              points={{18,2},{200,2}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(lead_Acid_Battery.i, battery_Bus.i) annotation (Line(
              points={{-4,10.6},{-4,140},{2,140},{2,180}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(lead_Acid_Battery.v, battery_Bus.v) annotation (Line(
              points={{-2,10.6},{-2,134},{2,134},{2,180}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(lead_Acid_Battery.Temp, battery_Bus.T) annotation (Line(
              points={{0,10.6},{0,180},{2,180}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          connect(lead_Acid_Battery.soc, battery_Bus.soc) annotation (Line(
              points={{2,10.6},{2,180}},
              color={0,0,127},
              smooth=Smooth.None), Text(
              string="%second",
              index=1,
              extent={{6,3},{6,3}}));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,-180},
                    {200,180}}), graphics), Icon(coordinateSystem(extent={{-200,-180},{200,
                    180}})));
        end Lead_Acid_Battery;

        package Tests
        extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;
          model Test_Lead_Acid_Battery
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{34,-34},{46,-22}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-58,-46},{-38,-26}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            TestComponents.BatteryDischarge batteryDischarge
              annotation (Placement(transformation(extent={{-10,46},{10,66}})));
            Lead_Acid_Battery lead_Acid_Battery(
              v_nom=12,
              soc_init=1,
              e_max=14,
              q_max=80000)
              annotation (Placement(transformation(extent={{-20,-20},{20,16}})));
          equation

            connect(lead_Acid_Battery.battery_Bus, batteryDischarge.battery_Bus)
              annotation (Line(
                points={{0.2,16},{0,16},{0,46}},
                color={64,64,160},
                thickness=0.5,
                smooth=Smooth.None));
            connect(batteryDischarge.toNegativeBatteryTerminal, lead_Acid_Battery.pin_n)
              annotation (Line(
                points={{10,56},{40,56},{40,-1.8},{20,-1.8}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(batteryDischarge.toPositiveBatteryTerminal, lead_Acid_Battery.pin_p)
              annotation (Line(
                points={{-10,56},{-40,56},{-40,-1.8},{-20,-1.8}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(lead_Acid_Battery.pin_n, ground.p) annotation (Line(
                points={{20,-1.8},{34,-1.8},{34,-2},{40,-2},{40,-22}},
                color={0,0,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=1000),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Lead_Acid_Battery_plot_script.mos"));
          end Test_Lead_Acid_Battery;

          model Test_Lead_Acid_Battery_original
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            Modelica.Electrical.Analog.Basic.Resistor discharge_load(useHeatPort=false, R=0.1)
                                                                     annotation (
                Placement(transformation(
                  extent={{-7,-7},{7,7}},
                  rotation=180,
                  origin={7,-1})));
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{-2,-88},{10,-76}})));
            C2M2L_Ext.Electrical.Interfaces.Battery_Bus
                                      battery_Bus
              annotation (Placement(transformation(extent={{82,-18},{102,2}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
            Modelica.Electrical.Analog.Ideal.IdealCommutingSwitch    switch_mode
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=0,
                  origin={-4,32})));
            Modelica.Blocks.Logical.Hysteresis hysteresis(
              pre_y_start=false,
              uHigh=0.75,
              uLow=0.01)
              annotation (Placement(transformation(extent={{82,40},{62,60}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage charging_source(V=18)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=180,
                  origin={40,-18})));
            Modelica.Electrical.Analog.Basic.Resistor charging_current_limiter(
                useHeatPort=false, R=0.005)                          annotation (
                Placement(transformation(
                  extent={{-7,-7},{7,7}},
                  rotation=180,
                  origin={9,-19})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
              lead_Acid_Battery(soc_init=1) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
              annotation (Placement(transformation(extent={{-62,-92},{-22,-32}})));
          equation

            connect(battery_Bus.soc,hysteresis. u) annotation (Line(
                points={{92,-8},{92,50},{84,50}},
                color={221,221,0},
                smooth=Smooth.None,
                thickness=0.5), Text(
                string="%first",
                index=-1,
                extent={{-6,3},{-6,3}}));
            connect(switch_mode.n1, charging_source.p) annotation (Line(
                points={{6,37},{50,37},{50,-18}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(switch_mode.n2, discharge_load.p) annotation (Line(
                points={{6,32},{34,32},{34,-1},{14,-1}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(hysteresis.y,switch_mode. control) annotation (Line(
                points={{61,50},{-4,50},{-4,40}},
                color={255,0,255},
                smooth=Smooth.None));
            connect(charging_current_limiter.p,charging_source. n) annotation (Line(
                points={{16,-19},{24,-19},{24,-18},{30,-18}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(charging_current_limiter.n, ground.p) annotation (Line(
                points={{2,-19},{-4,-19},{-4,-20},{-10,-20},{-10,-48},{4,-48},{4,-76}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(switch_mode.p, lead_Acid_Battery.pin_p) annotation (Line(
                points={{-14,32},{-44,32},{-44,34},{-78,34},{-78,-48},{-62,-48}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(lead_Acid_Battery.pin_n, ground.p) annotation (Line(
                points={{-22,-48},{4,-48},{4,-76}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(discharge_load.n, ground.p) annotation (Line(
                points={{-8.88178e-016,-1},{-10,-1},{-10,-48},{4,-48},{4,-76}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(lead_Acid_Battery.battery_Bus, battery_Bus) annotation (Line(
                points={{-42,-40.2},{-42,-30},{92,-30},{92,-8}},
                color={64,64,160},
                thickness=0.5,
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            connect(world.frame_b, lead_Acid_Battery.origin) annotation (Line(
                points={{-80,-90},{-42,-90},{-42,-80}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=1000),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Lead_Acid_Battery_plot_script.mos"));
          end Test_Lead_Acid_Battery_original;

          model Test_Lead_Acid_Battery_ricardo
            extends C2M2L_Ext.Icons.Simple_Test_Case;
            Modelica.Electrical.Analog.Basic.Ground ground
              annotation (Placement(transformation(extent={{40,-34},{52,-22}})));
            inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
              annotation (Placement(transformation(extent={{-58,-46},{-38,-26}})));
            inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
              annotation (Placement(transformation(extent={{80,80},{100,100}})));
            replaceable
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
              lead_Acid_Battery(soc_init=1) constrainedby
            C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
              annotation (Placement(transformation(extent={{-18,-38},{22,22}})));
            TestComponents.BatteryDischarge batteryDischarge
              annotation (Placement(transformation(extent={{-10,46},{10,66}})));
          equation

            connect(lead_Acid_Battery.pin_n, ground.p) annotation (Line(
                points={{22,6},{46,6},{46,-22}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(world.frame_b, lead_Acid_Battery.origin) annotation (Line(
                points={{-38,-36},{2,-36},{2,-26}},
                color={95,95,95},
                thickness=0.5,
                smooth=Smooth.None));
            connect(batteryDischarge.toNegativeBatteryTerminal, lead_Acid_Battery.pin_n)
              annotation (Line(
                points={{10,56},{40,56},{40,6},{22,6}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(batteryDischarge.toPositiveBatteryTerminal, lead_Acid_Battery.pin_p)
              annotation (Line(
                points={{-10,56},{-40,56},{-40,6},{-18,6}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(batteryDischarge.battery_Bus, lead_Acid_Battery.battery_Bus)
              annotation (Line(
                points={{0,46},{0,13.8},{2,13.8}},
                color={64,64,160},
                thickness=0.5,
                smooth=Smooth.None));
            annotation (Diagram(graphics),
              experiment(StopTime=1000),
              __Dymola_experimentSetupOutput,
              Commands(file="Scripts/Lead_Acid_Battery_plot_script.mos"));
          end Test_Lead_Acid_Battery_ricardo;
        end Tests;

        package TestComponents
          extends Modelica.Icons.Package;
          model BatteryDischarge

            Modelica.Electrical.Analog.Basic.Resistor discharge_load(useHeatPort=false, R=0.1)
                                                                     annotation (
                Placement(transformation(
                  extent={{-7,-7},{7,7}},
                  rotation=180,
                  origin={17,9})));
            Modelica.Electrical.Analog.Ideal.IdealCommutingSwitch    switch_mode
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=0,
                  origin={6,42})));
            Modelica.Blocks.Logical.Hysteresis hysteresis(
              pre_y_start=false,
              uHigh=0.75,
              uLow=0.01)
              annotation (Placement(transformation(extent={{40,60},{20,80}})));
            Modelica.Electrical.Analog.Sources.ConstantVoltage charging_source(V=18)
              annotation (Placement(transformation(
                  extent={{-10,-10},{10,10}},
                  rotation=180,
                  origin={50,-20})));
            Modelica.Electrical.Analog.Basic.Resistor charging_current_limiter(
                useHeatPort=false, R=0.005)                          annotation (
                Placement(transformation(
                  extent={{-7,-7},{7,7}},
                  rotation=180,
                  origin={17,-19})));
            C2M2L_Ext.Electrical.Interfaces.Battery_Bus
                                      battery_Bus
              annotation (Placement(transformation(extent={{-10,-110},{10,-90}})));
            Modelica.Electrical.Analog.Interfaces.PositivePin toPositiveBatteryTerminal
                                     annotation (Placement(transformation(extent={{-110,
                      -10},{-90,10}}, rotation=0)));
            Modelica.Electrical.Analog.Interfaces.NegativePin toNegativeBatteryTerminal
            "Negative pin"               annotation (Placement(transformation(extent={{110,-10},
                      {90,10}},          rotation=0)));
          equation
            connect(switch_mode.n1,charging_source. p) annotation (Line(
                points={{16,47},{60,47},{60,-20}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(switch_mode.n2,discharge_load. p) annotation (Line(
                points={{16,42},{44,42},{44,9},{24,9}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(hysteresis.y,switch_mode. control) annotation (Line(
                points={{19,70},{6,70},{6,50}},
                color={255,0,255},
                smooth=Smooth.None));
            connect(charging_current_limiter.p,charging_source. n) annotation (Line(
                points={{24,-19},{34,-19},{34,-20},{40,-20}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(switch_mode.p, toPositiveBatteryTerminal) annotation (Line(
                points={{-4,42},{-52,42},{-52,0},{-100,0}},
                color={0,0,255},
                smooth=Smooth.None));
            connect(battery_Bus.soc, hysteresis.u) annotation (Line(
                points={{0,-100},{0,-78},{70,-78},{70,70},{42,70}},
                color={64,64,160},
                thickness=0.5,
                smooth=Smooth.None), Text(
                string="%first",
                index=-1,
                extent={{-6,3},{-6,3}}));
            connect(charging_current_limiter.n, toNegativeBatteryTerminal) annotation (
                Line(
                points={{10,-19},{6,-19},{6,-20},{0,-20},{0,-40},{82,-40},{82,0},{100,0}},
                color={0,0,255},
                smooth=Smooth.None));

            connect(discharge_load.n, toNegativeBatteryTerminal) annotation (Line(
                points={{10,9},{6,9},{6,8},{0,8},{0,-40},{82,-40},{82,0},{100,0}},
                color={0,0,255},
                smooth=Smooth.None));
            annotation (Diagram(graphics));
          end BatteryDischarge;
        end TestComponents;
      end Starting_Systems;
    end Electrical_System;

    package Fuel_System
      extends Modelica.Icons.Package;

      model Fuel_Filter
      extends
        C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Fuel_System.Interfaces.Fuel_Filter;
        C2M2L_OM.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Filter
          fuel_Filter(dp_nominal=dp_nominal, m_flow_nominal=m_flow_nominal)
          annotation (Placement(transformation(extent={{-50,-98},{48,50}})));
        parameter SI.Pressure dp_nominal;
        parameter Modelica.Media.Interfaces.PartialMedium.MassFlowRate m_flow_nominal
        "Nominal mass flowrate";
      equation
        connect(fluidAdaptor.fluidHeatflow_port, fuel_Filter.fluid_in) annotation (
            Line(
            points={{-118,-40},{-84,-40},{-84,-38.8},{-50,-38.8}},
            color={255,0,0},
            smooth=Smooth.None));
        connect(fuel_Filter.fluid_out, fluidAdaptor1.fluidHeatflow_port) annotation (
            Line(
            points={{48.49,-38.8},{84.245,-38.8},{84.245,-40},{118,-40}},
            color={255,0,0},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                  -320},{200,280}}), graphics));
      end Fuel_Filter;

      model Fuel_Pump "Fuel Pump"
        extends
        C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Fuel_System.Interfaces.Fuel_Pump;
        C2M2L_OM.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Pump
          fuel_Pump(
          medium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
          useSupport=false,
          consider_gyroscopic_effects=consider_gyroscopic_effects,
          N_ref=N_ref,
          N_switch=N_switch,
          rotating_inertia=rotating_inertia,
          efficiency_characteristic=efficiency_characteristic,
          flow_characteristic=flow_characteristic,
          pow_max=pow_max,
          trq_max=trq_max,
          v_nom=v_nom)
          annotation (Placement(transformation(extent={{-54,-40},{60,122}})));
        parameter Boolean useSupport=false
        "= true, if support flange enabled, otherwise implicitly grounded";
        parameter Boolean consider_gyroscopic_effects=false
        "if true, take into account gyroscopic reaction forces";
        parameter SI.AngularVelocity N_ref=500
        "Rotational speed at which flow versus pressure data is provided";
        parameter SI.AngularVelocity N_switch=N_ref*0.01
        "Rotational speed below which flow no longer follows scaling laws";
        parameter SI.Inertia rotating_inertia=1
        "Moment of inertia of device around its axis of rotation";
        parameter Real efficiency_characteristic[:,:]=fill(
            0.0,
            0,
            2) "Table with efficiency vs. volume flow rate(m3/s) at N_ref";
        parameter Real flow_characteristic[:,:]=fill(
            0.0,
            0,
            2)
        "Table with volume flow rate[m3] and pressure rise[pa] columns at N_ref";
        parameter SI.Power pow_max=100000;
        parameter SI.Torque trq_max=100 "Maximum output torque";
        parameter SI.Voltage v_nom=24
        "Nominal voltage that device is intended to operate at";
      equation
        connect(fluidAdaptor.fluidHeatflow_port, fuel_Pump.flowPort_a) annotation (
            Line(
            points={{-120,-16},{-86,-16},{-86,24.8},{-54,24.8}},
            color={255,0,0},
            smooth=Smooth.None));
        connect(fuel_Pump.flowPort_b, fluidAdaptor1.fluidHeatflow_port) annotation (
            Line(
            points={{60,24.8},{90,24.8},{90,-16},{116,-16}},
            color={255,0,0},
            smooth=Smooth.None));
        connect(pin_p, fuel_Pump.pin_p1) annotation (Line(
            points={{-200,116},{-128,116},{-128,78.8},{-54,78.8}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(fuel_Pump.pin_n1, pin_n) annotation (Line(
            points={{60,78.8},{132,78.8},{132,116},{200,116}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(fuel_Pump.demand, electric_Machine_Bus.demand) annotation (Line(
            points={{-19.23,124.16},{-19.23,202.08},{0,202.08},{0,279}},
            color={0,0,127},
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(fuel_Pump.tau, electric_Machine_Bus.tau) annotation (Line(
            points={{-2.13,123.62},{-2.13,203.81},{0,203.81},{0,279}},
            color={0,0,127},
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(fuel_Pump.w, electric_Machine_Bus.w) annotation (Line(
            points={{9.27,123.62},{9.27,202.81},{0,202.81},{0,279}},
            color={0,0,127},
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(fuel_Pump.i, electric_Machine_Bus.i) annotation (Line(
            points={{20.67,123.62},{20.67,201.81},{0,201.81},{0,279}},
            color={0,0,127},
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(fuel_Pump.v, electric_Machine_Bus.v) annotation (Line(
            points={{32.07,123.62},{32.07,202},{0,202},{0,279}},
            color={0,0,127},
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                  -320},{200,280}}), graphics));
      end Fuel_Pump;

      model Fuel_Pump_1_Fluid_Interfaces "Fuel Pump"
        extends
        C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Pumps_And_Fans.TwoPortFlowDevice;

        parameter SI.Power pow_max=100000;
        parameter SI.Torque trq_max=100 "Maximum output torque";
        parameter SI.Voltage v_nom=24
        "Nominal voltage that device is intended to operate at"
          annotation (Dialog(tab="Electrical Model"));

        Modelica.Blocks.Interfaces.RealInput demand annotation (Placement(
              transformation(
              extent={{-20,-20},{20,20}},
              rotation=270,
              origin={-78,288})));
        Modelica.Blocks.Interfaces.RealOutput tau annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={-18,286})));
        Modelica.Blocks.Interfaces.RealOutput w annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={22,286})));
        Modelica.Blocks.Interfaces.RealOutput i annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={62,286})));
        Modelica.Blocks.Interfaces.RealOutput v annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={102,286})));
        C2M2L_OM.MSL_Extend.Electrical.Electric_Machines.Electric_Motor electric_Motor1(
          use_heat_port=false,
          v_nom=v_nom,
          pow_max=pow_max,
          trq_max=trq_max)
          annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=90,
              origin={-98,150})));
        Modelica.Electrical.Analog.Interfaces.NegativePin pin_n1
          annotation (Placement(transformation(extent={{190,110},{210,130}})));
        Modelica.Electrical.Analog.Interfaces.PositivePin pin_p1
          annotation (Placement(transformation(extent={{-210,110},{-190,130}})));
        C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
            HeatFlowMedium=medium,
            redeclare package Medium =
              C2M2L_Ext.Media.Incompressible.Constant_Property_JP8) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={-200,-110})));
        Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package Medium
          =   C2M2L_Ext.Media.Incompressible.Constant_Property_JP8)
          annotation (Placement(transformation(extent={{-270,-170},{-214,-116}})));
        C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
           HeatFlowMedium=medium,
            redeclare package Medium =
              C2M2L_Ext.Media.Incompressible.Constant_Property_JP8) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={196,-110})));
        Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
          Medium =
              C2M2L_Ext.Media.Incompressible.Constant_Property_JP8)
          annotation (Placement(transformation(extent={{208,-164},{266,-108}})));
      equation

        connect(electric_Motor1.v, v)
                                     annotation (Line(
            points={{-119.2,143.6},{-126,143.6},{-126,198},{102,198},{102,286}},
            color={0,0,127},
            smooth=Smooth.None));
        connect(electric_Motor1.i, i)
                                     annotation (Line(
            points={{-119.2,136.4},{-130,136.4},{-130,204},{62,204},{62,286}},
            color={0,0,127},
            smooth=Smooth.None));
        connect(electric_Motor1.w, w)
                                     annotation (Line(
            points={{-113.6,128.8},{-134,128.8},{-134,210},{22,210},{22,286}},
            color={0,0,127},
            smooth=Smooth.None));
        connect(electric_Motor1.tau, tau)
                                         annotation (Line(
            points={{-109.2,128.8},{-109.2,116},{-144,116},{-144,214},{-18,214},{-18,286}},
            color={0,0,127},
            smooth=Smooth.None));
        connect(electric_Motor1.demand, demand)
                                               annotation (Line(
            points={{-104,128.8},{-104,102},{-150,102},{-150,228},{-78,228},{-78,288}},
            color={0,0,127},
            smooth=Smooth.None));
        connect(electric_Motor1.p, pin_p1)
                                         annotation (Line(
            points={{-114,150},{-156,150},{-156,120},{-200,120}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(pin_n1, electric_Motor1.n)
                                         annotation (Line(
            points={{200,120},{62,120},{62,150},{-82,150}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(electric_Motor1.support, internalSupport) annotation (Line(
            points={{-98,170},{-98,182},{28,182},{28,-120},{0,-120},{0,-140}},
            color={0,0,0},
            smooth=Smooth.None));
        connect(flow_device.flange, electric_Motor1.flange) annotation (Line(
            points={{-1.22465e-015,80},{-1.22465e-015,66},{-98,66},{-98,130}},
            color={0,0,0},
            smooth=Smooth.None));
        connect(fluidAdaptor.fluid_port, fluid_in) annotation (Line(
            points={{-200,-120},{-200,-143},{-242,-143}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(flowPort_a, fluidAdaptor.fluidHeatflow_port) annotation (Line(
            points={{-200,-80},{-200,-100}},
            color={255,0,0},
            smooth=Smooth.None));
        connect(fluidAdaptor1.fluid_port, fluid_out) annotation (Line(
            points={{196,-120},{196,-136},{237,-136}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(fluidAdaptor1.fluidHeatflow_port, flowPort_b) annotation (Line(
            points={{196,-100},{198,-100},{198,-80},{200,-80}},
            color={255,0,0},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,-320},
                  {200,280}}),       graphics), Icon(coordinateSystem(
                preserveAspectRatio=false,extent={{-200,-320},{200,280}}), graphics={
              Polygon(
                points={{38,-40},{78,-55},{38,-70},{38,-40}},
                lineColor={0,128,255},
                smooth=Smooth.None,
                fillColor={0,128,255},
                fillPattern=FillPattern.Solid,
                visible=showDesignFlowDirection),
              Polygon(
                points={{38,-45},{68,-55},{38,-65},{38,-45}},
                lineColor={255,255,255},
                smooth=Smooth.None,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                visible=allowFlowReversal),
              Line(
                points={{73,-55},{-42,-55}},
                color={0,128,255},
                smooth=Smooth.None,
                visible=showDesignFlowDirection),
              Ellipse(
                extent={{-114,106},{112,-126}},
                lineColor={0,0,0},
                fillColor={0,128,255},
                fillPattern=FillPattern.Solid),
              Line(
                points={{-8,92},{-48,10},{32,-30},{4,-106}},
                color={255,255,255},
                smooth=Smooth.Bezier),
              Line(
                points={{96,-4},{12,34},{-28,-46},{-94,-28}},
                color={255,255,255},
                smooth=Smooth.Bezier),
              Line(
                points={{60,64},{-20,42},{6,-46},{-62,-86}},
                color={255,255,255},
                smooth=Smooth.Bezier),
              Ellipse(
                extent={{-30,18},{30,-42}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),
              Line(
                points={{53,71},{-15,43},{17,-45},{-77,-73}},
                color={255,255,255},
                smooth=Smooth.Bezier,
                origin={-5,-11},
                rotation=90),
              Line(
                points={{-202,-80},{-172,-80},{-172,14},{-146,14}},
                color={0,0,0},
                smooth=Smooth.None),
              Polygon(
                points={{-188,-154},{-188,-174},{-132,-174},{-132,-186},{-114,-164},{
                    -132,-142},{-132,-154},{-188,-154}},
                lineColor={0,0,0},
                smooth=Smooth.None,
                fillColor={0,128,255},
                fillPattern=FillPattern.Solid),
              Polygon(
                points={{118,-156},{118,-176},{174,-176},{174,-188},{192,-166},{174,
                    -144},{174,-156},{118,-156}},
                lineColor={0,0,0},
                smooth=Smooth.None,
                fillColor={0,128,255},
                fillPattern=FillPattern.Solid),
              Line(
                points={{146,6},{174,6},{174,-82},{200,-82}},
                color={0,0,0},
                smooth=Smooth.None),
              Ellipse(extent={{-148,138},{146,-156}},
                                                  lineColor={0,0,0})}));
      end Fuel_Pump_1_Fluid_Interfaces;

      model Fuel_Tank "Parametric cuboid fuel tank model "
      extends
        C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Fuel_System.Interfaces.Fuel_Tank;
        C2M2L_OM.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
          fuel_Tank(
          height=height,
          length=length,
          depth=depth,
          initial_fill_fraction=initial_fill_fraction,
          medium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8())
          annotation (Placement(transformation(extent={{-68,-126},{90,112}})));

        parameter SI.Height height=0.1 "Height of fuel tank";
        parameter SI.Length length=2.0 "Length (long dimension) of fuel tank";
        parameter SI.Length depth=1.0 "Depth (short dimension) of fuel tank";
        parameter Real initial_fill_fraction=0.5;
      equation
        connect(fuel_Tank.level_fraction, level_fraction) annotation (Line(
            points={{11,90.58},{11,187.29},{98,187.29},{98,306}},
            color={0,0,127},
            smooth=Smooth.None));
        connect(fuel_Tank.fluid_out, fluidAdaptor1.fluidHeatflow_port) annotation (
            Line(
            points={{-21.39,96.9267},{-21.39,143.463},{-54,143.463},{-54,184}},
            color={255,0,0},
            smooth=Smooth.None));
        connect(fuel_Tank.fluid_in, fluidAdaptor.fluidHeatflow_port) annotation (Line(
            points={{-52.99,96.1333},{-104.495,96.1333},{-104.495,190},{-158,190}},
            color={255,0,0},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,-320},
                  {200,280}}), graphics), Icon(coordinateSystem(preserveAspectRatio=true,
                extent={{-200,-320},{200,280}})));
      end Fuel_Tank;

      model Fuel_Tank_Dual_Sender "Fuel tank with two pickup points"
        extends
        C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank;
        C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor2(
           HeatFlowMedium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
            redeclare package Medium =
              C2M2L_Ext.Media.Incompressible.Constant_Property_JP8) annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={146,206})));
        Modelica.Fluid.Interfaces.FluidPort_b sender_2(redeclare package Medium
          =   C2M2L_Ext.Media.Incompressible.Constant_Property_JP8)
          annotation (Placement(transformation(extent={{116,254},{174,310}})));
      equation

        connect(tank.flowPort_a, fluidAdaptor2.fluidHeatflow_port) annotation (Line(
            points={{-58,0},{-60,0},{-60,136},{146,136},{146,196}},
            color={255,0,0},
            smooth=Smooth.None));
        connect(fluidAdaptor2.fluid_port, sender_2) annotation (Line(
            points={{146,216},{146,249},{146,282},{145,282}},
            color={0,127,255},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=true,
                extent={{-200,-320},{200,280}}), graphics));
      end Fuel_Tank_Dual_Sender;

      package Interfaces
         extends Modelica.Icons.InterfacesPackage;

        partial model Fuel_Tank
          replaceable package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8;
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
              HeatFlowMedium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
              redeclare package Medium =
                Medium) annotation (
              Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=90,
                origin={-158,200})));
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
              HeatFlowMedium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
              redeclare package Medium =
                Medium) annotation (
              Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=90,
                origin={-54,194})));
          Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
            Medium =
                Medium)
            annotation (Placement(transformation(extent={{-190,248},{-134,302}})));
          Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
            Medium =
                Medium)
            annotation (Placement(transformation(extent={{-84,248},{-26,304}})));
          Modelica.Blocks.Interfaces.RealOutput level_fraction annotation (Placement(
                transformation(
                extent={{-26,-26},{26,26}},
                rotation=90,
                origin={98,306})));
        equation
          connect(fluidAdaptor.fluid_port,fluid_in)  annotation (Line(
              points={{-158,210},{-160,210},{-160,275},{-162,275}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(fluidAdaptor1.fluid_port,fluid_out)  annotation (Line(
              points={{-54,204},{-56,204},{-56,276},{-55,276}},
              color={0,127,255},
              smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,-320},
                    {200,280}}), graphics), Icon(coordinateSystem(preserveAspectRatio=true,
                  extent={{-200,-320},{200,280}}), graphics={
                Rectangle(
                  extent={{-130,0},{-10,-120}},
                  lineColor={170,255,85},
                  fillPattern=FillPattern.Solid,
                  fillColor={255,255,255},
                  lineThickness=0.5),
                Polygon(
                  points={{-130,0},{-30,140},{90,140},{-10,0},{-130,0}},
                  lineColor={170,255,85},
                  smooth=Smooth.None,
                  fillPattern=FillPattern.Solid,
                  fillColor={255,255,255},
                  lineThickness=0.5),
                Polygon(
                  points={{-10,-120},{-10,0},{90,140},{90,20},{-10,-120}},
                  lineColor={170,255,85},
                  smooth=Smooth.None,
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  lineThickness=0.5),
                Line(
                  points={{-160,238},{-160,78},{-68,78},{-68,30}},
                  color={0,0,255},
                  smooth=Smooth.None),
                Line(
                  points={{-68,28},{-80,52}},
                  color={0,0,255},
                  smooth=Smooth.None),
                Line(
                  points={{-66,206},{-78,230}},
                  color={0,0,255},
                  smooth=Smooth.None),
                Line(
                  points={{-54,64},{-54,136},{-78,136},{-78,230}},
                  color={0,0,255},
                  smooth=Smooth.None),
                Text(
                  extent={{-300,268},{-130,210}},
                  lineColor={128,128,128},
                  textString="ret"),
                Text(
                  extent={{-24,268},{146,210}},
                  lineColor={128,128,128},
                  textString="level")}));
        end Fuel_Tank;

        partial model Fuel_Filter
          replaceable package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8;
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
              HeatFlowMedium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
              redeclare package Medium =
                Medium) annotation (
              Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=180,
                origin={-128,-40})));
          Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
            Medium =
                Medium)
            annotation (Placement(transformation(extent={{-228,-126},{-172,-72}})));
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
             HeatFlowMedium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
              redeclare package Medium =
                Medium) annotation (
              Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=0,
                origin={128,-40})));
          Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
            Medium =
                Medium)
            annotation (Placement(transformation(extent={{174,-124},{232,-68}})));
        equation
          connect(fluidAdaptor.fluid_port,fluid_in)  annotation (Line(
              points={{-138,-40},{-160,-40},{-160,-99},{-200,-99}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(fluidAdaptor1.fluid_port,fluid_out)  annotation (Line(
              points={{138,-40},{160,-40},{160,-96},{203,-96}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=false,extent={{-200,
                    -320},{200,280}}),
                              graphics), Icon(coordinateSystem(preserveAspectRatio=true,
                  extent={{-200,-320},{200,280}}),
                                              graphics={
                Polygon(
                  points={{-148,184},{-148,-156},{164,-156},{164,184},{-148,184}},
                  lineColor={0,0,255},
                  smooth=Smooth.None),
                Rectangle(extent={{-12,184},{30,134}},
                                                    lineColor={0,0,0}),
                Rectangle(extent={{-20,-80},{0,-100}}, lineColor={0,0,255}),
                Rectangle(
                  extent={{-116,138},{134,-124}},
                  lineColor={0,0,0},
                  fillColor={255,170,85},
                  fillPattern=FillPattern.Solid),
                Line(
                  points={{-90,138},{-90,-124}},
                  color={0,0,255},
                  smooth=Smooth.None),
                Line(
                  points={{-60,138},{-60,-122}},
                  color={0,0,255},
                  smooth=Smooth.None),
                Line(
                  points={{-26,138},{-26,-122}},
                  color={0,0,255},
                  smooth=Smooth.None),
                Line(
                  points={{18,138},{18,-126}},
                  color={0,0,255},
                  smooth=Smooth.None),
                Line(
                  points={{56,138},{56,-124}},
                  color={0,0,255},
                  smooth=Smooth.None),
                Line(
                  points={{98,138},{98,-126}},
                  color={0,0,255},
                  smooth=Smooth.None),
                Polygon(
                  points={{-238,-20},{-238,-46},{-188,-46},{-188,-66},{-168,-32},{-188,
                      -4},{-188,-20},{-238,-20}},
                  lineColor={0,0,0},
                  smooth=Smooth.None,
                  fillColor={0,128,255},
                  fillPattern=FillPattern.Solid),
                Polygon(
                  points={{168,-24},{168,-50},{218,-50},{218,-70},{238,-36},{218,-8},{
                      218,-24},{168,-24}},
                  lineColor={0,0,0},
                  smooth=Smooth.None,
                  fillColor={0,128,255},
                  fillPattern=FillPattern.Solid)}));
        end Fuel_Filter;

        partial model Fuel_Pump
          replaceable package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8;
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
              HeatFlowMedium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
              redeclare package Medium =
                Medium) annotation (
              Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=180,
                origin={-130,-16})));
          C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
             HeatFlowMedium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
              redeclare package Medium =
                Medium) annotation (
              Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=0,
                origin={126,-16})));
          Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
            Medium =
                Medium)
            annotation (Placement(transformation(extent={{-232,-102},{-176,-48}})));
          Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
            Medium =
                Medium)
            annotation (Placement(transformation(extent={{174,-102},{232,-46}})));
          Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
            annotation (Placement(transformation(extent={{-210,106},{-190,126}})));
          Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
            annotation (Placement(transformation(extent={{190,106},{210,126}})));
          C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
            annotation (Placement(transformation(extent={{-38,246},{38,312}})));
        equation
          connect(fluidAdaptor.fluid_port,fluid_in)  annotation (Line(
              points={{-140,-16},{-162,-16},{-162,-75},{-204,-75}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(fluidAdaptor1.fluid_port,fluid_out)  annotation (Line(
              points={{136,-16},{158,-16},{158,-74},{203,-74}},
              color={0,127,255},
              smooth=Smooth.None));
         annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -320},{200,280}}), graphics), Icon(coordinateSystem(
                  preserveAspectRatio=false,extent={{-200,-320},{200,280}}), graphics={
                Polygon(
                  points={{38,-40},{78,-55},{38,-70},{38,-40}},
                  lineColor={0,128,255},
                  smooth=Smooth.None,
                  fillColor={0,128,255},
                  fillPattern=FillPattern.Solid,
                  visible=showDesignFlowDirection),
                Polygon(
                  points={{38,-45},{68,-55},{38,-65},{38,-45}},
                  lineColor={255,255,255},
                  smooth=Smooth.None,
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  visible=allowFlowReversal),
                Line(
                  points={{73,-55},{-42,-55}},
                  color={0,128,255},
                  smooth=Smooth.None,
                  visible=showDesignFlowDirection),
                Ellipse(
                  extent={{-114,106},{112,-126}},
                  lineColor={0,0,0},
                  fillColor={0,128,255},
                  fillPattern=FillPattern.Solid),
                Line(
                  points={{-8,92},{-48,10},{32,-30},{4,-106}},
                  color={255,255,255},
                  smooth=Smooth.Bezier),
                Line(
                  points={{96,-4},{12,34},{-28,-46},{-94,-28}},
                  color={255,255,255},
                  smooth=Smooth.Bezier),
                Line(
                  points={{60,64},{-20,42},{6,-46},{-62,-86}},
                  color={255,255,255},
                  smooth=Smooth.Bezier),
                Ellipse(
                  extent={{-30,18},{30,-42}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid),
                Line(
                  points={{53,71},{-15,43},{17,-45},{-77,-73}},
                  color={255,255,255},
                  smooth=Smooth.Bezier,
                  origin={-5,-11},
                  rotation=90),
                Line(
                  points={{-202,-80},{-172,-80},{-172,14},{-146,14}},
                  color={0,0,0},
                  smooth=Smooth.None),
                Polygon(
                  points={{-188,-154},{-188,-174},{-132,-174},{-132,-186},{-114,-164},{
                      -132,-142},{-132,-154},{-188,-154}},
                  lineColor={0,0,0},
                  smooth=Smooth.None,
                  fillColor={0,128,255},
                  fillPattern=FillPattern.Solid),
                Polygon(
                  points={{118,-156},{118,-176},{174,-176},{174,-188},{192,-166},{174,
                      -144},{174,-156},{118,-156}},
                  lineColor={0,0,0},
                  smooth=Smooth.None,
                  fillColor={0,128,255},
                  fillPattern=FillPattern.Solid),
                Line(
                  points={{146,6},{174,6},{174,-82},{200,-82}},
                  color={0,0,0},
                  smooth=Smooth.None),
                Ellipse(extent={{-148,138},{146,-156}},
                                                    lineColor={0,0,0})}));
        end Fuel_Pump;
      end Interfaces;

      package Tests
      extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

        model Electric_Controller

          Modelica.Blocks.Sources.Constant const(k=1)
            annotation (Placement(transformation(extent={{-100,52},{-80,72}})));
          C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
        equation
          connect(const.y,electric_Machine_Bus. demand) annotation (Line(
              points={{-79,62},{-56,62},{-56,0},{100,0}},
              color={0,0,127},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Electric_Controller;

        model Filter_Outlet
          parameter Real p = 100000;
          Modelica.Fluid.Sources.Boundary_pT filter_outlet(
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            nPorts=1,
            p=p)
            annotation (Placement(transformation(extent={{100,-1},{80,19}})));
          Modelica.Fluid.Interfaces.FluidPort_b port_b(redeclare package Medium
            =   C2M2L_Ext.Media.Incompressible.Constant_Property_JP8)
            annotation (Placement(transformation(extent={{-110,8},{-90,28}})));
        equation
          connect(port_b, filter_outlet.ports[1]) annotation (Line(
              points={{-100,18},{-10,18},{-10,9},{80,9}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Filter_Outlet;

        model Fuel_To_Engine
          parameter Real m_flow = -0.1;
          Modelica.Fluid.Sources.MassFlowSource_T Fuel_To_Engine(
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            m_flow=m_flow,
            nPorts=1)
            annotation (Placement(transformation(extent={{-76,40},{-56,60}})));
          Modelica.Fluid.Interfaces.FluidPort_b port_b(redeclare package Medium
            =   C2M2L_Ext.Media.Incompressible.Constant_Property_JP8)
            annotation (Placement(transformation(extent={{88,18},{108,38}})));
        equation
          connect(Fuel_To_Engine.ports[1], port_b) annotation (Line(
              points={{-56,50},{22,50},{22,28},{98,28}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Fuel_To_Engine;

        model Test_Delivered_FuelPump
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable Fuel_Pump ancilliary_Pump(
            rotating_inertia=0.01,
            efficiency_characteristic=[0,1; 10,1],
            trq_max=10,
            pow_max=100,
            flow_characteristic=[0.00083259501,172823.2968; 0.00087131978,170206.0469;
                0.00095845365,162573.5506; 0.00098265505,160211.4067; 0.00106011088,
                152651.3054; 0.00111819802,145782.0587; 0.00115692279,141202.5609;
                0.00123921133,132120.0971; 0.00125373469,130517.0660; 0.00132150618,
                122884.5697; 0.00135539193,118774.6049; 0.00138443234,115252.0734;
                0.00145220383,107619.5771; 0.00147640523,105165.7329; 0.00151997532,
                100749.6409; 0.00158774050,92913.7492; 0.00159258583,92353.8949;
                0.00167003535,83194.8994; 0.00173780684,73933.8614; 0.00174264586,
                73272.6541; 0.00186850449,56481.0243]) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Water_Pumps.Ancilliary_Pump
            annotation (Placement(transformation(extent={{-20,-14},{20,46}})));
        //     redeclare package Transported_Fluid =
        //         C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
          Modelica.Electrical.Spice3.Sources.V_constant v_constant(V=24)
            annotation (Placement(transformation(extent={{-12,56},{8,76}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{52,-66},{72,-46}})));
          Modelica.Electrical.Analog.Basic.Ground ground
            annotation (Placement(transformation(extent={{48,46},{68,66}})));
          Filter_Outlet filter_Outlet(p=105000)
            annotation (Placement(transformation(extent={{84,2},{104,22}})));
          Filter_Outlet filter_Outlet1 annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=180,
                origin={-86,12})));
          Electric_Controller electric_Controller annotation (Placement(transformation(
                  rotation=0, extent={{-86,52},{-66,72}})));
        equation

          connect(v_constant.p, ancilliary_Pump.pin_p) annotation (Line(
              points={{-12,66},{-36,66},{-36,29.6},{-20,29.6}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(v_constant.n, ancilliary_Pump.pin_n) annotation (Line(
              points={{8,66},{36,66},{36,29.6},{20,29.6}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(ground.p, v_constant.n) annotation (Line(
              points={{58,66},{8,66}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(filter_Outlet1.port_b, ancilliary_Pump.fluid_in) annotation (Line(
              points={{-76,10.2},{-48,10.2},{-48,10.5},{-20.4,10.5}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(ancilliary_Pump.fluid_out, filter_Outlet.port_b) annotation (Line(
              points={{20.3,10.6},{52,10.6},{52,13.8},{84,13.8}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(electric_Controller.electric_Machine_Bus, ancilliary_Pump.electric_Machine_Bus)
            annotation (Line(
              points={{-66,62},{-34,62},{-34,45.9},{0,45.9}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (Diagram(graphics), Commands(file="Scripts/Electric_Pump_Test.mos"
              "plot_setup_electric_pump"));
        end Test_Delivered_FuelPump;

        model Test_Delivered_FuelPump_original
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Pump
                                                                                      ancilliary_Pump(
            rotating_inertia=0.01,
            efficiency_characteristic=[0,1; 10,1],
            trq_max=10,
            pow_max=100,
            flow_characteristic=[0.00083259501,172823.2968; 0.00087131978,170206.0469; 0.00095845365,
                162573.5506; 0.00098265505,160211.4067; 0.00106011088,152651.3054;
                0.00111819802,145782.0587; 0.00115692279,141202.5609; 0.00123921133,
                132120.0971; 0.00125373469,130517.0660; 0.00132150618,122884.5697;
                0.00135539193,118774.6049; 0.00138443234,115252.0734; 0.00145220383,
                107619.5771; 0.00147640523,105165.7329; 0.00151997532,100749.6409;
                0.00158774050,92913.7492; 0.00159258583,92353.8949; 0.00167003535,
                83194.8994; 0.00173780684,73933.8614; 0.00174264586,73272.6541;
                0.00186850449,56481.0243]) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Water_Pumps.Ancilliary_Pump
            annotation (Placement(transformation(extent={{-20,-14},{20,46}})));
        //     redeclare package Transported_Fluid =
        //         C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
          Modelica.Fluid.Sources.Boundary_pT pump_inlet(
            nPorts=1,
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            p=100000) annotation (Placement(transformation(extent={{-60,0},{-40,20}})));
          Modelica.Fluid.Sources.Boundary_pT pump_outlet(
            nPorts=1,
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            p=105000) annotation (Placement(transformation(extent={{62,0},{42,20}})));
          Modelica.Electrical.Spice3.Sources.V_constant v_constant(V=24)
            annotation (Placement(transformation(extent={{-12,56},{8,76}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{52,-66},{72,-46}})));
          C2M2L_Ext.Electrical.Interfaces.Electric_Machine_Bus electric_Machine_Bus
            annotation (Placement(transformation(extent={{-70,52},{-50,72}})));
          Modelica.Blocks.Sources.Constant const(k=1)
            annotation (Placement(transformation(extent={{-100,52},{-80,72}})));
          Modelica.Electrical.Analog.Basic.Ground ground
            annotation (Placement(transformation(extent={{48,46},{68,66}})));
        equation

          connect(pump_inlet.ports[1], ancilliary_Pump.fluid_in) annotation (Line(
              points={{-40,10},{-20,10}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(ancilliary_Pump.fluid_out, pump_outlet.ports[1]) annotation (Line(
              points={{20,10},{42,10}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(v_constant.p, ancilliary_Pump.pin_p) annotation (Line(
              points={{-12,66},{-36,66},{-36,30},{-20,30}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(v_constant.n, ancilliary_Pump.pin_n) annotation (Line(
              points={{8,66},{36,66},{36,30},{20,30}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(ancilliary_Pump.mount_01, world.frame_b) annotation (Line(
              points={{0,-14},{36,-14},{36,-56},{72,-56}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(electric_Machine_Bus, ancilliary_Pump.electric_Machine_Bus)
            annotation (Line(
              points={{-60,62},{-30,62},{-30,39.4},{0,39.4}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(const.y, electric_Machine_Bus.demand) annotation (Line(
              points={{-79,62},{-60,62}},
              color={0,0,127},
              smooth=Smooth.None));
          connect(ground.p, v_constant.n) annotation (Line(
              points={{58,66},{8,66}},
              color={0,0,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics), Commands(file="Scripts/Electric_Pump_Test.mos"
              "plot_setup_electric_pump"));
        end Test_Delivered_FuelPump_original;

        model Test_Delivered_FuelPump_Ricardo
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Pump
                                                                                      ancilliary_Pump(
            rotating_inertia=0.01,
            efficiency_characteristic=[0,1; 10,1],
            trq_max=10,
            pow_max=100,
            flow_characteristic=[0.00083259501,172823.2968; 0.00087131978,170206.0469; 0.00095845365,
                162573.5506; 0.00098265505,160211.4067; 0.00106011088,152651.3054;
                0.00111819802,145782.0587; 0.00115692279,141202.5609; 0.00123921133,
                132120.0971; 0.00125373469,130517.0660; 0.00132150618,122884.5697;
                0.00135539193,118774.6049; 0.00138443234,115252.0734; 0.00145220383,
                107619.5771; 0.00147640523,105165.7329; 0.00151997532,100749.6409;
                0.00158774050,92913.7492; 0.00159258583,92353.8949; 0.00167003535,
                83194.8994; 0.00173780684,73933.8614; 0.00174264586,73272.6541;
                0.00186850449,56481.0243]) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Water_Pumps.Ancilliary_Pump
            annotation (Placement(transformation(extent={{-20,-14},{20,46}})));
        //     redeclare package Transported_Fluid =
        //         C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
          Modelica.Electrical.Spice3.Sources.V_constant v_constant(V=24)
            annotation (Placement(transformation(extent={{-12,56},{8,76}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{52,-66},{72,-46}})));
          Modelica.Electrical.Analog.Basic.Ground ground
            annotation (Placement(transformation(extent={{48,46},{68,66}})));
          Filter_Outlet filter_Outlet(p=105000)
            annotation (Placement(transformation(extent={{84,2},{104,22}})));
          Filter_Outlet filter_Outlet1 annotation (Placement(transformation(
                extent={{-10,-10},{10,10}},
                rotation=180,
                origin={-86,12})));
          Electric_Controller electric_Controller annotation (Placement(transformation(
                  rotation=0, extent={{-86,52},{-66,72}})));
        equation

          connect(v_constant.p, ancilliary_Pump.pin_p) annotation (Line(
              points={{-12,66},{-36,66},{-36,30},{-20,30}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(v_constant.n, ancilliary_Pump.pin_n) annotation (Line(
              points={{8,66},{36,66},{36,30},{20,30}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(ground.p, v_constant.n) annotation (Line(
              points={{58,66},{8,66}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(filter_Outlet1.port_b, ancilliary_Pump.fluid_in) annotation (Line(
              points={{-76,10.2},{-48,10.2},{-48,10},{-20,10}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(ancilliary_Pump.fluid_out, filter_Outlet.port_b) annotation (Line(
              points={{20,10},{52,10},{52,13.8},{84,13.8}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(electric_Controller.electric_Machine_Bus, ancilliary_Pump.electric_Machine_Bus)
            annotation (Line(
              points={{-66,62},{-34,62},{-34,39.4},{0,39.4}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (Diagram(graphics), Commands(file="Scripts/Electric_Pump_Test.mos"
              "plot_setup_electric_pump"));
        end Test_Delivered_FuelPump_Ricardo;

        model Test_Fuel_Filter
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable Fuel_Filter fuel_Filter(m_flow_nominal=0.01, dp_nominal=20000)
            constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Filter
            annotation (Placement(transformation(extent={{-22,-14},{8,30}})));
          Fuel_To_Engine filter_inlet(m_flow=0.01)
            annotation (Placement(transformation(extent={{-116,-16},{-78,14}})));
          Filter_Outlet filter_Outlet annotation (Placement(transformation(rotation=0,
                  extent={{80,-2},{100,18}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-90,-90},{-70,-70}})));
        equation
          connect(filter_inlet.port_b, fuel_Filter.fluid_in) annotation (Line(
              points={{-78.38,3.2},{-48,3.2},{-48,2.20667},{-22,2.20667}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(fuel_Filter.fluid_out, filter_Outlet.port_b) annotation (Line(
              points={{8.225,2.42667},{44,2.42667},{44,9.8},{80,9.8}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Fuel_Filter;

        model Test_Fuel_Filter_original
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Filter
            fuel_Filter(
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            m_flow_nominal=0.01,
            dp_nominal=20000) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Filter
            annotation (Placement(transformation(extent={{-22,-14},{8,30}})));
          Modelica.Fluid.Sources.MassFlowSource_T filter_inlet(
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            nPorts=1,
            m_flow=0.01)
            annotation (Placement(transformation(extent={{-101,-2},{-81,18}})));
          Modelica.Fluid.Sources.Boundary_pT filter_outlet(
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            nPorts=1,
            p=100000)
            annotation (Placement(transformation(extent={{100,-1},{80,19}})));
        equation
          connect(filter_inlet.ports[1], fuel_Filter.fluid_in)
                                                           annotation (Line(
              points={{-81,8},{-32,8},{-32,3.6},{-22,3.6}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(fuel_Filter.fluid_out, filter_outlet.ports[1])
                                                             annotation (Line(
              points={{8,3.6},{30,3.6},{30,9},{80,9}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Fuel_Filter_original;

        model Test_Fuel_Filter_Ricardo
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Filter
            fuel_Filter(
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            m_flow_nominal=0.01,
            dp_nominal=20000) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Filter
            annotation (Placement(transformation(extent={{-22,-14},{8,30}})));
          Fuel_To_Engine filter_inlet(m_flow=0.01)
            annotation (Placement(transformation(extent={{-116,-16},{-78,14}})));
          Filter_Outlet filter_Outlet annotation (Placement(transformation(rotation=0,
                  extent={{80,-2},{100,18}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
        equation
          connect(filter_inlet.port_b, fuel_Filter.fluid_in) annotation (Line(
              points={{-78.38,3.2},{-48,3.2},{-48,3.6},{-22,3.6}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(fuel_Filter.fluid_out, filter_Outlet.port_b) annotation (Line(
              points={{8,3.6},{44,3.6},{44,9.8},{80,9.8}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Fuel_Filter_Ricardo;

        model Test_Fuel_Tank
          extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable Fuel_Tank fuel_Tank constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
            annotation (Placement(transformation(extent={{-10,-16},{20,28}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-60,-100},{-40,-80}})));
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Fuel_System.Tests.Fuel_To_Engine
            fuel_To_Engine annotation (Placement(transformation(rotation=0, extent={{
                    -76,40},{-56,60}})));
        equation
          connect(fuel_To_Engine.port_b, fuel_Tank.fluid_out) annotation (Line(
              points={{-56.2,52.8},{0.875,52.8},{0.875,27.7067}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics),
            experiment(StopTime=150),
            __Dymola_experimentSetupOutput);
        end Test_Fuel_Tank;

        model Test_Fuel_Tank_Dual_Sender
          import C2M2L_OM_Ext = C2M2L_CyPhy;
          extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_OM_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank_Dual_Sender
            fuel_Tank constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank_Dual_Sender
            annotation (Placement(transformation(extent={{-10,-16},{20,28}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
            annotation (Placement(transformation(extent={{-60,-100},{-40,-80}})));
          C2M2L_OM_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Tests.Fuel_To_Engine
            Fuel_To_Engine_B
            annotation (Placement(transformation(extent={{-80,74},{-50,92}})));
          C2M2L_OM_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Tests.Fuel_To_Engine
            Fuel_To_Engine
            annotation (Placement(transformation(extent={{-80,48},{-50,68}})));
        equation
          connect(Fuel_To_Engine.port_b, fuel_Tank.fluid_out) annotation (Line(
              points={{-50.3,60.8},{1.025,60.8},{1.025,28}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(Fuel_To_Engine_B.port_b, fuel_Tank.sender_2) annotation (Line(
              points={{-50.3,85.52},{15.875,85.52},{15.875,28.1467}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics),
            experiment(StopTime=80),
            __Dymola_experimentSetupOutput);
        end Test_Fuel_Tank_Dual_Sender;

        model Test_Fuel_Tank_Dual_Sender_original
          extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank_Dual_Sender
            fuel_Tank constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank_Dual_Sender
            annotation (Placement(transformation(extent={{-20,-32},{20,28}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
            annotation (Placement(transformation(extent={{-60,-100},{-40,-80}})));
          Modelica.Fluid.Sources.MassFlowSource_T Fuel_To_Engine(
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            m_flow=-0.1,
            nPorts=1)
            annotation (Placement(transformation(extent={{-76,40},{-56,60}})));
          Modelica.Fluid.Sources.MassFlowSource_T Fuel_To_Engine_B(
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            m_flow=-0.1,
            nPorts=1)
            annotation (Placement(transformation(extent={{-76,70},{-56,90}})));
        equation
          connect(world.frame_b, fuel_Tank.mount_01) annotation (Line(
              points={{-40,-90},{0,-90},{0,-32}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(Fuel_To_Engine.ports[1], fuel_Tank.fluid_out)  annotation (Line(
              points={{-56,50},{-8,50},{-8,24}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(Fuel_To_Engine_B.ports[1], fuel_Tank.sender_2) annotation (Line(
              points={{-56,80},{16,80},{16,24}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics),
            experiment(StopTime=80),
            __Dymola_experimentSetupOutput);
        end Test_Fuel_Tank_Dual_Sender_original;

        model Test_Fuel_Tank_Dual_Sender_Ricardo
          import C2M2L_OM_Ext = C2M2L_CyPhy;
          extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank_Dual_Sender
            fuel_Tank constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank_Dual_Sender
            annotation (Placement(transformation(extent={{-20,-32},{20,28}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
            annotation (Placement(transformation(extent={{-60,-100},{-40,-80}})));
          C2M2L_OM_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Tests.Fuel_To_Engine
            Fuel_To_Engine_B
            annotation (Placement(transformation(extent={{-80,74},{-50,92}})));
          C2M2L_OM_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Tests.Fuel_To_Engine
            Fuel_To_Engine
            annotation (Placement(transformation(extent={{-80,48},{-50,68}})));
        equation
          connect(Fuel_To_Engine.port_b, fuel_Tank.fluid_out) annotation (Line(
              points={{-50.3,60.8},{-8,60.8},{-8,24}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(Fuel_To_Engine_B.port_b, fuel_Tank.sender_2) annotation (Line(
              points={{-50.3,85.52},{16,85.52},{16,24}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics),
            experiment(StopTime=80),
            __Dymola_experimentSetupOutput);
        end Test_Fuel_Tank_Dual_Sender_Ricardo;

        model Test_Fuel_Tank_original
          extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
                                                                                      fuel_Tank
            constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
            annotation (Placement(transformation(extent={{-20,-32},{20,28}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-60,-100},{-40,-80}})));
          Modelica.Fluid.Sources.MassFlowSource_T Fuel_To_Engine(
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Constant_Property_JP8,
            m_flow=-0.1,
            nPorts=1)
            annotation (Placement(transformation(extent={{-76,40},{-56,60}})));
        equation
          connect(world.frame_b, fuel_Tank.mount_01) annotation (Line(
              points={{-40,-90},{0,-90},{0,-32}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(Fuel_To_Engine.ports[1], fuel_Tank.fluid_out)  annotation (Line(
              points={{-56,50},{-8,50},{-8,24}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics),
            experiment(StopTime=150),
            __Dymola_experimentSetupOutput);
        end Test_Fuel_Tank_original;

        model Test_Fuel_Tank_Ricardo
          extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
                                                                                      fuel_Tank
            constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
            annotation (Placement(transformation(extent={{-20,-32},{20,28}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-60,-100},{-40,-80}})));
          C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Fuel_System.Tests.Fuel_To_Engine
            fuel_To_Engine annotation (Placement(transformation(rotation=0, extent={{
                    -76,40},{-56,60}})));
        equation
          connect(fuel_To_Engine.port_b, fuel_Tank.fluid_out) annotation (Line(
              points={{-56.2,52.8},{-8,52.8},{-8,24}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (Diagram(graphics),
            experiment(StopTime=150),
            __Dymola_experimentSetupOutput);
        end Test_Fuel_Tank_Ricardo;
      end Tests;
    end Fuel_System;

    package Hydraulic
      extends Modelica.Icons.Package;

      model Hydraulic_Accumulator
      "Increases in pressure as more fluid is forced in"

        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Volumes.Hydraulic_Accumulator
          hydraulic_Accumulator(
          total_volume=total_volume,
          empty_pressure=empty_pressure,
          hydraulic_fluid_accumulated_start=hydraulic_fluid_accumulated_start)
          annotation (Placement(transformation(extent={{-38,-18},{36,66}})));
        parameter SI.Volume total_volume=10 "total volume of the accumulator";
        parameter SI.Pressure empty_pressure=20e5
        "fluid pressure when accumulator is empty";
        parameter SI.Volume hydraulic_fluid_accumulated_start = total_volume/2
        "initial volume of hydraulic fluid in the accumulator";
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Orifices.Loss_Linear loss_Linear(k=k)
                                                                        annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={-6,-100})));
        parameter Real k=1e-9 "Loss factor";
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port
                                                          hyd
          annotation (Placement(transformation(extent={{-88,-230},{-68,-210}})));
      equation
        connect(loss_Linear.hyd_a, hydraulic_Accumulator.hydraulic_Port) annotation (
            Line(
            points={{-6,-90},{-4,-90},{-4,-18},{-1,-18}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(hyd, loss_Linear.hyd_b) annotation (Line(
            points={{-78,-220},{-6,-220},{-6,-110}},
            color={255,0,128},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=false,extent={{-200,-320},
                  {200,280}}), graphics), Icon(graphics={
              Rectangle(
                extent={{-58,76},{62,-44}},
                lineColor={0,0,0},
                radius=20,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),
              Rectangle(
                extent={{-58,16},{62,-44}},
                fillColor={255,0,128},
                fillPattern=FillPattern.Solid,
                pattern=LinePattern.None,
                radius=20),
              Rectangle(
                extent={{-58,16},{62,-24}},
                fillColor={255,0,128},
                fillPattern=FillPattern.Solid,
                pattern=LinePattern.None,
                radius=0),
              Line(
                points={{-78,-220},{-78,-98},{2,-98},{2,-34}},
                smooth=Smooth.None,
                color={255,0,128}),
              Rectangle(
                extent={{-58,76},{62,-44}},
                lineColor={0,0,0},
                radius=20),
              Line(
                points={{42,36},{42,16}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{36,26},{42,16},{48,26}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-38,36},{-38,16}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-44,26},{-38,16},{-32,26}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{2,36},{2,16}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-4,26},{2,16},{8,26}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-58,16},{62,16}},
                color={0,0,0},
                smooth=Smooth.None,
                thickness=0.5)}));
      end Hydraulic_Accumulator;

      model Hydraulic_Attentuator
      "Same as accumulator but with 2 connection ports and internal losses"
        extends
        C2M2L_OM.C2M2L_Delivered_Component_Implementations.Hydraulic.Interfaces.Base;

        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Volumes.Hydraulic_Accumulator
          hydraulic_Accumulator(
          total_volume=total_volume,
          empty_pressure=empty_pressure,
          hydraulic_fluid_accumulated(fixed=true, start=
                hydraulic_fluid_in_attenuator_start))
          annotation (Placement(transformation(extent={{-20,120},{20,160}})));
        parameter SI.Volume total_volume=10 "total volume of the attentuator";
        parameter SI.Pressure empty_pressure=20e5
        "gas pressure when attentuator has no hydraulic fluid";

        parameter Real k=1 "Loss factor";
        parameter SI.Volume hydraulic_fluid_in_attenuator_start
        "initial_hydraulic fluid inside the attentuator";

      equation
        connect(hyd_out, hydraulic_Accumulator.hydraulic_Port) annotation (Line(
            points={{200,80},{0,80},{0,120}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(hyd_in, hydraulic_Accumulator.hydraulic_Port) annotation (Line(
            points={{-200,80},{0,80},{0,120}},
            color={255,0,128},
            smooth=Smooth.None));
        annotation (Icon(coordinateSystem(preserveAspectRatio=true, extent={{-200,-320},
                  {200,280}}),
                         graphics={
              Rectangle(
                extent={{-60,60},{60,0}},
                fillColor={255,0,128},
                fillPattern=FillPattern.Solid,
                pattern=LinePattern.None,
                radius=20),
              Rectangle(
                extent={{-60,60},{60,20}},
                fillColor={255,0,128},
                fillPattern=FillPattern.Solid,
                pattern=LinePattern.None,
                radius=0),
              Line(
                points={{0,-20},{0,10}},
                smooth=Smooth.None,
                color={255,0,128}),
              Rectangle(
                extent={{-60,120},{60,0}},
                lineColor={0,0,0},
                radius=20),
              Line(
                points={{40,80},{40,60}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{34,70},{40,60},{46,70}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-40,80},{-40,60}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-46,70},{-40,60},{-34,70}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{0,80},{0,60}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-6,70},{0,60},{6,70}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-60,60},{60,60}},
                color={0,0,0},
                smooth=Smooth.None,
                thickness=0.5),
              Line(
                points={{-4,-12},{0,-18},{4,-12}},
                color={255,0,128},
                smooth=Smooth.None),
              Line(
                points={{-4,3},{0,-3},{4,3}},
                color={255,0,128},
                smooth=Smooth.None,
                origin={0,-3},
                rotation=180),
              Line(
                points={{-198,80},{-80,80},{-80,-20},{80,-20},{80,80},{200,80}},
                color={255,0,128},
                smooth=Smooth.None)}),
                                    Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-200,-320},{200,280}}), graphics));
      end Hydraulic_Attentuator;

      model Hydraulic_Filter "Modelled as a simple linear restriction to flow"

        extends
        C2M2L_OM.C2M2L_Delivered_Component_Implementations.Hydraulic.Interfaces.Base;

        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Orifices.Loss_Linear loss_Linear(k=
              loss_factor)
          annotation (Placement(transformation(extent={{-18,8},{50,64}})));
        parameter Real loss_factor=1 "Loss factor of the filter";
      equation
        connect(hyd_in, loss_Linear.hyd_a) annotation (Line(
            points={{-200,80},{-130,80},{-130,82},{-58,82},{-58,36},{-18,36}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(loss_Linear.hyd_b, hyd_out) annotation (Line(
            points={{50,36},{86,36},{86,20},{200,20},{200,80}},
            color={255,0,128},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=false,extent={{-200,
                  -320},{200,280}}), graphics), Icon(coordinateSystem(
                preserveAspectRatio=true, extent={{-200,-320},{200,280}}), graphics={
              Ellipse(extent={{-162,126},{-82,-74}}, lineColor={0,0,255}),
              Ellipse(extent={{-142,76},{-102,-24}},lineColor={0,0,255}),
              Line(
                points={{-122,126},{98,126}},
                color={0,0,255},
                smooth=Smooth.None),
              Line(
                points={{-118,-74},{102,-74}},
                color={0,0,255},
                smooth=Smooth.None),
              Line(
                points={{-82,26},{138,26}},
                color={0,0,255},
                smooth=Smooth.None),
              Line(
                points={{-90,86},{130,86}},
                color={0,0,255},
                smooth=Smooth.None),
              Line(
                points={{-90,-34},{130,-34}},
                color={0,0,255},
                smooth=Smooth.None),
              Line(
                points={{100,124},{132,84},{140,24},{132,-36},{100,-76}},
                color={0,0,255},
                smooth=Smooth.Bezier),
              Ellipse(extent={{-154,106},{-90,-54}},
                                                   lineColor={0,0,255}),
              Line(
                points={{-198,26},{-124,26}},
                color={255,0,128},
                smooth=Smooth.Bezier),
              Line(
                points={{142,24},{200,24}},
                color={255,0,128},
                smooth=Smooth.Bezier),
              Polygon(
                points={{-200,-98},{-200,-118},{-134,-118},{-134,-130},{-106,-108},{
                    -134,-86},{-134,-98},{-200,-98}},
                lineColor={0,0,0},
                smooth=Smooth.None,
                fillColor={255,0,128},
                fillPattern=FillPattern.Solid),
              Line(
                points={{-198,26},{-198,72}},
                color={255,0,128},
                smooth=Smooth.None),
              Line(
                points={{200,70},{200,24}},
                color={255,0,128},
                smooth=Smooth.None),
              Polygon(
                points={{106,-94},{106,-114},{172,-114},{172,-126},{200,-104},{172,
                    -82},{172,-94},{106,-94}},
                lineColor={0,0,0},
                smooth=Smooth.None,
                fillColor={255,0,128},
                fillPattern=FillPattern.Solid)}));
      end Hydraulic_Filter;

      model Hydraulic_Line "LAMINAR flow loss in a pipe"
        extends
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Templates.Partial_Two_Port_Transport;

        parameter SI.Diameter diameter=0.01 "Circular hose diameter";
        parameter SI.Length length=1 "Length of hose";
        parameter SI.DynamicViscosity visc=1e-5;
        Real vel;
    protected
        parameter SI.Area flow_area=pi*diameter^2/4;
      equation
        vel = V/flow_area;
        dP = 64/(diameter/visc)*length/diameter*vel/2;
        annotation (Diagram(coordinateSystem(extent={{-100,-60},{100,60}},
                preserveAspectRatio=true), graphics), Icon(coordinateSystem(extent={{-100,
                  -60},{100,60}}, preserveAspectRatio=true), graphics={
              Ellipse(
                extent={{40,40},{100,-20}},
                lineColor={0,0,0},
                fillPattern=FillPattern.Solid,
                fillColor={255,170,213}),
              Polygon(
                points={{-70,20},{-20,20},{20,40},{70,40},{70,40},{70,-20},{70,-20},{20,
                    -20},{-20,-40},{-70,-40},{-70,-40},{-70,20},{-70,20}},
                smooth=Smooth.Bezier,
                fillColor={255,170,213},
                fillPattern=FillPattern.Solid,
                pattern=LinePattern.None,
                lineColor={0,0,0}),
              Line(
                points={{-70,20},{-20,20},{20,40},{70,40}},
                color={0,0,0},
                smooth=Smooth.Bezier),
              Line(
                points={{-70,-40},{-20,-40},{20,-20},{70,-20}},
                color={0,0,0},
                smooth=Smooth.Bezier),
              Ellipse(
                extent={{-100,20},{-40,-40}},
                lineColor={0,0,0},
                fillColor={95,95,95},
                fillPattern=FillPattern.Solid)}));
      end Hydraulic_Line;

      model Hydraulic_Manifold
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Valves.Crossover crossover(
          k_on=k_on,
          k_off=k_off,
          f_crit=f_crit)    annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={-74,10})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port P
                                                 annotation (Placement(transformation(
                extent={{-26,-118},{-6,-98}}), iconTransformation(extent={{-26,-118},
                  {-6,-98}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port T
                                                  annotation (Placement(
              transformation(extent={{30,-118},{50,-98}}), iconTransformation(extent=
                  {{30,-118},{50,-98}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port A_1
          annotation (Placement(transformation(extent={{-106,74},{-86,94}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port B_1
          annotation (Placement(transformation(extent={{86,74},{106,94}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port A_2
          annotation (Placement(transformation(extent={{-106,34},{-86,54}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port B_2
          annotation (Placement(transformation(extent={{86,34},{106,54}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port A_3
          annotation (Placement(transformation(extent={{-106,-6},{-86,14}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port B_3
          annotation (Placement(transformation(extent={{86,-6},{106,14}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port A_4
          annotation (Placement(transformation(extent={{-106,-46},{-86,-26}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port B_4
          annotation (Placement(transformation(extent={{86,-46},{106,-26}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port A_5
          annotation (Placement(transformation(extent={{-106,-86},{-86,-66}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port B_5
          annotation (Placement(transformation(extent={{86,-86},{106,-66}})));
        Modelica.Blocks.Interfaces.IntegerInput u annotation (Placement(
              transformation(
              extent={{-14,-14},{14,14}},
              rotation=-90,
              origin={-60,114})));
        Modelica.Blocks.Interfaces.IntegerInput u1 annotation (Placement(
              transformation(
              extent={{-14,-14},{14,14}},
              rotation=-90,
              origin={-20,114})));
        Modelica.Blocks.Interfaces.IntegerInput u2 annotation (Placement(
              transformation(
              extent={{-14,-14},{14,14}},
              rotation=-90,
              origin={20,114})));
        Modelica.Blocks.Interfaces.IntegerInput u3 annotation (Placement(
              transformation(
              extent={{-14,-14},{14,14}},
              rotation=-90,
              origin={60,114})));
        Modelica.Blocks.Interfaces.IntegerInput u4 annotation (Placement(
              transformation(
              extent={{-14,-14},{14,14}},
              rotation=-90,
              origin={100,114})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Valves.Crossover crossover1(
          k_on=k_on,
          k_off=k_off,
          f_crit=f_crit)     annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={-34,10})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Valves.Crossover crossover2(
          k_on=k_on,
          k_off=k_off,
          f_crit=f_crit)     annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={6,10})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Valves.Crossover crossover3(
          k_on=k_on,
          k_off=k_off,
          f_crit=f_crit)     annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={46,10})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Valves.Crossover crossover4(
          k_on=k_on,
          k_off=k_off,
          f_crit=f_crit)     annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={86,10})));
        parameter Real k_on=0.0001 "loss factor (>0) when on";
        parameter Real k_off=0.000001 "loss factor (>=0) when off";
        parameter SI.Frequency f_crit=50
        "if exact=false, critical frequency of filter to filter input signal";
      equation
        connect(P, crossover.P)              annotation (Line(
            points={{-16,-108},{-80,-108},{-80,0}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(P, crossover1.P)              annotation (Line(
            points={{-16,-108},{-16,-48},{-40,-48},{-40,0}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(P, crossover2.P)              annotation (Line(
            points={{-16,-108},{-8.88178e-016,-108},{-8.88178e-016,0}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(P, crossover3.P)              annotation (Line(
            points={{-16,-108},{30,-108},{30,-40},{40,-40},{40,0}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(P, crossover4.P)              annotation (Line(
            points={{-16,-108},{0,-108},{0,-20},{80,-20},{80,0}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(T, crossover.T)               annotation (Line(
            points={{40,-108},{40,-80},{-67.9,-80},{-67.9,0}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(T, crossover1.T)               annotation (Line(
            points={{40,-108},{40,-60},{-27.9,-60},{-27.9,0}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(T, crossover2.T)               annotation (Line(
            points={{40,-108},{40,-40},{12.1,-40},{12.1,0}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(T, crossover3.T)               annotation (Line(
            points={{40,-108},{40,-40},{52.1,-40},{52.1,0}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(T, crossover4.T)               annotation (Line(
            points={{40,-108},{92.1,-108},{92.1,0}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover.A, A_1)             annotation (Line(
            points={{-80,20},{-80,84},{-96,84}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover.B, B_1)             annotation (Line(
            points={{-67.9,20},{-67.9,84},{96,84}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover1.A, A_2)             annotation (Line(
            points={{-40,20},{-40,44},{-96,44}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover1.B, B_2)             annotation (Line(
            points={{-27.9,20},{-27.9,44},{96,44}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover2.A, A_3)             annotation (Line(
            points={{8.88178e-016,20},{8.88178e-016,4},{-96,4}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover2.B, B_3)             annotation (Line(
            points={{12.1,20},{12.1,4},{96,4}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover3.A, A_4)             annotation (Line(
            points={{40,20},{40,32},{20,32},{20,-36},{-96,-36}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover3.B, B_4)             annotation (Line(
            points={{52.1,20},{52.1,32},{68,32},{68,-36},{96,-36}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover4.A, A_5)              annotation (Line(
            points={{80,20},{80,34},{58,34},{58,-76},{-96,-76}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover4.B, B_5)              annotation (Line(
            points={{92.1,20},{92.1,36},{116,36},{116,-76},{96,-76}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(crossover.u, u) annotation (Line(
            points={{-85.2,10},{-120,10},{-120,114},{-60,114}},
            color={255,127,0},
            smooth=Smooth.None));
        connect(crossover1.u, u1) annotation (Line(
            points={{-45.2,10},{-54,10},{-54,114},{-20,114}},
            color={255,127,0},
            smooth=Smooth.None));
        connect(crossover2.u, u2) annotation (Line(
            points={{-5.2,10},{-6,10},{-6,114},{20,114}},
            color={255,127,0},
            smooth=Smooth.None));
        connect(crossover3.u, u3) annotation (Line(
            points={{34.8,10},{30,10},{30,114},{60,114}},
            color={255,127,0},
            smooth=Smooth.None));
        connect(crossover4.u, u4) annotation (Line(
            points={{74.8,10},{70,10},{70,114},{100,114}},
            color={255,127,0},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                  -320},{200,280}}),
                            graphics), Icon(graphics={
              Rectangle(
                extent={{-131,108},{133,-142}},
                lineColor={255,0,0},
                lineThickness=0.5,
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),
              Text(
                extent={{-84,100},{-30,66}},
                lineColor={255,0,0},
                pattern=LinePattern.Dash,
                lineThickness=0.5,
                textString="A_1"),
              Text(
                extent={{-84,62},{-30,28}},
                lineColor={255,0,0},
                pattern=LinePattern.Dash,
                lineThickness=0.5,
                textString="A_2"),
              Text(
                extent={{-84,21},{-30,-13}},
                lineColor={255,0,0},
                pattern=LinePattern.Dash,
                lineThickness=0.5,
                textString="A_3"),
              Text(
                extent={{-84,-19},{-30,-53}},
                lineColor={255,0,0},
                pattern=LinePattern.Dash,
                lineThickness=0.5,
                textString="A_4"),
              Text(
                extent={{-84,-59},{-30,-93}},
                lineColor={255,0,0},
                pattern=LinePattern.Dash,
                lineThickness=0.5,
                textString="A_5"),
              Text(
                extent={{24,100},{78,66}},
                lineColor={0,127,0},
                textString="B_1"),
              Text(
                extent={{24,60},{78,26}},
                lineColor={0,127,0},
                textString="B_2"),
              Text(
                extent={{24,18},{78,-16}},
                lineColor={0,127,0},
                textString="B_3"),
              Text(
                extent={{24,-20},{78,-54}},
                lineColor={0,127,0},
                textString="B_4"),
              Text(
                extent={{24,-58},{78,-92}},
                lineColor={0,127,0},
                textString="B_5"),
              Text(
                extent={{-72,-111},{-18,-145}},
                lineColor={255,0,0},
                pattern=LinePattern.Dash,
                lineThickness=0.5,
                textString="P"),
              Text(
                extent={{48,-111},{102,-145}},
                lineColor={0,127,0},
                pattern=LinePattern.Dash,
                lineThickness=0.5,
                textString="T")}));
      end Hydraulic_Manifold;

      model Hydraulic_Reservoir "Holds hydraulic fluid"

        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Orifices.Loss_Linear loss_Linear(k=1e-6)
          annotation (Placement(transformation(extent={{-48,-96},{-28,-76}})));
        parameter SI.Volume total_volume=10 "total volume of reservoir";
        parameter SI.Pressure atmospheric_pressure=1.1e5 "atmospheric pressure";
        parameter SI.Volume hydraulic_fluid_accumulated_start=total_volume/2
        "initial hydraulic fluid volume in reservoir";
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Components.Volumes.Hydraulic_Reservoir
                                                                                     hydraulic_Reservoir(
          total_volume=total_volume,
          atmospheric_pressure=atmospheric_pressure,
          hydraulic_fluid_accumulated(fixed=true, start=hydraulic_fluid_accumulated_start))
          annotation (Placement(transformation(extent={{-10,-28},{86,66}})));
        C2M2L_OM.MSL_Extend.Hydraulics_Simple.Interfaces.Hydraulic_Port hyd
          annotation (Placement(transformation(extent={{-88,-230},{-68,-210}})));
      equation
        connect(hyd, loss_Linear.hyd_a)  annotation (Line(
            points={{-78,-220},{-62,-220},{-62,-86},{-48,-86}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(loss_Linear.hyd_b, hydraulic_Reservoir.hydraulic_Port) annotation (
            Line(
            points={{-28,-86},{38,-86},{38,-28.94}},
            color={255,0,128},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                  -320},{200,280}}),
                               graphics), Icon(coordinateSystem(preserveAspectRatio=true,
                extent={{-200,-320},{200,280}}), graphics={
              Rectangle(
                extent={{-102,4},{98,-36}},
                lineColor={0,0,0},
                fillColor={255,0,128},
                fillPattern=FillPattern.Solid),
              Line(
                points={{-102,44},{-102,-36},{98,-36},{98,44}},
                color={0,0,0},
                smooth=Smooth.None),
              Line(
                points={{-2,-36},{-2,-126},{-78,-126},{-78,-218}},
                color={255,0,128},
                smooth=Smooth.None),
              Line(
                points={{-62,24},{-62,4}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-68,14},{-62,4},{-56,14}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-22,24},{-22,4}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{-28,14},{-22,4},{-16,14}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{18,24},{18,4}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{12,14},{18,4},{24,14}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{58,24},{58,4}},
                color={95,95,95},
                smooth=Smooth.None),
              Line(
                points={{52,14},{58,4},{64,14}},
                color={95,95,95},
                smooth=Smooth.None)}));
      end Hydraulic_Reservoir;

      package Interfaces
       extends Modelica.Icons.InterfacesPackage;

        partial model Pump_Hydraulic

          outer Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-196,-320},{-176,-300}})));
          Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
              includeBearingConnector=world.driveTrainMechanics3D)
            annotation (Placement(transformation(extent={{-214,-10},{-184,20}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Interfaces.Hydraulic_Port
                                                hyd_in
          "Port that nominally flows hydraulic fluid in"
            annotation (Placement(transformation(extent={{-210,70},{-190,90}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Interfaces.Hydraulic_Port
                                                hyd_out
          "Port that nominally flows hydraulic fluid out"
            annotation (Placement(transformation(extent={{190,70},{210,90}})));
          annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                    -320},{200,280}}), graphics), Icon(coordinateSystem(
                  preserveAspectRatio=true, extent={{-200,-320},{200,280}}), graphics={
                Rectangle(
                  extent={{-40,11},{40,-11}},
                  lineColor={0,0,0},
                  fillPattern=FillPattern.HorizontalCylinder,
                  fillColor={95,95,95},
                  origin={-1,72},
                  rotation=90),
                Ellipse(
                  extent={{-62,166},{58,46}},
                  lineColor={255,0,128},
                  fillColor={215,215,215},
                  fillPattern=FillPattern.Solid),
                Line(
                  points={{70,106},{108,106},{108,80},{200,80}},
                  color={255,0,128},
                  smooth=Smooth.None),
                Polygon(
                  points={{-20,20},{-20,-20},{20,0},{-20,20}},
                  lineColor={0,0,0},
                  smooth=Smooth.None,
                  fillColor={95,95,95},
                  fillPattern=FillPattern.Solid,
                  origin={-56,106},
                  rotation=180),
                Polygon(
                  points={{30,126},{30,86},{70,106},{30,126}},
                  lineColor={0,0,0},
                  smooth=Smooth.None,
                  fillColor={95,95,95},
                  fillPattern=FillPattern.Solid),
                Line(
                  points={{-188,0},{0,0},{0,36}},
                  color={95,95,95},
                  smooth=Smooth.None,
                  pattern=LinePattern.Dash),
                Line(
                  points={{-70,106},{-108,106},{-108,80},{-200,80}},
                  color={255,0,128},
                  smooth=Smooth.None)}));
        end Pump_Hydraulic;
      end Interfaces;

      package Manifold_Open_Center
      "Contains manifold that have an open center position"
      extends Modelica.Icons.Package;

        package Tests
        extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

        end Tests;
      end Manifold_Open_Center;

      model Pump_Hydraulic "Standalone hydraulic pump"
      extends
        C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Hydraulic.Interfaces.Pump_Hydraulic;
        C2M2L_OM.C2M2L_Delivered_Component_Implementations.Hydraulic.Pump_Hydraulic
          pump_Hydraulic(
          useSupport=false,
          J=J,
          cc_per_rev=cc_per_rev,
          fixed_efficiency=fixed_efficiency)
          annotation (Placement(transformation(extent={{-62,-102},{68,94}})));
        parameter Boolean useSupport=false
        "= true, if support flange enabled, otherwise implicitly grounded";
        parameter SI.Inertia J=0.001 "Rotational moment of inertia";
        parameter Real cc_per_rev=10;
        parameter Real fixed_efficiency=0.7;
      equation
        connect(hyd_in, pump_Hydraulic.hyd_in) annotation (Line(
            points={{-200,80},{-130,80},{-130,28.6667},{-62,28.6667}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(pump_Hydraulic.hyd_out, hyd_out) annotation (Line(
            points={{68,28.6667},{94,28.6667},{94,30},{120,30},{120,78},{200,78},{200,
                80}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(pump_Hydraulic.brg_01, brg_01.flange) annotation (Line(
            points={{-62,2.53333},{-133,2.53333},{-133,5},{-199,5}},
            color={0,0,0},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                  -320},{200,280}}), graphics));
      end Pump_Hydraulic;

      package Tests
      extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

        model Test_Accumulator
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
              P_constant=3000000)
            annotation (Placement(transformation(extent={{-80,-20},{-60,0}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
          Hydraulic_Accumulator hydraulic_Accumulator
            annotation (Placement(transformation(extent={{-18,12},{22,50}})));
        equation
          connect(pressure_Source.hydraulic_port, hydraulic_Accumulator.hyd)
            annotation (Line(
              points={{-60,-10},{-34,-10},{-34,-10.8},{-13.6,-10.8}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Accumulator;

        model Test_Accumulator_Ricardo
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Accumulator
            hydraulic_Accumulator
            annotation (Placement(transformation(extent={{-24,-24},{16,36}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
              P_constant=3000000)
            annotation (Placement(transformation(extent={{-80,-20},{-60,0}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-100,-100},{-80,-80}})));
        equation
          connect(pressure_Source.hydraulic_port, hydraulic_Accumulator.hyd)
            annotation (Line(
              points={{-60,-10},{-36,-10},{-36,-14},{-11.8,-14}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Accumulator_Ricardo;

        model Test_Attenuator
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
              P_constant=3000000)
            annotation (Placement(transformation(extent={{-102,18},{-82,38}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source1(
              P_constant=3000000)
            annotation (Placement(transformation(extent={{80,18},{60,38}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Losses.Loss_Linear
                                                         loss_Linear(k=1e-5)
            annotation (Placement(transformation(extent={{-50,18},{-30,38}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Losses.Loss_Linear
                                                         loss_Linear1(k=1e-5)
            annotation (Placement(transformation(extent={{30,18},{50,38}})));
          replaceable Hydraulic_Attentuator
            hydraulic_Attentuator(
            total_volume=30,
            hydraulic_fluid_in_attenuator_start=5,
            k=1e-5,
            empty_pressure=1000000) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Attentuator(
            total_volume=30,
            hydraulic_fluid_in_attenuator_start=5,
            k=1e-5,
            empty_pressure=1000000)
                    annotation (Placement(transformation(extent={{-24,-4},{16,56}})));
        equation
          connect(pressure_Source.hydraulic_port, loss_Linear.hyd_a) annotation (Line(
              points={{-82,28},{-50,28}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(loss_Linear1.hyd_b, pressure_Source1.hydraulic_port) annotation (Line(
              points={{50,28},{60,28}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(loss_Linear.hyd_b, hydraulic_Attentuator.hyd_in) annotation (Line(
              points={{-30,28},{-28,28},{-28,36},{-24,36}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_Attentuator.hyd_out, loss_Linear1.hyd_a) annotation (Line(
              points={{16,36},{24,36},{24,28},{30,28}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Attenuator;

        model Test_Hydraulic_Filter
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable Hydraulic_Filter
            hydraulic_Filter(loss_factor=1e-4) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Filter
            annotation (Placement(transformation(extent={{-28,-8},{12,52}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Flow_Source pressure_Source(
              V_constant=-1)
            annotation (Placement(transformation(extent={{-80,22},{-60,42}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source1(
              P_constant=1000000)
            annotation (Placement(transformation(extent={{80,22},{60,42}})));
        equation

          connect(pressure_Source.hydraulic_port, hydraulic_Filter.hyd_in) annotation (
              Line(
              points={{-60,32},{-28,32}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_Filter.hyd_out, pressure_Source1.hydraulic_port)
            annotation (Line(
              points={{12,32},{60,32}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Hydraulic_Filter;

        model Test_Hydraulic_Fitting
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Fitting_Generic
            hydraulic_Fitting(loss_coeff=1, flow_area=0.001)
                             annotation (Placement(transformation(extent={{-30,-22},{10,38}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source2(
              P_constant=2500000)
            annotation (Placement(transformation(extent={{-7,-7},{7,7}},
                rotation=90,
                origin={-66,21})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source3(
              P_constant=2000000)
            annotation (Placement(transformation(extent={{-7,-7},{7,7}},
                rotation=90,
                origin={53,19})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false)
            annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        equation

          connect(pressure_Source2.hydraulic_port, hydraulic_Fitting.hyd_in)
            annotation (Line(
              points={{-66,28},{-64,28},{-64,38},{-46,38},{-46,18},{-30,18}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_Fitting.hyd_out, pressure_Source3.hydraulic_port)
            annotation (Line(
              points={{10,18},{40,18},{40,44},{53,44},{53,26}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(world.frame_b, hydraulic_Fitting.origin) annotation (Line(
              points={{-20,-50},{-10,-50},{-10,-10}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Hydraulic_Fitting;

        model Test_Hydraulic_Line
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source1(
              P_constant=3000000)
            annotation (Placement(transformation(extent={{40,20},{20,40}})));
          replaceable Hydraulic_Line
            hydraulic_Line constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Line
            annotation (Placement(transformation(extent={{-16,24},{4,36}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Flow_Source_Actuated pressure_Source_Actuated
            annotation (Placement(transformation(extent={{-60,20},{-40,40}})));
          Modelica.Blocks.Sources.Sine sine(freqHz=1, amplitude=0.001)
            annotation (Placement(transformation(extent={{-100,20},{-80,40}})));
        equation
          connect(hydraulic_Line.hyd_b, pressure_Source1.hydraulic_port) annotation (
              Line(
              points={{4,30},{20,30}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(pressure_Source_Actuated.hydraulic_port, hydraulic_Line.hyd_a)
            annotation (Line(
              points={{-40,30},{-16,30}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(sine.y, pressure_Source_Actuated.V_in) annotation (Line(
              points={{-79,30},{-62,30}},
              color={0,0,127},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Hydraulic_Line;

        model Test_Hydraulic_Manifold
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable Hydraulic_Manifold
            hydraulic_manifold(f_crit=5) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Manifold
            annotation (Placement(transformation(extent={{-48,16},{-2,86}})));
          Modelica.Mechanics.Translational.Components.Mass mass(
            L=0.01,
            m=100)
            annotation (Placement(transformation(extent={{60,-180},{80,-160}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Translational
            hydraulic_Mechanical_Conversion_Translational(piston_area=pi*0.05^2/4)
            annotation (Placement(transformation(extent={{-40,-190},{-20,-170}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source2(
              P_constant=2000000)
            annotation (Placement(transformation(extent={{-10,-10.5},{10,10.5}},
                rotation=90,
                origin={-40.5,-10})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source3(
              P_constant=100000)
            annotation (Placement(transformation(extent={{-10,-10},{10,10}},
                rotation=90,
                origin={-10,-10})));
          Modelica.Blocks.Sources.IntegerStep integerConstant1(
            offset=-1,
            startTime=0.5,
            height=1)
            annotation (Placement(transformation(extent={{-94,84},{-80,98}})));
          Modelica.Mechanics.Translational.Components.Mass mass1(
            L=0.01, m=200)
            annotation (Placement(transformation(extent={{60,-150},{80,-130}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Translational
            hydraulic_Mechanical_Conversion_Translational1(piston_area=pi*0.05^2/4)
            annotation (Placement(transformation(extent={{-40,-160},{-20,-140}})));
          Modelica.Mechanics.Translational.Components.Mass mass2(
            L=0.01, m=300)
            annotation (Placement(transformation(extent={{60,-120},{80,-100}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Translational
            hydraulic_Mechanical_Conversion_Translational2(piston_area=pi*0.05^2/4)
            annotation (Placement(transformation(extent={{-40,-130},{-20,-110}})));
          Modelica.Mechanics.Translational.Components.Mass mass3(
            L=0.01, m=400)
            annotation (Placement(transformation(extent={{60,-90},{80,-70}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Translational
            hydraulic_Mechanical_Conversion_Translational3(piston_area=pi*0.05^2/4)
            annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
          Modelica.Mechanics.Translational.Components.Mass mass4(
            L=0.01, m=500)
            annotation (Placement(transformation(extent={{60,-60},{80,-40}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Translational
            hydraulic_Mechanical_Conversion_Translational4(piston_area=pi*0.05^2/4)
            annotation (Placement(transformation(extent={{-40,-70},{-20,-50}})));
        equation

          connect(hydraulic_Mechanical_Conversion_Translational.flange, mass.flange_a)
            annotation (Line(
              points={{-30,-170},{60,-170}},
              color={0,127,0},
              smooth=Smooth.None));
          connect(integerConstant1.y, hydraulic_manifold.u) annotation (Line(
              points={{-79.3,91},{-38.8,91},{-38.8,90.9}},
              color={255,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(hydraulic_manifold.u1, integerConstant1.y) annotation (Line(
              points={{-29.6,90.9},{-29.6,91},{-79.3,91}},
              color={255,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(hydraulic_manifold.u2, integerConstant1.y) annotation (Line(
              points={{-20.4,90.9},{-20.4,91},{-79.3,91}},
              color={255,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(hydraulic_manifold.u3, integerConstant1.y) annotation (Line(
              points={{-11.2,90.9},{-11.2,91},{-79.3,91}},
              color={255,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(integerConstant1.y, hydraulic_manifold.u4) annotation (Line(
              points={{-79.3,91},{-2,91},{-2,90.9}},
              color={255,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(hydraulic_Mechanical_Conversion_Translational1.flange, mass1.flange_a)
            annotation (Line(
              points={{-30,-140},{60,-140}},
              color={0,127,0},
              smooth=Smooth.None));
          connect(hydraulic_Mechanical_Conversion_Translational2.flange, mass2.flange_a)
            annotation (Line(
              points={{-30,-110},{60,-110}},
              color={0,127,0},
              smooth=Smooth.None));
          connect(hydraulic_Mechanical_Conversion_Translational3.flange, mass3.flange_a)
            annotation (Line(
              points={{-30,-80},{60,-80}},
              color={0,127,0},
              smooth=Smooth.None));
          connect(hydraulic_Mechanical_Conversion_Translational4.flange, mass4.flange_a)
            annotation (Line(
              points={{-30,-50},{60,-50}},
              color={0,127,0},
              smooth=Smooth.None));
          connect(hydraulic_manifold.A_1, hydraulic_Mechanical_Conversion_Translational.hyd_a)
            annotation (Line(
              points={{-47.08,80.4},{-100,80.4},{-100,-180},{-40,-180}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.B_1, hydraulic_Mechanical_Conversion_Translational.hyd_b)
            annotation (Line(
              points={{-2.92,80.4},{50,80.4},{50,-180},{-20,-180}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.A_2,
            hydraulic_Mechanical_Conversion_Translational1.hyd_a) annotation (Line(
              points={{-47.08,66.4},{-90,66.4},{-90,-150},{-40,-150}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.B_2,
            hydraulic_Mechanical_Conversion_Translational1.hyd_b) annotation (Line(
              points={{-2.92,66.4},{40,66.4},{40,-150},{-20,-150}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.A_3,
            hydraulic_Mechanical_Conversion_Translational2.hyd_a) annotation (Line(
              points={{-47.08,52.4},{-80,52.4},{-80,-120},{-40,-120}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.B_3,
            hydraulic_Mechanical_Conversion_Translational2.hyd_b) annotation (Line(
              points={{-2.92,52.4},{28,52.4},{28,-120},{-20,-120}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.A_4,
            hydraulic_Mechanical_Conversion_Translational3.hyd_a) annotation (Line(
              points={{-47.08,38.4},{-70,38.4},{-70,-90},{-40,-90}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.B_4,
            hydraulic_Mechanical_Conversion_Translational3.hyd_b) annotation (Line(
              points={{-2.92,38.4},{20,38.4},{20,-90},{-20,-90}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.A_5,
            hydraulic_Mechanical_Conversion_Translational4.hyd_a) annotation (Line(
              points={{-47.08,24.4},{-60,24.4},{-60,-60},{-40,-60}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.B_5,
            hydraulic_Mechanical_Conversion_Translational4.hyd_b) annotation (Line(
              points={{-2.92,24.4},{10,24.4},{10,-60},{-20,-60}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(pressure_Source2.hydraulic_port, hydraulic_manifold.P) annotation (
              Line(
              points={{-40.5,0},{-40.5,32},{-28.68,32},{-28.68,13.2}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(pressure_Source3.hydraulic_port, hydraulic_manifold.T) annotation (
              Line(
              points={{-10,0},{-10,34},{-15.8,34},{-15.8,13.2}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(coordinateSystem(extent={{-100,-200},{100,100}}),
                              graphics), Icon(coordinateSystem(extent={{-100,-200},{100,
                    100}}),                   graphics));
        end Test_Hydraulic_Manifold;

        model Test_Pump_Hydraulic
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
              P_constant=22000000)
            annotation (Placement(transformation(extent={{-60,36},{-40,56}})));
          replaceable Pump_Hydraulic test_hydraulic_pump(
            useSupport=false,
            cc_per_rev=50,
            fixed_efficiency=0.98) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Pump_Hydraulic
            annotation (Placement(transformation(extent={{18,10},{-18,64}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{-90,-74},{-70,-54}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source1(
              P_constant=24000000)
            annotation (Placement(transformation(extent={{60,40},{40,60}})));
          inner Modelica.Mechanics.MultiBody.World world1(
            gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.UniformGravity,
            n={-1,0,0},
            enableAnimation=false,
            driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-50,-20},{-30,0}})));
          inner C2M2L_OM.MSL_Extend.Environments.Lumped_Thermal_Fixed_HTC
                                                      env
            annotation (Placement(transformation(extent={{-36,-66},{-16,-46}})));
          Testing_Load testing_Load
            annotation (Placement(transformation(extent={{50,-22},{70,-2}})));
        equation
          connect(pressure_Source.hydraulic_port, test_hydraulic_pump.hyd_out)
            annotation (Line(
              points={{-40,46},{-18,46}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(test_hydraulic_pump.hyd_in, pressure_Source1.hydraulic_port)
            annotation (Line(
              points={{18,46},{30,46},{30,50},{40,50}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(test_hydraulic_pump.brg_01, testing_Load.flange) annotation (Line(
              points={{17.91,39.25},{34,39.25},{34,-12},{50,-12}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Pump_Hydraulic;

        model Test_Pump_Hydraulic_original
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
              P_constant=22000000)
            annotation (Placement(transformation(extent={{-60,36},{-40,56}})));
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Pump_Hydraulic
            test_hydraulic_pump
            annotation (Placement(transformation(extent={{18,10},{-18,64}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{-90,-74},{-70,-54}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
            annotation (Placement(transformation(extent={{-46,-76},{-26,-56}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source1(
              P_constant=24000000)
            annotation (Placement(transformation(extent={{60,40},{40,60}})));
          C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load testing_Torque
            annotation (Placement(transformation(extent={{24,-16},{4,4}})));
          inner Modelica.Mechanics.MultiBody.World world1(
            gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.UniformGravity,
            n={-1,0,0},
            enableAnimation=true,
            driveTrainMechanics3D=true)
            annotation (Placement(transformation(extent={{-40,-20},{-20,0}})));
        equation
          connect(pressure_Source.hydraulic_port, test_hydraulic_pump.hyd_out)
            annotation (Line(
              points={{-40,46},{-18,46}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(testing_Torque.flange, test_hydraulic_pump.brg_01) annotation (Line(
              points={{24,-6},{28,-6},{28,38.8},{18,38.8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(test_hydraulic_pump.hyd_in, pressure_Source1.hydraulic_port)
            annotation (Line(
              points={{18,46},{30,46},{30,50},{40,50}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(world1.frame_b, test_hydraulic_pump.origin) annotation (Line(
              points={{-20,-10},{-10,-10},{-10,20.8},{0,20.8}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Pump_Hydraulic_original;

        model Test_Pump_Hydraulic_Ricardo
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
              P_constant=22000000)
            annotation (Placement(transformation(extent={{-60,36},{-40,56}})));
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Pump_Hydraulic
            test_hydraulic_pump
            annotation (Placement(transformation(extent={{18,10},{-18,64}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{-90,-74},{-70,-54}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC env
            annotation (Placement(transformation(extent={{-46,-76},{-26,-56}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source1(
              P_constant=24000000)
            annotation (Placement(transformation(extent={{60,40},{40,60}})));
          C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Testing_Load testing_Torque
            annotation (Placement(transformation(extent={{24,-16},{4,4}})));
          inner Modelica.Mechanics.MultiBody.World world1(
            gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.UniformGravity,
            n={-1,0,0},
            enableAnimation=false,
            driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-50,-20},{-30,0}})));
        equation
          connect(pressure_Source.hydraulic_port, test_hydraulic_pump.hyd_out)
            annotation (Line(
              points={{-40,46},{-18,46}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(testing_Torque.flange, test_hydraulic_pump.brg_01) annotation (Line(
              points={{24,-6},{28,-6},{28,38.8},{18,38.8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(test_hydraulic_pump.hyd_in, pressure_Source1.hydraulic_port)
            annotation (Line(
              points={{18,46},{30,46},{30,50},{40,50}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Pump_Hydraulic_Ricardo;

        model Test_Reservoir
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable Hydraulic_Reservoir hydraulic_Reservoir(total_volume=0.1)
            constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Reservoir
            annotation (Placement(transformation(extent={{-16,-48},{24,12}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
              P_constant=200000)
            annotation (Placement(transformation(extent={{-100,0},{-80,20}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-100,78},{-80,98}})));
        equation

          connect(pressure_Source.hydraulic_port, hydraulic_Reservoir.hyd) annotation (
              Line(
              points={{-80,10},{-38,10},{-38,-38},{-3.8,-38}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Reservoir;

        model Test_Reservoir_original
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Reservoir
            hydraulic_Reservoir
            annotation (Placement(transformation(extent={{-16,-48},{24,12}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
              P_constant=200000)
            annotation (Placement(transformation(extent={{-100,0},{-80,20}})));
        equation

          connect(pressure_Source.hydraulic_port, hydraulic_Reservoir.hyd) annotation (
              Line(
              points={{-80,10},{-38,10},{-38,-38},{-3.8,-38}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Reservoir_original;

        model Test_Reservoir_Ricardo
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Reservoir
            hydraulic_Reservoir
            annotation (Placement(transformation(extent={{-16,-48},{24,12}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
              P_constant=200000)
            annotation (Placement(transformation(extent={{-100,0},{-80,20}})));
          inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
              driveTrainMechanics3D=false)
            annotation (Placement(transformation(extent={{-100,78},{-80,98}})));
        equation

          connect(pressure_Source.hydraulic_port, hydraulic_Reservoir.hyd) annotation (
              Line(
              points={{-80,10},{-38,10},{-38,-38},{-3.8,-38}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Reservoir_Ricardo;

        model Testing_Load
        extends C2M2L_Ext.Interfaces.Test_Bed_C2M2L;
          Modelica.Mechanics.Rotational.Components.Damper damper(d=d)
            annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
          Modelica.Mechanics.Rotational.Components.Inertia inertia(J=J, w(fixed=fix_w_start,
                start=w_start),
            stateSelect=stateSelect)
            annotation (Placement(transformation(extent={{-60,-10},{-40,10}})));
          Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing flange(
              includeBearingConnector=false)
            annotation (Placement(transformation(extent={{-110,-10},{-90,10}})));
          parameter Boolean fix_w_start = false;
          parameter SI.AngularVelocity w_start = 0
          "Initial fixed rotation speed";
            parameter SI.Inertia J=1 "Moment of inertia";
          parameter SI.RotationalDampingConstant d=1 "Damping constant";

          parameter StateSelect stateSelect=StateSelect.default
          "Priority to use phi and w as states";
      protected
          Modelica.Mechanics.Rotational.Components.Fixed fixed
          "Fixed support/housing, if not useSupport"
            annotation (Placement(transformation(extent={{26,-11},{46,9}})));
        equation
          connect(inertia.flange_b, damper.flange_a)            annotation (Line(
              points={{-40,0},{-20,0}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(inertia.flange_a, flange.flange)             annotation (Line(
              points={{-60,0},{-100,0}},
              color={0,0,0},
              smooth=Smooth.None));
          connect(damper.flange_b, fixed.flange) annotation (Line(
              points={{0,0},{18,0},{18,-1},{36,-1}},
              color={0,0,0},
              smooth=Smooth.None));
          annotation (Diagram(coordinateSystem(extent={{-100,-100},{100,100}},
                  preserveAspectRatio=true), graphics), Icon(coordinateSystem(extent={{-100,
                    -100},{100,100}}, preserveAspectRatio=true), graphics={
                Rectangle(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid),
                Text(
                  extent={{-100,100},{100,-100}},
                  lineColor={244,232,255},
                  textString="L"),
                Text(
                  extent={{-140,80},{140,40}},
                  lineColor={128,128,128},
                  textString="J = %J"),
                Text(
                  extent={{-140,40},{140,0}},
                  lineColor={128,128,128},
                  textString="D = %d"),
                Text(
                  extent={{-160,160},{160,120}},
                  lineColor={0,0,255},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}));
        end Testing_Load;

        model Test_Attenuator_original
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source(
              P_constant=3000000)
            annotation (Placement(transformation(extent={{-102,18},{-82,38}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source1(
              P_constant=3000000)
            annotation (Placement(transformation(extent={{80,18},{60,38}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Losses.Loss_Linear
                                                         loss_Linear(k=1e-5)
            annotation (Placement(transformation(extent={{-50,18},{-30,38}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Losses.Loss_Linear
                                                         loss_Linear1(k=1e-5)
            annotation (Placement(transformation(extent={{30,18},{50,38}})));
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Attentuator
            hydraulic_Attentuator(
            total_volume=30,
            hydraulic_fluid_in_attenuator_start=5,
            k=1e-5,
            empty_pressure=1000000)
                    annotation (Placement(transformation(extent={{-24,-4},{16,56}})));
        equation
          connect(pressure_Source.hydraulic_port, loss_Linear.hyd_a) annotation (Line(
              points={{-82,28},{-50,28}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(loss_Linear1.hyd_b, pressure_Source1.hydraulic_port) annotation (Line(
              points={{50,28},{60,28}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(loss_Linear.hyd_b, hydraulic_Attentuator.hyd_in) annotation (Line(
              points={{-30,28},{-28,28},{-28,36},{-24,36}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_Attentuator.hyd_out, loss_Linear1.hyd_a) annotation (Line(
              points={{16,36},{24,36},{24,28},{30,28}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Attenuator_original;

        model Test_Hydraulic_Filter_original
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Filter
            hydraulic_Filter(loss_factor=1e-4) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Filter
            annotation (Placement(transformation(extent={{-28,-8},{12,52}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Flow_Source pressure_Source(
              V_constant=-1)
            annotation (Placement(transformation(extent={{-80,22},{-60,42}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source1(
              P_constant=1000000)
            annotation (Placement(transformation(extent={{80,22},{60,42}})));
        equation

          connect(pressure_Source.hydraulic_port, hydraulic_Filter.hyd_in) annotation (
              Line(
              points={{-60,32},{-28,32}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_Filter.hyd_out, pressure_Source1.hydraulic_port)
            annotation (Line(
              points={{12,32},{60,32}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Hydraulic_Filter_original;

        model Test_Hydraulic_Line_original
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source1(
              P_constant=3000000)
            annotation (Placement(transformation(extent={{40,20},{20,40}})));
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Line
            hydraulic_Line
            annotation (Placement(transformation(extent={{-16,24},{4,36}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Flow_Source_Actuated pressure_Source_Actuated
            annotation (Placement(transformation(extent={{-60,20},{-40,40}})));
          Modelica.Blocks.Sources.Sine sine(freqHz=1, amplitude=0.001)
            annotation (Placement(transformation(extent={{-100,20},{-80,40}})));
        equation
          connect(hydraulic_Line.hyd_b, pressure_Source1.hydraulic_port) annotation (
              Line(
              points={{4,30},{20,30}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(pressure_Source_Actuated.hydraulic_port, hydraulic_Line.hyd_a)
            annotation (Line(
              points={{-40,30},{-16,30}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(sine.y, pressure_Source_Actuated.V_in) annotation (Line(
              points={{-79,30},{-62,30}},
              color={0,0,127},
              smooth=Smooth.None));
          annotation (Diagram(graphics));
        end Test_Hydraulic_Line_original;

        model Test_Hydraulic_Manifold_original
        extends C2M2L_Ext.Icons.Simple_Test_Case;
          replaceable
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Manifold
            hydraulic_manifold(f_crit=5) constrainedby
          C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Manifold
            annotation (Placement(transformation(extent={{-48,16},{-2,86}})));
          Modelica.Mechanics.Translational.Components.Mass mass(
            L=0.01,
            m=100)
            annotation (Placement(transformation(extent={{60,-180},{80,-160}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Translational
            hydraulic_Mechanical_Conversion_Translational(piston_area=pi*0.05^2/4)
            annotation (Placement(transformation(extent={{-40,-190},{-20,-170}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source2(
              P_constant=2000000)
            annotation (Placement(transformation(extent={{-10,-10.5},{10,10.5}},
                rotation=90,
                origin={-40.5,-10})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Sources.Pressure_Source pressure_Source3(
              P_constant=100000)
            annotation (Placement(transformation(extent={{-10,-10},{10,10}},
                rotation=90,
                origin={-10,-10})));
          Modelica.Blocks.Sources.IntegerStep integerConstant1(
            offset=-1,
            startTime=0.5,
            height=1)
            annotation (Placement(transformation(extent={{-94,84},{-80,98}})));
          Modelica.Mechanics.Translational.Components.Mass mass1(
            L=0.01, m=200)
            annotation (Placement(transformation(extent={{60,-150},{80,-130}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Translational
            hydraulic_Mechanical_Conversion_Translational1(piston_area=pi*0.05^2/4)
            annotation (Placement(transformation(extent={{-40,-160},{-20,-140}})));
          Modelica.Mechanics.Translational.Components.Mass mass2(
            L=0.01, m=300)
            annotation (Placement(transformation(extent={{60,-120},{80,-100}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Translational
            hydraulic_Mechanical_Conversion_Translational2(piston_area=pi*0.05^2/4)
            annotation (Placement(transformation(extent={{-40,-130},{-20,-110}})));
          Modelica.Mechanics.Translational.Components.Mass mass3(
            L=0.01, m=400)
            annotation (Placement(transformation(extent={{60,-90},{80,-70}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Translational
            hydraulic_Mechanical_Conversion_Translational3(piston_area=pi*0.05^2/4)
            annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
          Modelica.Mechanics.Translational.Components.Mass mass4(
            L=0.01, m=500)
            annotation (Placement(transformation(extent={{60,-60},{80,-40}})));
          C2M2L_Ext.Fluid.Hydraulics_Simple.Mechanical.Hydraulic_Mechanical_Conversion_Translational
            hydraulic_Mechanical_Conversion_Translational4(piston_area=pi*0.05^2/4)
            annotation (Placement(transformation(extent={{-40,-70},{-20,-50}})));
        equation

          connect(hydraulic_Mechanical_Conversion_Translational.flange, mass.flange_a)
            annotation (Line(
              points={{-30,-170},{60,-170}},
              color={0,127,0},
              smooth=Smooth.None));
          connect(integerConstant1.y, hydraulic_manifold.u) annotation (Line(
              points={{-79.3,91},{-31.9,91},{-31.9,66.6333}},
              color={255,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(hydraulic_manifold.u1, integerConstant1.y) annotation (Line(
              points={{-27.3,66.6333},{-27.3,91},{-79.3,91}},
              color={255,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(hydraulic_manifold.u2, integerConstant1.y) annotation (Line(
              points={{-22.7,66.6333},{-22.7,91},{-79.3,91}},
              color={255,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(hydraulic_manifold.u3, integerConstant1.y) annotation (Line(
              points={{-18.1,66.6333},{-18.1,91},{-79.3,91}},
              color={255,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(integerConstant1.y, hydraulic_manifold.u4) annotation (Line(
              points={{-79.3,91},{-13.5,91},{-13.5,66.6333}},
              color={255,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(hydraulic_Mechanical_Conversion_Translational1.flange, mass1.flange_a)
            annotation (Line(
              points={{-30,-140},{60,-140}},
              color={0,127,0},
              smooth=Smooth.None));
          connect(hydraulic_Mechanical_Conversion_Translational2.flange, mass2.flange_a)
            annotation (Line(
              points={{-30,-110},{60,-110}},
              color={0,127,0},
              smooth=Smooth.None));
          connect(hydraulic_Mechanical_Conversion_Translational3.flange, mass3.flange_a)
            annotation (Line(
              points={{-30,-80},{60,-80}},
              color={0,127,0},
              smooth=Smooth.None));
          connect(hydraulic_Mechanical_Conversion_Translational4.flange, mass4.flange_a)
            annotation (Line(
              points={{-30,-50},{60,-50}},
              color={0,127,0},
              smooth=Smooth.None));
          connect(hydraulic_manifold.A_1, hydraulic_Mechanical_Conversion_Translational.hyd_a)
            annotation (Line(
              points={{-36.04,63.1333},{-100,63.1333},{-100,-180},{-40,-180}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.B_1, hydraulic_Mechanical_Conversion_Translational.hyd_b)
            annotation (Line(
              points={{-13.96,63.1333},{50,63.1333},{50,-180},{-20,-180}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.A_2,
            hydraulic_Mechanical_Conversion_Translational1.hyd_a) annotation (Line(
              points={{-36.04,58.4667},{-90,58.4667},{-90,-150},{-40,-150}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.B_2,
            hydraulic_Mechanical_Conversion_Translational1.hyd_b) annotation (Line(
              points={{-13.96,58.4667},{40,58.4667},{40,-150},{-20,-150}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.A_3,
            hydraulic_Mechanical_Conversion_Translational2.hyd_a) annotation (Line(
              points={{-36.04,53.8},{-80,53.8},{-80,-120},{-40,-120}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.B_3,
            hydraulic_Mechanical_Conversion_Translational2.hyd_b) annotation (Line(
              points={{-13.96,53.8},{28,53.8},{28,-120},{-20,-120}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.A_4,
            hydraulic_Mechanical_Conversion_Translational3.hyd_a) annotation (Line(
              points={{-36.04,49.1333},{-70,49.1333},{-70,-90},{-40,-90}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.B_4,
            hydraulic_Mechanical_Conversion_Translational3.hyd_b) annotation (Line(
              points={{-13.96,49.1333},{20,49.1333},{20,-90},{-20,-90}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.A_5,
            hydraulic_Mechanical_Conversion_Translational4.hyd_a) annotation (Line(
              points={{-36.04,44.4667},{-60,44.4667},{-60,-60},{-40,-60}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(hydraulic_manifold.B_5,
            hydraulic_Mechanical_Conversion_Translational4.hyd_b) annotation (Line(
              points={{-13.96,44.4667},{10,44.4667},{10,-60},{-20,-60}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(pressure_Source2.hydraulic_port, hydraulic_manifold.P) annotation (
              Line(
              points={{-40.5,0},{-40.5,32},{-26.84,32},{-26.84,40.7333}},
              color={255,0,128},
              smooth=Smooth.None));
          connect(pressure_Source3.hydraulic_port, hydraulic_manifold.T) annotation (
              Line(
              points={{-10,0},{-10,34},{-20.4,34},{-20.4,40.7333}},
              color={255,0,128},
              smooth=Smooth.None));
          annotation (Diagram(coordinateSystem(extent={{-100,-200},{100,100}}),
                              graphics), Icon(coordinateSystem(extent={{-100,-200},{100,
                    100}}),                   graphics));
        end Test_Hydraulic_Manifold_original;
      end Tests;
    end Hydraulic;

    package Prime_Movers
    "Devices that convert chemical energy to mechanical energy (e.g. engines)"
    extends Modelica.Icons.Package;

      package Air_Intake_Systems
      "Components responsible for delivering charge air to a prime mover"
      extends Modelica.Icons.Package;

        package Charge_Cooling
        "Components related to cooling of the charge air after compression (e.g. at the outlet from a turbo or supercharger)"
        extends Modelica.Icons.Package;

          model Charge_Cooler_Air_To_Air
          "Charge cooler that uses air as the cooling medium"
            extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Interfaces.Charge_Cooler_Air_To_Air;

            C2M2L_OM.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Air
              charge_Cooler_Air_To_Air(
              effectiveness_table=effectiveness_table,
              core_length=core_length,
              core_width=core_width,
              core_depth=core_depth,
              ref_core_length=ref_core_length,
              ref_core_width=ref_core_width,
              ref_core_depth=ref_core_depth,
              pressure_drop_a=pressure_drop_a,
              pressure_drop_b=pressure_drop_b,
              loss_spec_side_a=loss_spec_side_a,
              loss_spec_side_b=loss_spec_side_b,
              flow_spec_side_a=flow_spec_side_a,
              flow_spec_side_b=flow_spec_side_b,
              effec_spec=effec_spec,
              flow_effec_spec=flow_effec_spec)
              annotation (Placement(transformation(extent={{-34,-26},{58,48}})));
            parameter Real effectiveness_table[:,:]=[0,0.3,0.7,1.5,2.2; 0.1,88.325,98.205,
                100.12,100.54; 0.15,118.96,140.29,147.37,149.17; 0.2,139.33,175.45,190.88,
                195.29; 0.28,163.98,225.46,255.29,264.87]
            "2D Table [side_A_mflow (kg/s), side_B_mflow (kg/s), (Q/ITD.A) (W/m2.degC)]";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Effec_Spec
              effec_spec=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Effec_Spec.Q_per_ITD
            "choose effectiveness type";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec
              flow_effec_spec=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec.mass_flow_rate
            "choose flow type for heat rejection map";
            parameter SI.Length core_length=0.9
            "Length (along tubes) of the core";
            parameter SI.Length core_width=0.9
            "Width (across tubes) of the core";
            parameter SI.Length core_depth=0.05
            "Depth (or thickness) of the core";
            parameter SI.Length ref_core_length=0.9
            "Length (along tubes) of the core";
            parameter SI.Length ref_core_width=0.9
            "Width (across tubes) of the core";
            parameter SI.Length ref_core_depth=0.05
            "Depth (or thickness) of the core";
            parameter Real pressure_drop_a[:,:]=[0,0; 0.1,2471.3; 0.15,5176; 0.2,8404.2;
                0.28,17021] "dp (Pa) vs. mass flow (kg/s)";
            parameter Real pressure_drop_b[:,:]=[0,0; 0.301,72; 0.747,318; 1.507,1033;
                2.213,1951] "dp (Pa) vs. mass flow (kg/s)";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Loss_Spec
              loss_spec_side_a=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Loss_Spec.deltaP
            "choose loss spec for side a";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Loss_Spec
              loss_spec_side_b=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Loss_Spec.deltaP
            "choose loss spec for side b";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec
              flow_spec_side_a=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec.volume_flow_rate
            "choose flow spec for side a";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec
              flow_spec_side_b=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec.volume_flow_rate
            "choose flow spec for side b";
          equation
            connect(fluidAdaptor.fluidHeatflow_port, charge_Cooler_Air_To_Air.hot_fluid_in)
              annotation (Line(
                points={{-152,84},{-116,84},{-116,40.6},{-80,40.6}},
                color={255,0,0},
                smooth=Smooth.None));
            connect(fluidAdaptor2.fluidHeatflow_port, charge_Cooler_Air_To_Air.cold_fluid_in)
              annotation (Line(
                points={{-154,-76},{-116,-76},{-116,-18.6},{-80,-18.6}},
                color={255,0,0},
                smooth=Smooth.None));
            connect(charge_Cooler_Air_To_Air.hot_fluid_out, fluidAdaptor1.fluidHeatflow_port)
              annotation (Line(
                points={{104,40.6},{128,40.6},{128,84},{150,84}},
                color={255,0,0},
                smooth=Smooth.None));
            connect(charge_Cooler_Air_To_Air.cold_fluid_out, fluidAdaptor3.fluidHeatflow_port)
              annotation (Line(
                points={{104,-18.6},{104,-48.3},{152,-48.3},{152,-76}},
                color={255,0,0},
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -320},{200,280}}), graphics));
          end Charge_Cooler_Air_To_Air;

          model Charge_Cooler_Air_To_Liquid
          "Charge cooler that uses liquid (e.g. water/ethylene-glycol) as the cooling medium"
            extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Interfaces.Charge_Cooler_Air_To_Liquid;

            C2M2L_OM.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Liquid
              charge_Cooler_Air_To_Liquid(
              effectiveness_table=effectiveness_table,
              core_length=core_length,
              core_width=core_width,
              core_depth=core_depth,
              ref_core_length=ref_core_length,
              ref_core_width=ref_core_width,
              ref_core_depth=ref_core_depth,
              pressure_drop_a=pressure_drop_a,
              pressure_drop_b=pressure_drop_b,
              loss_spec_side_a=loss_spec_side_a,
              loss_spec_side_b=loss_spec_side_b,
              flow_spec_side_a=flow_spec_side_a,
              flow_spec_side_b=flow_spec_side_b,
              effec_spec=effec_spec,
              flow_effec_spec=flow_effec_spec)
              annotation (Placement(transformation(extent={{-32,-30},{40,44}})));
            parameter Real effectiveness_table[:,:]=[0,0,0.35,0.75,1.1,1.45,1.8,2.2,2.55,
                2.9,3.3,3.7,4,4.35,4.75,5.1,5.5,5.9,6.2,6.9; 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                0,0,0,0,0,0; 0.35,0,83,144,185,210,225,233,239,246,255,267,279,292,304,
                315,325,334,343,361; 0.7,0,117,212,286,343,388,424,456,484,512,540,566,
                590,612,632,651,668,685,720; 1.05,0,153,285,395,487,564,629,685,735,781,
                822,860,894,924,951,976,1000,1024,1076; 1.4,0,193,364,513,641,751,846,927,
                998,1060,1114,1162,1203,1239,1271,1301,1329,1359,1426; 1.8,0,235,448,639,
                806,951,1075,1182,1272,1349,1414,1469,1516,1556,1590,1623,1654,1688,1769;
                2.15,0,280,539,772,980,1161,1316,1447,1557,1647,1721,1782,1831,1873,1909,
                1942,1975,2011,2104; 2.5,0,328,633,912,1162,1380,1566,1722,1850,1952,2034,
                2098,2149,2190,2225,2257,2290,2328,2431; 2.9,0,377,732,1058,1351,1607,
                1824,2004,2149,2263,2350,2416,2467,2506,2539,2569,2601,2638,2750; 3.2,0,
                428,833,1208,1545,1839,2088,2292,2453,2576,2667,2734,2783,2820,2850,2877,
                2906,2943,3060; 3.6,0,480,937,1361,1742,2075,2355,2581,2757,2889,2984,
                3050,3097,3131,3157,3180,3206,3241,3362; 3.95,0,531,1040,1514,1941,2312,
                2622,2871,3060,3199,3296,3361,3406,3436,3459,3479,3501,3533,3655; 4.3,0,
                583,1143,1666,2137,2546,2886,3155,3358,3502,3601,3665,3707,3734,3755,3772,
                3791,3819,3941; 4.65,0,632,1242,1812,2327,2773,3141,3431,3645,3795,3894,
                3957,3997,4024,4043,4058,4074,4100,4219; 5,0,679,1336,1951,2507,2987,3383,
                3692,3918,4073,4173,4236,4275,4302,4321,4336,4350,4373,4489; 5.4,0,721,
                1421,2078,2672,3185,3606,3932,4169,4330,4433,4496,4537,4566,4588,4604,
                4619,4639,4753; 5.75,0,758,1496,2189,2816,3358,3802,4146,4394,4561,4668,
                4735,4780,4814,4841,4862,4879,4899,5012; 6.1,0,789,1557,2281,2936,3502,
                3966,4325,4585,4760,4873,4946,4999,5042,5078,5106,5128,5152,5267; 6.45,0,
                811,1603,2349,3025,3611,4092,4465,4735,4920,5042,5125,5188,5242,5289,5328,
                5360,5389,5512; 6.8,0,825,1631,2392,3082,3681,4174,4558,4840,5036,5168,
                5262,5337,5404,5465,5517,5559,5599,5734]
            "2D Table [side_A_mflow (kg/s), side_B_mflow (kg/s), (Q/ITD.A) (W/m2.degC)]";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Effec_Spec
              effec_spec=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Effec_Spec.Q_per_ITD_Area
            "choose effectiveness type";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec
              flow_effec_spec=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec.mass_flow_rate
            "choose flow type for heat rejection map";
            parameter SI.Length core_length=0.59
            "Length (along tubes) of the core";
            parameter SI.Length core_width=0.45
            "Width (across tubes) of the core";
            parameter SI.Length core_depth=1 "Depth (or thickness) of the core";
            parameter SI.Length ref_core_length=0.59
            "Length (along tubes) of the core";
            parameter SI.Length ref_core_width=0.45
            "Width (across tubes) of the core";
            parameter SI.Length ref_core_depth=1
            "Depth (or thickness) of the core";
            parameter Real pressure_drop_a[:,:]=[0,0; 0.028185952,3.80970; 0.056371904,
                10.00000; 0.112743808,20.34330; 0.140929761,31.00000; 0.169115713,
                42.00000; 0.225487617,61.00000; 0.253673569,75.04860; 0.281859521,
                87.00000; 0.310045473,104.00000; 0.366417378,137.00000; 0.450975234,
                180.00000; 0.507347138,215.00000]
            "dp (Pa) vs. mass flow (kg/s)";
            parameter Real pressure_drop_b[:,:]=[0,0; 0.000880397,6143.20734; 0.00111091,
                8273.67991; 0.001349941,11445.25721; 0.001643407,16409.46516; 0.001936872,
                21925.25177; 0.002230338,28337.35370; 0.002347724,31424.00000;
                0.002817269,44104.46400] "dp (Pa) vs. mass flow (kg/s)";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Loss_Spec
              loss_spec_side_a=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Loss_Spec.deltaP
            "choose loss spec for side a";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Loss_Spec
              loss_spec_side_b=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Loss_Spec.deltaP
            "choose loss spec for side b";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec
              flow_spec_side_a=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec.volume_flow_rate
            "choose flow spec for side a";
            parameter
            C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec
              flow_spec_side_b=C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Components.Heat_Exchangers.Types.Flow_Spec.volume_flow_rate
            "choose flow spec for side b";
          equation
            connect(fluidAdaptor.fluidHeatflow_port, charge_Cooler_Air_To_Liquid.hot_fluid_in)
              annotation (Line(
                points={{-152,84},{-110,84},{-110,36.6},{-68,36.6}},
                color={255,0,0},
                smooth=Smooth.None));
            connect(fluidAdaptor2.fluidHeatflow_port, charge_Cooler_Air_To_Liquid.cold_fluid_in)
              annotation (Line(
                points={{-154,-76},{-110,-76},{-110,-22.6},{-68,-22.6}},
                color={255,0,0},
                smooth=Smooth.None));
            connect(charge_Cooler_Air_To_Liquid.hot_fluid_out, fluidAdaptor1.fluidHeatflow_port)
              annotation (Line(
                points={{76,36.6},{113,36.6},{113,84},{150,84}},
                color={255,0,0},
                smooth=Smooth.None));
            connect(charge_Cooler_Air_To_Liquid.cold_fluid_out, fluidAdaptor3.fluidHeatflow_port)
              annotation (Line(
                points={{76,-22.6},{114,-22.6},{114,-76},{152,-76}},
                color={255,0,0},
                smooth=Smooth.None));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -320},{200,280}}), graphics));
          end Charge_Cooler_Air_To_Liquid;

          package Interfaces
          extends Modelica.Icons.InterfacesPackage;
            partial model Charge_Cooler_Air_To_Air

              Modelica.Fluid.Interfaces.FluidPort_a hot_fluid_in(redeclare
                package Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
              "Port that nominally flows fluid B into the container"
                annotation (Placement(transformation(extent={{-210,74},{-190,94}})));
              Modelica.Fluid.Interfaces.FluidPort_a cold_fluid_in(redeclare
                package Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
              "Port that nominally flows fluid into the container"
                annotation (Placement(transformation(extent={{-210,-86},{-190,-66}})));
              Modelica.Fluid.Interfaces.FluidPort_b hot_fluid_out(redeclare
                package Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
              "Port that nominally flows fluid out of the container"
                annotation (Placement(transformation(extent={{190,74},{210,94}})));
              Modelica.Fluid.Interfaces.FluidPort_b cold_fluid_out(redeclare
                package Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
              "Port that nominally flows fluid out of the container"
                annotation (Placement(transformation(extent={{190,-86},{210,-66}})));
              C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                  HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_70degC(),
                  redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                            annotation (
                  Placement(transformation(
                    extent={{-10,-10},{10,10}},
                    rotation=180,
                    origin={-162,84})));
              C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                  HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_70degC(),
                  redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                            annotation (
                  Placement(transformation(
                    extent={{-10,-10},{10,10}},
                    rotation=0,
                    origin={160,84})));
              C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor2(
                  HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
                  redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                            annotation (
                  Placement(transformation(
                    extent={{-10,-10},{10,10}},
                    rotation=180,
                    origin={-164,-76})));
              C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor3(
                  HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
                  redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                            annotation (
                  Placement(transformation(
                    extent={{-10,-10},{10,10}},
                    rotation=0,
                    origin={162,-76})));
            equation
              connect(fluidAdaptor1.fluid_port, hot_fluid_out) annotation (Line(
                  points={{170,84},{200,84}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(hot_fluid_in, fluidAdaptor.fluid_port) annotation (Line(
                  points={{-200,84},{-172,84}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(cold_fluid_in, fluidAdaptor2.fluid_port) annotation (Line(
                  points={{-200,-76},{-174,-76}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(fluidAdaptor3.fluid_port, cold_fluid_out) annotation (Line(
                  points={{172,-76},{200,-76}},
                  color={0,127,255},
                  smooth=Smooth.None));
                annotation (Dialog(tab="Heat Exchanger", group="Geometry"),
                              choicesAllMatching=true, Dialog(tab="Fluid Model"),
                              choicesAllMatching=true, Dialog(tab="Fluid Model"),
                          Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                        -320},{200,280}}),
                                     graphics),
                Icon(graphics={
                    Rectangle(extent={{-140,80},{140,-80}}, lineColor={0,0,0},
                      fillColor={250,250,250},
                      fillPattern=FillPattern.Solid),
                    Line(
                      points={{-202,84},{-120,84},{-120,32},{-80,-10},{-40,30},{0,
                          -10},{38,30},{80,-10},{120,30},{120,84},{198,84}},
                      color={255,0,0},
                      smooth=Smooth.None,
                      thickness=0.5),
                    Line(
                      points={{-202,-76},{-120,-76},{-120,10},{-78,-32},{-40,10},{0,
                          -30},{40,10},{80,-30},{120,10},{120,-76},{198,-76}},
                      color={0,128,255},
                      smooth=Smooth.None,
                      thickness=0.5),
                    Polygon(
                      points={{20,-46},{60,-61},{20,-76},{20,-46}},
                      lineColor={0,128,255},
                      smooth=Smooth.None,
                      fillColor={0,128,255},
                      fillPattern=FillPattern.Solid,
                      visible=showDesignFlowDirection),
                    Polygon(
                      points={{20,-51},{50,-61},{20,-71},{20,-51}},
                      lineColor={255,255,255},
                      smooth=Smooth.None,
                      fillColor={250,250,250},
                      fillPattern=FillPattern.Solid,
                      visible=allowFlowReversal),
                    Line(
                      points={{55,-61},{-60,-61}},
                      color={0,128,255},
                      smooth=Smooth.None,
                      visible=showDesignFlowDirection),
                    Polygon(
                      points={{20,76},{60,61},{20,46},{20,76}},
                      lineColor={255,0,0},
                      smooth=Smooth.None,
                      fillColor={255,0,0},
                      fillPattern=FillPattern.Solid,
                      visible=showDesignFlowDirection),
                    Polygon(
                      points={{20,71},{50,61},{20,51},{20,71}},
                      lineColor={255,255,255},
                      smooth=Smooth.None,
                      fillColor={250,250,250},
                      fillPattern=FillPattern.Solid,
                      visible=allowFlowReversal),
                    Line(
                      points={{55,61},{-60,61}},
                      color={255,0,0},
                      smooth=Smooth.None,
                      visible=showDesignFlowDirection),
                    Text(
                      extent={{-100,80},{-60,40}},
                      lineColor={255,0,0},
                      fillColor={255,0,0},
                      fillPattern=FillPattern.Solid,
                      textString="a"),
                    Text(
                      extent={{-100,-40},{-60,-80}},
                      lineColor={0,128,255},
                      fillColor={255,0,0},
                      fillPattern=FillPattern.Solid,
                      textString="b")}));
            end Charge_Cooler_Air_To_Air;

            partial model Charge_Cooler_Air_To_Liquid

              Modelica.Fluid.Interfaces.FluidPort_a hot_fluid_in(redeclare
                package Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
              "Port that nominally flows fluid B into the container"
                annotation (Placement(transformation(extent={{-210,74},{-190,94}})));
              Modelica.Fluid.Interfaces.FluidPort_a cold_fluid_in(redeclare
                package Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
              "Port that nominally flows fluid into the container"
                annotation (Placement(transformation(extent={{-210,-86},{-190,-66}})));
              Modelica.Fluid.Interfaces.FluidPort_b hot_fluid_out(redeclare
                package Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
              "Port that nominally flows fluid out of the container"
                annotation (Placement(transformation(extent={{190,74},{210,94}})));
              Modelica.Fluid.Interfaces.FluidPort_b cold_fluid_out(redeclare
                package Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
              "Port that nominally flows fluid out of the container"
                annotation (Placement(transformation(extent={{190,-86},{210,-66}})));
              C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor(
                  HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_70degC(),
                  redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                            annotation (
                  Placement(transformation(
                    extent={{-10,-10},{10,10}},
                    rotation=180,
                    origin={-162,84})));
              C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor1(
                  HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_70degC(),
                  redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                            annotation (
                  Placement(transformation(
                    extent={{-10,-10},{10,10}},
                    rotation=0,
                    origin={160,84})));
              C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor2(
                  HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
                package Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                            annotation (
                  Placement(transformation(
                    extent={{-10,-10},{10,10}},
                    rotation=180,
                    origin={-164,-76})));
              C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor3(
                  HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Water(), redeclare
                package Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                            annotation (
                  Placement(transformation(
                    extent={{-10,-10},{10,10}},
                    rotation=0,
                    origin={162,-76})));
            equation
              connect(fluidAdaptor1.fluid_port, hot_fluid_out) annotation (Line(
                  points={{170,84},{200,84}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(hot_fluid_in, fluidAdaptor.fluid_port) annotation (Line(
                  points={{-200,84},{-172,84}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(cold_fluid_in, fluidAdaptor2.fluid_port) annotation (Line(
                  points={{-200,-76},{-174,-76}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(fluidAdaptor3.fluid_port, cold_fluid_out) annotation (Line(
                  points={{172,-76},{200,-76}},
                  color={0,127,255},
                  smooth=Smooth.None));
                annotation (Dialog(tab="Heat Exchanger", group="Geometry"),
                              choicesAllMatching=true, Dialog(tab="Fluid Model"),
                              choicesAllMatching=true, Dialog(tab="Fluid Model"),
                          Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                        -320},{200,280}}),
                                     graphics),
                Icon(graphics={
                    Rectangle(extent={{-140,80},{140,-80}}, lineColor={0,0,0},
                      fillColor={250,250,250},
                      fillPattern=FillPattern.Solid),
                    Line(
                      points={{-202,84},{-120,84},{-120,32},{-80,-10},{-40,30},{0,
                          -10},{38,30},{80,-10},{120,30},{120,84},{198,84}},
                      color={255,0,0},
                      smooth=Smooth.None,
                      thickness=0.5),
                    Line(
                      points={{-202,-76},{-120,-76},{-120,10},{-78,-32},{-40,10},{0,
                          -30},{40,10},{80,-30},{120,10},{120,-76},{198,-76}},
                      color={0,128,255},
                      smooth=Smooth.None,
                      thickness=0.5),
                    Polygon(
                      points={{20,-46},{60,-61},{20,-76},{20,-46}},
                      lineColor={0,128,255},
                      smooth=Smooth.None,
                      fillColor={0,128,255},
                      fillPattern=FillPattern.Solid,
                      visible=showDesignFlowDirection),
                    Polygon(
                      points={{20,-51},{50,-61},{20,-71},{20,-51}},
                      lineColor={255,255,255},
                      smooth=Smooth.None,
                      fillColor={250,250,250},
                      fillPattern=FillPattern.Solid,
                      visible=allowFlowReversal),
                    Line(
                      points={{55,-61},{-60,-61}},
                      color={0,128,255},
                      smooth=Smooth.None,
                      visible=showDesignFlowDirection),
                    Polygon(
                      points={{20,76},{60,61},{20,46},{20,76}},
                      lineColor={255,0,0},
                      smooth=Smooth.None,
                      fillColor={255,0,0},
                      fillPattern=FillPattern.Solid,
                      visible=showDesignFlowDirection),
                    Polygon(
                      points={{20,71},{50,61},{20,51},{20,71}},
                      lineColor={255,255,255},
                      smooth=Smooth.None,
                      fillColor={250,250,250},
                      fillPattern=FillPattern.Solid,
                      visible=allowFlowReversal),
                    Line(
                      points={{55,61},{-60,61}},
                      color={255,0,0},
                      smooth=Smooth.None,
                      visible=showDesignFlowDirection),
                    Text(
                      extent={{-100,80},{-60,40}},
                      lineColor={255,0,0},
                      fillColor={255,0,0},
                      fillPattern=FillPattern.Solid,
                      textString="a"),
                    Text(
                      extent={{-100,-40},{-60,-80}},
                      lineColor={0,128,255},
                      fillColor={255,0,0},
                      fillPattern=FillPattern.Solid,
                      textString="b")}));
            end Charge_Cooler_Air_To_Liquid;
          end Interfaces;

          package Tests
          extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;
            model Test_Delivered_CAC_Air_To_Air
              import C2M2L_Ext;
            extends C2M2L_Ext.Icons.Simple_Test_Case;
              Modelica.Fluid.Sources.MassFlowSource_T
                                                 Hot_Fluid_Inlet(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                m_flow=0.5,
                T=473.15)
                annotation (Placement(transformation(extent={{-100,60},{-80,80}})));
              Modelica.Fluid.Sources.Boundary_pT Hot_Fluid_Out(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                p=100000,
                T=433.15)
                annotation (Placement(transformation(extent={{100,58},{80,78}})));
              Modelica.Fluid.Sources.Boundary_pT Cold_Fluid_Out(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                p=100000,
                T=303.15)
                annotation (Placement(transformation(extent={{102,-20},{82,0}})));
              Modelica.Fluid.Sources.MassFlowSource_T
                                                 Cold_Fluid_In(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                m_flow=1.5,
                T=303.15)
                annotation (Placement(transformation(extent={{-100,-19},{-80,1}})));
              replaceable Charge_Cooler_Air_To_Air                                                                  charge_Cooler_Air_To_Air  constrainedby
              C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Air
                                                                                                                  annotation (Placement(transformation(extent={{-22,-4},{20,56}})));

             // CAC_Model charge_Cooler_Air_To_Air annotation (Placement(transformation(extent={{-22,-4},{20,56}})));

              Modelica.Fluid.Sensors.Temperature temperature_hot_side(redeclare
                package Medium =
                           C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                annotation (Placement(transformation(extent={{28,68},{48,88}})));
              Modelica.Fluid.Sensors.Temperature temperature_cold_side(redeclare
                package Medium =
                           C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                annotation (Placement(transformation(extent={{46,0},{66,20}})));
              inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                  driveTrainMechanics3D=false)
                annotation (Placement(transformation(extent={{-100,-66},{-80,-46}})));
            equation

              connect(Hot_Fluid_Inlet.ports[1], charge_Cooler_Air_To_Air.hot_fluid_in)
                annotation (Line(
                  points={{-80,70},{-42,70},{-42,51.2},{-43,51.2}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(Cold_Fluid_In.ports[1], charge_Cooler_Air_To_Air.cold_fluid_in)
                annotation (Line(
                  points={{-80,-9},{-42,-9},{-42,3.2},{-43,3.2}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(charge_Cooler_Air_To_Air.cold_fluid_out, temperature_cold_side.port)
                annotation (Line(
                  points={{41,3.2},{40,3.2},{40,0},{56,0}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(Cold_Fluid_Out.ports[1], temperature_cold_side.port) annotation (Line(
                  points={{82,-10},{56,-10},{56,0}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(charge_Cooler_Air_To_Air.hot_fluid_out, temperature_hot_side.port)
                annotation (Line(
                  points={{41,51.2},{28,51.2},{28,68},{38,68}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(temperature_hot_side.port, Hot_Fluid_Out.ports[1]) annotation (Line(
                  points={{38,68},{80,68}},
                  color={0,127,255},
                  smooth=Smooth.None));
              annotation (Diagram(graphics), Commands(file=
                      "Scripts/CAC_Air_to_Air_Test.mos" "plot_setup"));
            end Test_Delivered_CAC_Air_To_Air;

            model Test_Delivered_CAC_Air_To_Air_Ricardo
              import C2M2L_Ext;
            extends C2M2L_Ext.Icons.Simple_Test_Case;
              Modelica.Fluid.Sources.MassFlowSource_T
                                                 Hot_Fluid_Inlet(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                m_flow=0.5,
                T=473.15)
                annotation (Placement(transformation(extent={{-100,60},{-80,80}})));
              Modelica.Fluid.Sources.Boundary_pT Hot_Fluid_Out(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                p=100000,
                T=433.15)
                annotation (Placement(transformation(extent={{100,58},{80,78}})));
              Modelica.Fluid.Sources.Boundary_pT Cold_Fluid_Out(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                p=100000,
                T=303.15)
                annotation (Placement(transformation(extent={{102,-20},{82,0}})));
              Modelica.Fluid.Sources.MassFlowSource_T
                                                 Cold_Fluid_In(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                m_flow=1.5,
                T=303.15)
                annotation (Placement(transformation(extent={{-100,-19},{-80,1}})));
              replaceable
              C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Air
                                                                                                                  charge_Cooler_Air_To_Air  constrainedby
              C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Air
                                                                                                                  annotation (Placement(transformation(extent={{-22,-4},{20,56}})));

             // CAC_Model charge_Cooler_Air_To_Air annotation (Placement(transformation(extent={{-22,-4},{20,56}})));

              Modelica.Fluid.Sensors.Temperature temperature_hot_side(redeclare
                package Medium =
                           C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                annotation (Placement(transformation(extent={{28,68},{48,88}})));
              Modelica.Fluid.Sensors.Temperature temperature_cold_side(redeclare
                package Medium =
                           C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                annotation (Placement(transformation(extent={{46,0},{66,20}})));
              inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                  driveTrainMechanics3D=false)
                annotation (Placement(transformation(extent={{-100,-66},{-80,-46}})));
            equation

              connect(Hot_Fluid_Inlet.ports[1], charge_Cooler_Air_To_Air.hot_fluid_in)
                annotation (Line(
                  points={{-80,70},{-42,70},{-42,36},{-22,36}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(Cold_Fluid_In.ports[1], charge_Cooler_Air_To_Air.cold_fluid_in)
                annotation (Line(
                  points={{-80,-9},{-42,-9},{-42,20},{-22,20}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(charge_Cooler_Air_To_Air.cold_fluid_out, temperature_cold_side.port)
                annotation (Line(
                  points={{20,20},{40,20},{40,0},{56,0}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(Cold_Fluid_Out.ports[1], temperature_cold_side.port) annotation (Line(
                  points={{82,-10},{56,-10},{56,0}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(charge_Cooler_Air_To_Air.hot_fluid_out, temperature_hot_side.port)
                annotation (Line(
                  points={{20,36},{28,36},{28,68},{38,68}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(temperature_hot_side.port, Hot_Fluid_Out.ports[1]) annotation (Line(
                  points={{38,68},{80,68}},
                  color={0,127,255},
                  smooth=Smooth.None));
              annotation (Diagram(graphics), Commands(file=
                      "Scripts/CAC_Air_to_Air_Test.mos" "plot_setup"));
            end Test_Delivered_CAC_Air_To_Air_Ricardo;

            model Test_Delivered_CAC_Air_To_Liquid
              import C2M2L_Ext;
            extends C2M2L_Ext.Icons.Simple_Test_Case;
              Modelica.Fluid.Sources.MassFlowSource_T
                                                 Hot_Fluid_Inlet(
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                m_flow=2,
                nPorts=1,
                T=433.15)
                annotation (Placement(transformation(extent={{-60,50},{-40,70}})));
              Modelica.Fluid.Sources.Boundary_pT Hot_Fluid_Out(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                p=100000,
                T=433.15)
                annotation (Placement(transformation(extent={{102,52},{82,72}})));
              Modelica.Fluid.Sources.Boundary_pT Cold_Fluid_Out(
                nPorts=1,
                p=100000,
                redeclare package Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                T=293.15)
                annotation (Placement(transformation(extent={{102,-20},{82,0}})));
              Modelica.Fluid.Sources.MassFlowSource_T
                                                 Cold_Fluid_In(
                m_flow=3,
                nPorts=1,
                redeclare package Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                T=293.15)
                annotation (Placement(transformation(extent={{-60,-19},{-40,1}})));
              Modelica.Fluid.Sensors.Temperature temperature_cold_side(redeclare
                package Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                annotation (Placement(transformation(extent={{44,-12},{64,8}})));
              Modelica.Fluid.Sensors.Temperature temperature_hot_side(redeclare
                package Medium =
                           C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                annotation (Placement(transformation(extent={{42,62},{62,82}})));
              replaceable Charge_Cooler_Air_To_Liquid charge_cooler constrainedby
              C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Liquid
                annotation (Placement(transformation(extent={{-18,4},{22,64}})));
            equation

              connect(temperature_hot_side.port, Hot_Fluid_Out.ports[1]) annotation (Line(
                  points={{52,62},{82,62}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(temperature_cold_side.port, Cold_Fluid_Out.ports[1]) annotation (Line(
                  points={{54,-12},{68,-12},{68,-10},{82,-10}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(Hot_Fluid_Inlet.ports[1], charge_cooler.hot_fluid_in)
                annotation (Line(
                  points={{-40,60},{-30,60},{-30,59.2},{-38,59.2}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(charge_cooler.hot_fluid_out, temperature_hot_side.port)
                annotation (Line(
                  points={{42,59.2},{38,59.2},{38,62},{52,62}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(charge_cooler.cold_fluid_out, temperature_cold_side.port)
                annotation (Line(
                  points={{42,11.2},{38,11.2},{38,-12},{54,-12}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(charge_cooler.cold_fluid_in, Cold_Fluid_In.ports[1])
                annotation (Line(
                  points={{-38,11.2},{-30,11.2},{-30,-9},{-40,-9}},
                  color={0,127,255},
                  smooth=Smooth.None));
              annotation (Diagram(graphics), Commands(file=
                      "Scripts/CAC_Liq_to_Air_Test.mos" "plot_setup"));
            end Test_Delivered_CAC_Air_To_Liquid;

            model Test_Delivered_CAC_Air_To_Liquid_Ricardo
              import C2M2L_Ext;
            extends C2M2L_Ext.Icons.Simple_Test_Case;
              Modelica.Fluid.Sources.MassFlowSource_T
                                                 Hot_Fluid_Inlet(
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                m_flow=2,
                nPorts=1,
                T=433.15)
                annotation (Placement(transformation(extent={{-60,50},{-40,70}})));
              Modelica.Fluid.Sources.Boundary_pT Hot_Fluid_Out(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                p=100000,
                T=433.15)
                annotation (Placement(transformation(extent={{102,52},{82,72}})));
              Modelica.Fluid.Sources.Boundary_pT Cold_Fluid_Out(
                nPorts=1,
                p=100000,
                redeclare package Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                T=293.15)
                annotation (Placement(transformation(extent={{102,-20},{82,0}})));
              Modelica.Fluid.Sources.MassFlowSource_T
                                                 Cold_Fluid_In(
                m_flow=3,
                nPorts=1,
                redeclare package Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                T=293.15)
                annotation (Placement(transformation(extent={{-60,-19},{-40,1}})));
              Modelica.Fluid.Sensors.Temperature temperature_cold_side(redeclare
                package Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                annotation (Placement(transformation(extent={{44,-12},{64,8}})));
              Modelica.Fluid.Sensors.Temperature temperature_hot_side(redeclare
                package Medium =
                           C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                annotation (Placement(transformation(extent={{42,62},{62,82}})));
              replaceable
              C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Liquid
                charge_cooler constrainedby
              C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Liquid
                annotation (Placement(transformation(extent={{-18,4},{22,64}})));
            equation

              connect(temperature_hot_side.port, Hot_Fluid_Out.ports[1]) annotation (Line(
                  points={{52,62},{82,62}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(temperature_cold_side.port, Cold_Fluid_Out.ports[1]) annotation (Line(
                  points={{54,-12},{68,-12},{68,-10},{82,-10}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(Hot_Fluid_Inlet.ports[1], charge_cooler.hot_fluid_in)
                annotation (Line(
                  points={{-40,60},{-30,60},{-30,44},{-18,44}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(charge_cooler.hot_fluid_out, temperature_hot_side.port)
                annotation (Line(
                  points={{22,44},{38,44},{38,62},{52,62}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(charge_cooler.cold_fluid_out, temperature_cold_side.port)
                annotation (Line(
                  points={{22,28},{38,28},{38,-12},{54,-12}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(charge_cooler.cold_fluid_in, Cold_Fluid_In.ports[1])
                annotation (Line(
                  points={{-18,28},{-30,28},{-30,-9},{-40,-9}},
                  color={0,127,255},
                  smooth=Smooth.None));
              annotation (Diagram(graphics), Commands(file=
                      "Scripts/CAC_Liq_to_Air_Test.mos" "plot_setup"));
            end Test_Delivered_CAC_Air_To_Liquid_Ricardo;
          end Tests;
        end Charge_Cooling;

        package Filtration
        "Components responsible for removing contaminants from the intake air"
        extends Modelica.Icons.Package;

          model Air_Filter_Main
          "The main filter element in the intake system (as oppose to a pre-filter)"
           extends
            C2M2L_CyPhy.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Filtration.Interfaces.Air_Filter_Main;
            C2M2L_OM.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Filtration.Air_Filter_Main
              air_Filter_Main(
              block_mass_1=block_mass_1,
              block_per_1=block_per_1,
              slope=slope,
              dp_nominal=dp_nominal,
              m_flow_nominal=m_flow_nominal,
              block_per_init=block_per_init,
              block_mass_init=block_mass_init)
              annotation (Placement(transformation(extent={{-42,-64},{44,52}})));
            parameter SI.Mass block_mass_1=0.1 "Blockage mass at point 1";
            parameter Real block_per_1=0.05
            "Blockage percentage (0-1) at point 1";
            parameter Real slope=block_per_1/block_mass_1;
            parameter SI.Pressure dp_nominal=6250
            "Pressure drop at nominal mass flow rate";
            parameter SI.MassFlowRate m_flow_nominal=0.11
            "Flow@dp_nominal with clean filter";
            parameter Real block_per_init=0.2
            "Initial blockage percentage(0-1)";
            parameter SI.Mass block_mass_init=0.1;
          equation
            connect(fluidAdaptor2.fluidHeatflow_port, air_Filter_Main.fluid_in)
              annotation (Line(
                points={{-146,-80},{-94,-80},{-94,-25.3333},{-42,-25.3333}},
                color={255,0,0},
                smooth=Smooth.None));
            connect(air_Filter_Main.fluid_out, fluidAdaptor3.fluidHeatflow_port)
              annotation (Line(
                points={{44,-25.3333},{98,-25.3333},{98,-82},{160,-82},{160,-80}},
                color={255,0,0},
                smooth=Smooth.None));
            connect(air_Filter_Main.contaminants, atmospheric_Environment_Bus.contaminants)
              annotation (Line(
                points={{1,36.1037},{1,127.052},{0,127.052},{0,218}},
                color={0,0,127},
                smooth=Smooth.None), Text(
                string="%second",
                index=1,
                extent={{6,3},{6,3}}));
            annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                      -260},{200,280}}), graphics));
          end Air_Filter_Main;

          package Interfaces
          extends Modelica.Icons.InterfacesPackage;
            partial model Air_Filter_Main

              Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare package
                Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
              "Port that nominally flows fluid into the container"
                annotation (Placement(transformation(extent={{-210,-90},{-190,-70}})));
              C2M2L_Ext.Interfaces.Context_Interfaces.Atmospheric_Environment.Atmospheric_Environment_Bus
                atmospheric_Environment_Bus
                annotation (Placement(transformation(extent={{-10,208},{10,228}})));
              Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare package
                Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
              "Port that nominally flows fluid out of the container"
                annotation (Placement(transformation(extent={{190,-90},{210,-70}})));
              C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor2(
                  HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
                  redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                            annotation (
                  Placement(transformation(
                    extent={{-10,-10},{10,10}},
                    rotation=180,
                    origin={-156,-80})));
              C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor fluidAdaptor3(
                  HeatFlowMedium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
                  redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
                            annotation (
                  Placement(transformation(
                    extent={{-10,-10},{10,10}},
                    rotation=0,
                    origin={170,-80})));
            equation
              connect(fluid_in, fluidAdaptor2.fluid_port) annotation (Line(
                  points={{-200,-80},{-166,-80}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(fluidAdaptor3.fluid_port, fluid_out) annotation (Line(
                  points={{180,-80},{200,-80}},
                  color={0,127,255},
                  smooth=Smooth.None));
              annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                        -260},{200,280}}),
                                     graphics), Icon(coordinateSystem(preserveAspectRatio=true,
                      extent={{-200,-260},{200,280}}), graphics={
                    Rectangle(
                      extent={{-56,160},{46,-160}},
                      lineColor={0,0,255},
                      fillPattern=FillPattern.CrossDiag,
                      fillColor={255,255,255}),
                    Line(
                      points={{-194,-82},{-126,-96},{-56,-128}},
                      color={0,0,255},
                      smooth=Smooth.Bezier),
                    Line(
                      points={{-198,-76},{-132,-36},{-100,8},{-62,12},{-54,14}},
                      color={0,0,255},
                      smooth=Smooth.Bezier),
                    Line(
                      points={{-196,-78},{-166,-2},{-130,94},{-88,112},{-58,116}},
                      color={0,0,255},
                      smooth=Smooth.Bezier),
                    Line(
                      points={{-58,118},{-90,134}},
                      color={0,0,255},
                      smooth=Smooth.None),
                    Line(
                      points={{-58,12},{-90,28}},
                      color={0,0,255},
                      smooth=Smooth.None),
                    Line(
                      points={{-16,-8},{16,8}},
                      color={0,0,255},
                      smooth=Smooth.None,
                      origin={-74,-138},
                      rotation=360),
                    Line(
                      points={{48,114},{122,62},{126,58},{166,-28},{198,-78}},
                      color={0,0,255},
                      smooth=Smooth.Bezier),
                    Line(
                      points={{48,20},{54,16},{110,-26},{116,-26},{170,-58},{198,-82}},
                      color={0,0,255},
                      smooth=Smooth.Bezier),
                    Line(
                      points={{50,-136},{134,-104},{196,-82}},
                      color={0,0,255},
                      smooth=Smooth.Bezier)}));
            end Air_Filter_Main;
          end Interfaces;

          package Tests
          extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;
            model Test_Air_Filter
              extends C2M2L_Ext.Icons.Simple_Test_Case;
              replaceable Air_Filter_Main air_Filter_Main constrainedby
              C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Filtration.Air_Filter_Main
                annotation (Placement(transformation(extent={{-20,-32},{20,28}})));
              C2M2L_Ext.Interfaces.Context_Interfaces.Atmospheric_Environment.Atmospheric_Environment_Bus
                atmospheric_Environment_Bus
                annotation (Placement(transformation(extent={{-10,50},{10,70}})));
              Modelica.Blocks.Sources.Step step(
                startTime=100,
                height=0.005,
                offset=0.001)
                annotation (Placement(transformation(extent={{-60,80},{-40,100}})));
              Modelica.Fluid.Sources.Boundary_pT inlet(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                p=106250) annotation (Placement(transformation(extent={{-78,-18},{-58,2}})));
              Modelica.Fluid.Sources.Boundary_pT outlet(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                p=100000) annotation (Placement(transformation(
                    extent={{-10,10},{10,-10}},
                    rotation=180,
                    origin={70,-8})));
              inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                  driveTrainMechanics3D=false)
                annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
            equation
              connect(atmospheric_Environment_Bus, air_Filter_Main.atmospheric_Environment_Bus)
                annotation (Line(
                  points={{0,60},{0,21.1111}},
                  color={0,128,255},
                  thickness=0.5,
                  smooth=Smooth.Bezier));
              connect(step.y, atmospheric_Environment_Bus.contaminants) annotation (Line(
                  points={{-39,90},{0,90},{0,60}},
                  color={0,0,127},
                  smooth=Smooth.None));
              connect(inlet.ports[1], air_Filter_Main.fluid_in) annotation (Line(
                  points={{-58,-8},{-39,-8},{-39,-12},{-20,-12}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(outlet.ports[1], air_Filter_Main.fluid_out) annotation (Line(
                  points={{60,-8},{50,-8},{50,-12},{20,-12}},
                  color={0,127,255},
                  smooth=Smooth.None));
              annotation (
                Diagram(graphics),
                experiment(StopTime=1000),
                __Dymola_experimentSetupOutput,
                Commands(file="Scripts/make_filter_plots.mos"
                  "make_filter_plots"));
            end Test_Air_Filter;

            model Test_Air_Filter_Ricardo
              extends C2M2L_Ext.Icons.Simple_Test_Case;
              replaceable
              C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Filtration.Air_Filter_Main
                air_Filter_Main constrainedby
              C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Filtration.Air_Filter_Main
                annotation (Placement(transformation(extent={{-20,-32},{20,28}})));
              C2M2L_Ext.Interfaces.Context_Interfaces.Atmospheric_Environment.Atmospheric_Environment_Bus
                atmospheric_Environment_Bus
                annotation (Placement(transformation(extent={{-10,50},{10,70}})));
              Modelica.Blocks.Sources.Step step(
                startTime=100,
                height=0.005,
                offset=0.001)
                annotation (Placement(transformation(extent={{-60,80},{-40,100}})));
              Modelica.Fluid.Sources.Boundary_pT inlet(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                p=106250) annotation (Placement(transformation(extent={{-78,-18},{-58,2}})));
              Modelica.Fluid.Sources.Boundary_pT outlet(
                nPorts=1,
                redeclare package Medium =
                  C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                p=100000) annotation (Placement(transformation(
                    extent={{-10,10},{10,-10}},
                    rotation=180,
                    origin={70,-8})));
              inner Modelica.Mechanics.MultiBody.World world(enableAnimation=false,
                  driveTrainMechanics3D=false)
                annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
            equation
              connect(atmospheric_Environment_Bus, air_Filter_Main.atmospheric_Environment_Bus)
                annotation (Line(
                  points={{0,60},{0,60},{0,21.8}},
                  color={0,128,255},
                  thickness=0.5,
                  smooth=Smooth.Bezier));
              connect(step.y, atmospheric_Environment_Bus.contaminants) annotation (Line(
                  points={{-39,90},{0,90},{0,60}},
                  color={0,0,127},
                  smooth=Smooth.None));
              connect(inlet.ports[1], air_Filter_Main.fluid_in) annotation (Line(
                  points={{-58,-8},{-20,-8}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(outlet.ports[1], air_Filter_Main.fluid_out) annotation (Line(
                  points={{60,-8},{20,-8}},
                  color={0,127,255},
                  smooth=Smooth.None));
              connect(world.frame_b, air_Filter_Main.mount_01) annotation (Line(
                  points={{-20,-50},{0,-50},{0,-32}},
                  color={95,95,95},
                  thickness=0.5,
                  smooth=Smooth.None));
              annotation (
                Diagram(graphics),
                experiment(StopTime=1000),
                __Dymola_experimentSetupOutput,
                Commands(file="Scripts/make_filter_plots.mos"
                  "make_filter_plots"));
            end Test_Air_Filter_Ricardo;
          end Tests;
        end Filtration;
      end Air_Intake_Systems;

      package Reciprocating
      "Engines that use a linear piston motion to extract mechanical power from heated gases"
        extends Modelica.Icons.Package;
        package Compression_Ignition
        "Internal combustion engines that use a compression process to ignite the fuel-air mixture"
          extends Modelica.Icons.Package;
          package Engine_Basic
          "Uses the Table_Based_Engine submodels to implement a basic engine"
            extends Modelica.Icons.Package;

            model Example_Engine_Basic_Advanced "wrapped engine"
              extends Interfaces.Engine;

              parameter SI.Area case_heat_transfer_area=1.0
              "Area available for heat to transfer through case"
                annotation (Dialog(tab="Thermal Model"));
              parameter SI.Thickness case_heat_transfer_thickness=0.005
              "Effective case thickness for heat transfer"
                annotation (Dialog(tab="Thermal Model"));
              parameter SI.ThermalConductivity case_thermal_conductivity=50
              "Conductivity of case"   annotation (Dialog(tab="Thermal Model"));
              parameter SI.Voltage v_nom=24
              "Nominal voltage that device is intended to operate at"
                annotation (Dialog(tab="Electrical Model"));
              parameter SI.Torque friction_map[:,2]=[0,1; 1,120; 10,120; 187.5001584,220;
                  375.0003167,325; 562.5004751,425; 700.0005913,500; 750.0006335,527;
                  800.0006757,555; 850.000718,580; 900.0007602,610; 950.0008024,636;
                  1000.000845,665; 1050.000887,690; 1100.000929,720; 1150.000971,745;
                  1200.001014,770; 1250.001056,800; 1300.001098,825; 1350.00114,855;
                  1400.001183,880; 1450.001225,910; 1500.001267,935; 1550.001309,965;
                  1600.001351,990; 1650.001394,1020; 1700.001436,1045; 1750.001478,1070;
                  1800.00152,1100; 1850.001563,1125; 1900.001605,1153; 1950.001647,1180;
                  2000.001689,1210; 2050.001732,1235; 2100.001774,1260; 2150.001816,1290;
                  2250,1290; 2300,1290]
              "Table of speed (rpm) vs engine friction torque";
              parameter SI.Torque torque_map[:,2]=[562.5004751,420; 700.0005913,1000;
                  750.0006335,1225; 800.0006757,1360; 850.000718,1480; 900.0007602,1585;
                  950.0008024,1685; 1000.000845,1775; 1050.000887,1860; 1100.000929,1945;
                  1150.000971,2025; 1200.001014,2065; 1250.001056,2080; 1300.001098,2080;
                  1350.00114,2060; 1400.001183,2035; 1450.001225,2010; 1500.001267,1975;
                  1550.001309,1925; 1600.001351,1875; 1650.001394,1825; 1700.001436,1775;
                  1750.001478,1725; 1800.00152,1675; 1850.001563,1625; 1900.001605,1585;
                  1950.001647,1535; 2000.001689,1485; 2050.001732,1440; 2100.001774,1390;
                  2150.001816,1330; 2250,0; 2255,0]
              " Table of speed(rpm) vs engine torque at WOT";
              parameter SI.MassFlowRate fuel_map[:,:]=[0,0,10,500.0004223,550.0004646,
                  600.0005068,650.000549,700.0005913,750.0006335,800.0006757,850.000718,
                  900.0007602,950.0008024,1000.000845,1050.000887,1100.000929,1150.000971,
                  1200.001014,1250.001056,1300.001098,1350.00114,1400.001183,1450.001225,
                  1500.001267,1550.001309,1600.001351,1650.001394,1700.001436,1750.001478,
                  1800.00152,1850.001563,1900.001605,1950.001647,2000.001689,2050.001732,
                  2100.001774,2150.001816,2200.001858,2250.0019; 0,0,0,0.000115077,
                  0.000134841,0.000157082,0.000179875,0.000207374,0.000234876,0.000261386,
                  0.000291112,0.00032447,0.000358984,0.000388806,0.000425181,0.000469451,
                  0.000503569,0.000546567,0.0006147,0.000690695,0.000757855,0.000830525,
                  0.000923075,0.001003919,0.001082698,0.001182413,0.001283234,0.001374041,
                  0.001458324,0.001582554,0.001698684,0.001792534,0.001896859,0.002015258,
                  0.002136724,0.002289975,0.002394179,0.002556089,0.002698939; 70.05060006,
                  0,0,0.000357347,0.000396983,0.000438847,0.000478967,0.000520609,
                  0.000566196,0.000605333,0.000651545,0.000704011,0.000754256,0.000801822,
                  0.000851797,0.000906041,0.00094958,0.001009562,0.001087556,0.001184368,
                  0.001253784,0.001365088,0.001437915,0.00155706,0.001661825,0.001756577,
                  0.00185663,0.00199224,0.002101612,0.002218382,0.002333051,0.002469539,
                  0.002592001,0.002730314,0.002859046,0.003012337,0.003133989,0.003293779,
                  0.003461377; 140.1012001,0,0,0.000599708,0.000648694,0.000708328,
                  0.000766908,0.000838683,0.000887612,0.000951407,0.001025648,0.001067673,
                  0.001150541,0.001201261,0.001278282,0.001350712,0.001411658,0.001475311,
                  0.001579904,0.001680621,0.001773634,0.00186571,0.001972046,0.002103904,
                  0.002226054,0.002312078,0.002449318,0.002587895,0.00268291,0.002833754,
                  0.002957563,0.003137412,0.00325725,0.003436602,0.0035697,0.00375666,
                  0.003909565,0.004083891,0.004273732; 210.1518002,0,0,0.000828053,
                  0.000905628,0.000990726,0.001058494,0.001144932,0.001214673,0.001295964,
                  0.001377572,0.001468351,0.001530065,0.001614283,0.001681968,0.001772218,
                  0.001871811,0.001952415,0.002032151,0.00214057,0.002270388,0.002369926,
                  0.002511775,0.002612639,0.002748628,0.002923005,0.003051573,0.003149479,
                  0.003329422,0.003473512,0.003627706,0.003772651,0.00394143,0.004157803,
                  0.004346105,0.004472209,0.0046636,0.004865091,0.005114112; 280.2024002,0,
                  0,0.001075936,0.001172941,0.001274854,0.001370625,0.001455299,0.001563224,
                  0.001660534,0.001745645,0.001832013,0.001913631,0.002028647,0.002126145,
                  0.002195082,0.002322944,0.002393616,0.002525453,0.002671998,0.002754556,
                  0.002905384,0.003072071,0.003182469,0.003329846,0.003495536,0.003630398,
                  0.003807147,0.003921153,0.004084166,0.004275935,0.004434841,0.00465945,
                  0.004813804,0.005017551,0.005215954,0.005449868,0.005690319,0.005955481;
                  350.2530003,0,0,0.001322565,0.001421465,0.001557601,0.00165054,
                  0.001774169,0.00188381,0.002007638,0.002112904,0.002213298,0.002294493,
                  0.002434271,0.002523673,0.002623304,0.002741966,0.002871303,0.002972217,
                  0.003120798,0.003255239,0.003426645,0.003548528,0.003743814,0.003853752,
                  0.004037267,0.004204037,0.004442107,0.004580722,0.004736006,0.00492388,
                  0.005188689,0.0053141,0.005609333,0.005778653,0.006059417,0.006295564,
                  0.006489461,0.006661956; 420.3036003,0,0,0.001554639,0.001699166,
                  0.001811233,0.001955902,0.002099137,0.002223466,0.002321325,0.002469554,
                  0.002598381,0.002733371,0.002842161,0.002928576,0.003094608,0.003199881,
                  0.003316755,0.003482078,0.00360855,0.003804304,0.003923034,0.004077374,
                  0.004278201,0.004421149,0.004590714,0.004858417,0.004996542,0.005158069,
                  0.005357129,0.005601556,0.005858407,0.00599737,0.006304847,0.0065581,
                  0.006816798,0.006995613,0.007301837,0.007497616; 490.3542004,0,0,
                  0.001807824,0.001956499,0.002097762,0.002263333,0.002402906,0.002517197,
                  0.002693621,0.002811624,0.002969092,0.003076745,0.003218626,0.003399024,
                  0.003545868,0.003659694,0.003826696,0.003951532,0.004119462,0.00427216,
                  0.004484229,0.004653266,0.004846958,0.005071501,0.005196311,0.00543916,
                  0.005668657,0.00583742,0.006097476,0.006294829,0.006470421,0.006733115,
                  0.006955381,0.007232631,0.007482187,0.007866234,0.008037662,0.008337939;
                  560.4048004,0,0,0.002036092,0.002185866,0.002364543,0.002540243,
                  0.00271881,0.002886187,0.003052666,0.0031862,0.003362409,0.003457437,
                  0.003634524,0.00380104,0.003921823,0.004135659,0.004275741,0.004433496,
                  0.004649183,0.004805937,0.005019275,0.005235527,0.005354848,0.005572661,
                  0.005844605,0.006073066,0.006220582,0.006458678,0.006740624,0.006977103,
                  0.00721282,0.007497557,0.007742057,0.008040882,0.008362483,0.008608584,
                  0.008867068,0.009170346; 630.4554005,0,0,0.002257567,0.002467794,
                  0.002675342,0.00284593,0.002995089,0.003165995,0.003346948,0.003566379,
                  0.003680615,0.003885091,0.00408557,0.004212524,0.004397487,0.004525951,
                  0.004755746,0.00487956,0.005113773,0.005353434,0.005508666,0.005781315,
                  0.00597662,0.006146354,0.006348415,0.006624572,0.006883208,0.007064022,
                  0.007378966,0.007621634,0.007916153,0.008093021,0.008500802,0.00880721,
                  0.009061799,0.009338996,0.009702039,0.010115007; 700.5060006,0,0,
                  0.002484499,0.002698238,0.002925589,0.003104628,0.003304758,0.003550228,
                  0.003678892,0.003886873,0.004102561,0.004264028,0.004433628,0.00464125,
                  0.004826817,0.005020603,0.005233626,0.005404906,0.005634196,0.00576674,
                  0.005996037,0.006205576,0.006536924,0.006784112,0.007039717,0.007208007,
                  0.007494016,0.007758994,0.008054669,0.008301443,0.008603607,0.008843489,
                  0.00918076,0.009455755,0.009868793,0.010143845,0.010617307,0.010818546;
                  770.5566006,0,0,0.002732385,0.002974377,0.003225061,0.003416013,
                  0.003603968,0.0038798,0.004042562,0.004265259,0.00448914,0.00466634,
                  0.004877442,0.0050133,0.00520751,0.00541228,0.00566104,0.005867669,
                  0.006148112,0.006361315,0.006529102,0.006866272,0.007037468,0.007355363,
                  0.007573933,0.007789419,0.008177144,0.008415082,0.008628315,0.008948014,
                  0.009288249,0.00956245,0.010012595,0.010269215,0.010657043,0.011082045,
                  0.01139578,0.011688953; 840.6072007,0,0,0.00299129,0.003260322,
                  0.003471621,0.003712241,0.003981027,0.004162821,0.004406188,0.004603203,
                  0.004848076,0.005038012,0.005217561,0.005515822,0.005638551,0.005882173,
                  0.006138352,0.0063399,0.00656249,0.006818514,0.007139423,0.007277906,
                  0.007552308,0.00789139,0.00815197,0.008443037,0.008802596,0.0089559,
                  0.009277344,0.00958275,0.009928593,0.010407144,0.010767236,0.011064698,
                  0.01131228,0.011908425,0.012226302,0.012517; 910.6578007,0,0,0.003216134,
                  0.003483667,0.003727712,0.004030699,0.004229468,0.004461442,0.004776539,
                  0.005026396,0.005233455,0.005421065,0.005727613,0.005867425,0.006069297,
                  0.006320983,0.006520323,0.006802302,0.00703797,0.007297502,0.007678125,
                  0.007925697,0.008129177,0.008529737,0.008778909,0.00912278,0.009316539,
                  0.009753951,0.009913522,0.010246687,0.010697352,0.011008774,0.011440212,
                  0.011722308,0.012302719,0.012506738,0.012942023,0.013455971; 980.7084008,
                  0,0,0.00346327,0.003740348,0.004012176,0.004323632,0.004555522,
                  0.004839654,0.005090728,0.005288571,0.005621454,0.00583595,0.006080784,
                  0.006367581,0.006510202,0.006834616,0.007071574,0.007269451,0.007653234,
                  0.007868246,0.008137207,0.008502116,0.008804794,0.008965911,0.009314721,
                  0.009674163,0.010077612,0.010362149,0.010686452,0.010993431,0.011303646,
                  0.011694833,0.012169998,0.012631742,0.012933236,0.013334194,0.013962171,
                  0.014385005; 1050.759001,0,0,0.003677872,0.003967137,0.004313352,
                  0.004613478,0.00487842,0.00516083,0.005393888,0.005656384,0.006004634,
                  0.006183179,0.006453491,0.006739075,0.007018065,0.00724722,0.007564644,
                  0.007821356,0.008163492,0.008397831,0.008601057,0.009004931,0.009303597,
                  0.009518848,0.010008583,0.010316464,0.010538598,0.011037697,0.011420607,
                  0.011643522,0.012020386,0.012588258,0.013046583,0.01327526,0.013873753,
                  0.014384339,0.014667764,0.015256557; 1120.809601,0,0,0.003931094,
                  0.004261234,0.00454188,0.004890058,0.005177477,0.005484366,0.005786588,
                  0.006043486,0.006344013,0.006550229,0.006837473,0.007164386,0.007450865,
                  0.007666174,0.007994788,0.008268723,0.008554573,0.008916318,0.009216168,
                  0.009467362,0.009919672,0.010231056,0.010536456,0.010956879,0.011342154,
                  0.011587639,0.01194467,0.012401861,0.012784508,0.013336535,0.013670403,
                  0.014160269,0.014677751,0.015108747,0.015685437,0.016035555; 1190.860201,
                  0,0,0.004168882,0.004481686,0.004843021,0.005199923,0.005430119,
                  0.005753059,0.00609522,0.006411217,0.006712729,0.006979124,0.007223317,
                  0.007513525,0.007807537,0.008118786,0.00841761,0.008741523,0.009118388,
                  0.009453152,0.009706962,0.010066364,0.010510908,0.0108627,0.011087475,
                  0.011408834,0.011843639,0.012258113,0.012582015,0.013125443,0.013553887,
                  0.013970755,0.014454671,0.014797075,0.015347466,0.015807182,0.016451679,
                  0.017075723; 1260.910801,0,0,0.004397181,0.004757047,0.005103052,
                  0.005491066,0.005831324,0.006158052,0.006383534,0.006760492,0.0070166,
                  0.007411542,0.00770397,0.00802494,0.008359863,0.008666293,0.008957514,
                  0.009165463,0.009594792,0.009855532,0.010207109,0.010626353,0.010935797,
                  0.011337457,0.011712058,0.012085334,0.012594147,0.012999442,0.013397101,
                  0.013751069,0.014172464,0.014810247,0.015235835,0.015700934,0.016293985,
                  0.016644077,0.017285695,0.017768817; 1330.961401,0,0,0.004651163,
                  0.005026823,0.005402895,0.005766842,0.006061432,0.006487762,0.006843933,
                  0.007121371,0.007487373,0.007826556,0.008121261,0.008456308,0.008785913,
                  0.009064373,0.009295403,0.009715569,0.009988033,0.010339149,0.010802942,
                  0.01125246,0.011575269,0.012000549,0.012269241,0.01267643,0.013191945,
                  0.013525161,0.014115653,0.014486879,0.015029543,0.015500716,0.015916054,
                  0.016528683,0.017148035,0.017749178,0.018321747,0.018778942; 1401.012001,
                  0,0,0.004868125,0.005268141,0.005672144,0.005970351,0.006417673,
                  0.006731039,0.007147921,0.007520983,0.007815652,0.008226698,0.008541171,
                  0.008921184,0.009227145,0.009536486,0.009822676,0.010242214,0.010575352,
                  0.011010919,0.011302544,0.011657088,0.012215878,0.012565798,0.012986346,
                  0.013348034,0.013769634,0.014290683,0.014740778,0.01530434,0.015688458,
                  0.01632077,0.016784045,0.017251392,0.018000138,0.018483624,0.018983713,
                  0.019807532; 1471.062601,0,0,0.005084936,0.005458776,0.00593416,
                  0.006288746,0.006705037,0.007120778,0.007409511,0.007822573,0.008223948,
                  0.008592197,0.008875517,0.009276453,0.009626549,0.010026559,0.010408733,
                  0.010669618,0.011086296,0.011514068,0.011913256,0.012178626,0.012588932,
                  0.013140048,0.013414875,0.014120182,0.014448596,0.014856152,0.015279907,
                  0.015778582,0.016450611,0.016915405,0.017692328,0.01805522,0.018849983,
                  0.019250228,0.019863646,0.020545776; 1541.113201,0,0,0.005322789,
                  0.005760758,0.006144848,0.006579486,0.007019394,0.007385693,0.00788008,
                  0.008154316,0.008590492,0.008907259,0.009299089,0.009645807,0.009964867,
                  0.01039708,0.010727767,0.01110816,0.011517292,0.012030419,0.012294601,
                  0.012942519,0.013381089,0.01381138,0.014049788,0.014509783,0.015113865,
                  0.015674113,0.016055315,0.016715072,0.017077274,0.017767526,0.018364758,
                  0.019097406,0.019658994,0.020167293,0.020711705,0.021391838; 1611.163801,
                  0,0,0.005585518,0.006046334,0.006470078,0.006881721,0.007337968,
                  0.007706548,0.008128958,0.008600037,0.008956296,0.009412755,0.00963958,
                  0.010207281,0.010398253,0.010972285,0.011184975,0.011718407,0.012009637,
                  0.012512584,0.012829528,0.0134051,0.013778829,0.014205722,0.014634989,
                  0.015223219,0.015681341,0.016192232,0.016789262,0.017301545,0.01802162,
                  0.018672868,0.019055634,0.019606547,0.020318571,0.020995307,0.021948286,
                  0.022369534; 1681.214401,0,0,0.00580822,0.006239558,0.006725818,
                  0.007139663,0.007598026,0.00799661,0.008437593,0.008858054,0.009240434,
                  0.009632173,0.010052063,0.010562072,0.011024636,0.011266265,0.01175001,
                  0.012083814,0.012547809,0.013101742,0.013421004,0.014077723,0.014457881,
                  0.014888169,0.015515448,0.015774752,0.016279644,0.016911205,0.017575726,
                  0.018203882,0.018572337,0.019327737,0.020080611,0.020663778,0.0214107,
                  0.022161204,0.022609906,0.023371961; 1751.265001,0,0,0.006024714,
                  0.006524754,0.006973102,0.007467878,0.007965018,0.008346405,0.00876786,
                  0.0093003,0.009735957,0.010048707,0.010506915,0.011003701,0.0112886,
                  0.011873966,0.012182415,0.012726615,0.013171612,0.013452978,0.014120787,
                  0.014422004,0.015045127,0.015438329,0.015986429,0.01667792,0.016990224,
                  0.017617956,0.018109371,0.018640698,0.019358914,0.019885114,0.020795869,
                  0.02145395,0.022212409,0.023022136,0.023531056,0.024393712; 1821.315601,0,
                  0,0.006272467,0.006799419,0.007236376,0.007695629,0.008155356,0.008670651,
                  0.009106478,0.009672616,0.010037909,0.010507354,0.010960744,0.011448319,
                  0.011745923,0.012329444,0.012592855,0.013187059,0.013701727,0.014060923,
                  0.014664001,0.015039247,0.015403357,0.016007313,0.016716368,0.01707071,
                  0.017727,0.018115521,0.01888072,0.019690098,0.020004921,0.020978982,
                  0.021659837,0.022280838,0.022975004,0.023647303,0.024311889,0.02559746;
                  1891.366202,0,0,0.006451807,0.007065943,0.007524016,0.008031644,
                  0.008482568,0.009054633,0.009543535,0.009909258,0.010355249,0.010971986,
                  0.011240071,0.011812855,0.012327586,0.01261866,0.013166196,0.013694648,
                  0.014173035,0.014572982,0.015143891,0.015588356,0.016204265,0.016764909,
                  0.017131201,0.017687068,0.018377646,0.019015188,0.019588018,0.020158352,
                  0.020765252,0.021555828,0.022338739,0.022873158,0.023919424,0.024481686,
                  0.02534381,0.02629189; 1961.416802,0,0,0.006644101,0.007278485,
                  0.007740381,0.00824903,0.008828371,0.009303714,0.009845574,0.010417954,
                  0.010786239,0.011292367,0.011774379,0.012270877,0.012786042,0.013133381,
                  0.01365294,0.014200706,0.014710744,0.015224217,0.015763964,0.016080231,
                  0.01658222,0.017370076,0.017916173,0.018290227,0.019046945,0.019666603,
                  0.020390539,0.020815857,0.021869176,0.022230402,0.022930344,0.023677488,
                  0.024656159,0.025679501,0.02638297,0.027530874; 2031.467402,0,0,
                  0.006991992,0.007541484,0.008060435,0.00863469,0.00915203,0.009640107,
                  0.01011446,0.010721655,0.011211114,0.011601947,0.012173628,0.012510673,
                  0.012996707,0.013525757,0.013990039,0.014574776,0.015208654,0.015583794,
                  0.016138746,0.016631649,0.017241436,0.017782328,0.018353765,0.019213338,
                  0.019591734,0.020354047,0.021136093,0.021535369,0.022461781,0.023355324,
                  0.023785039,0.024910293,0.025395595,0.026504677,0.027371219,0.028347706;
                  2101.518002,0,0,0.00711227,0.007825692,0.008386875,0.008821081,
                  0.009531429,0.010064099,0.010446801,0.011058935,0.011485645,0.011931689,
                  0.012452276,0.01316248,0.013495873,0.0141893,0.014528201,0.014996621,
                  0.015470075,0.016294783,0.016789196,0.017403116,0.017701422,0.018529787,
                  0.019158365,0.019546969,0.020381831,0.020910089,0.021522199,0.022246257,
                  0.023312282,0.023847191,0.024739252,0.025439506,0.026378624,0.027245106,
                  0.028302627,0.029169502; 2206.593902,0,0,0.007561035,0.008160022,
                  0.008767591,0.009368683,0.009916778,0.010523499,0.011094384,0.011516654,
                  0.012133043,0.012525073,0.01328019,0.013556141,0.014341048,0.014597805,
                  0.015248034,0.015901825,0.016412546,0.01700199,0.017579766,0.01817544,
                  0.018789176,0.0195313,0.019943298,0.020785771,0.021429322,0.022239235,
                  0.022849524,0.023330276,0.024443997,0.025100091,0.026140335,0.027033896,
                  0.027525471,0.028760312,0.029741564,0.030796861; 2416.745702,0,0,
                  0.008201428,0.008778953,0.009596892,0.010103863,0.010792793,0.011495883,
                  0.012075489,0.012693154,0.013148647,0.013725104,0.014330988,0.014805847,
                  0.015454547,0.016070843,0.016773119,0.017262488,0.018027268,0.018470603,
                  0.019064396,0.019678926,0.020359141,0.021230578,0.022064378,0.022415805,
                  0.023237888,0.024362868,0.025094342,0.02577939,0.026504248,0.02739454,
                  0.028258016,0.029405284,0.030489104,0.031149239,0.032686382,0.033448493]
              "Engine Fuel Consumption (kg/s), Row 1 contains speed values, column 1 contains torque values";
              parameter SI.Inertia Jengine=3.75 "engine inertia";
              parameter SI.Mass engine_mass=900 "mass of engine";

              parameter Real engine_displacement=10
              "engine displacement in liters"                                       annotation (choicesAllMatching=true, Dialog(tab="Fluid Model"));

              parameter SI.AngularVelocity crank_speed=62.831853071796
              "crank speed";

              parameter Real voleff[:,:]=[0,600,1200,1500,1800; 0,0.867641652,0.867641652,
                  0.867641652,0.867641652; 300,0.867641652,1,1.05,1.1; 400,0.867641652,
                  1.027886075,1.074580184,1.122243498; 500,0.867641652,1.027886075,
                  1.169487592,1.318243069; 600,0.867641652,1.098542293,1.264395,1.514242641;
                  700,0.867641652,1.169198511,1.359303369,1.514242641; 800,0.867641652,
                  1.239854728,1.454211738,1.514242641; 900,0.867641652,1.310510946,
                  1.454211738,1.706250056; 1000,0.867641652,1.391266152,1.693757702,
                  1.898257471; 1200,0.867641652,1.552776565,1.933303667,2.059404565; 1300,
                  0.867641652,1.633531772,1.933303667,2.220551658; 1400,0.867641652,
                  1.712133134,2.11370574,2.220551658; 1600,0.867641652,1.790734496,
                  2.294107813,2.220551658; 1700,0.867641652,1.869335858,2.294107813,
                  2.220551658; 1800,0.867641652,1.94793722,2.3,2.220551658]
              "Table of volumetric efficiency";

              parameter Real flow_characteristic[:,:]=[0.000167,1.3e5; 0.0025,1e5; 0.004,
                  0.6e5; 0.005,0.2e5]
              "Table with volume flow rate[m3] and pressure rise[pa] columns at N_ref"
                                                                                        annotation (Dialog(tab="Cooling System", group="Water Pump"));
              parameter SI.AngularVelocity N_ref=314.15926535898
              "Rotational speed at which table data is provided"  annotation (Dialog(tab="Cooling System", group="Water Pump"));
              parameter Real K=1e-6
              "(Volume flow rate/delta P) Loss Coefficient to model the pump as a simple restriction at low speeds"
                                                                                                                  annotation (Dialog(tab="Cooling System", group="Water Pump"));
              parameter Real efficiency_characteristic[:,:]=[-1,0.8; 0,0.8; 1,0.8]
              "Table with efficiency vs. volume flow rate(m3/s) at N_ref" annotation (Dialog(tab="Cooling System", group="Water Pump"));
              parameter Real effectiveness_nom=0.95
              "Nominal effectiveness of the thermal bridge"  annotation (Dialog(tab="Cooling System", group="Water Jacket"));
              parameter SI.Power cooling_Q_nom=300000
              "Nominal heat rejection to the cooling system"  annotation (Dialog(tab="Cooling System", group="Water Jacket"));
              parameter SI.Temperature T_inlet_nom=358.15
              "Nominal coolant inlet temperature"
                annotation (Dialog(tab="Cooling System", group="Water Jacket"));
              parameter SI.VolumeFlowRate V_dot_nom=0.003
              "Nominal coolant volume flow rate"  annotation (Dialog(tab="Cooling System", group="Water Jacket"));
              parameter SI.Pressure dp_nom=50000
              "Nominal pressure drop in the engine coolant jacket"  annotation (Dialog(tab="Cooling System", group="Water Jacket"));

              C2M2L_OM.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Example_Engine_Basic_Advanced
                example_Engine_Basic_Advanced(
                useSupport=useSupport,
                friction_map=friction_map,
                torque_map=torque_map,
                fuel_map=fuel_map,
                Jengine=Jengine,
                engine_mass=engine_mass,
                crank_speed=crank_speed,
                voleff=voleff,
                case_heat_transfer_area=case_heat_transfer_area,
                case_heat_transfer_thickness=case_heat_transfer_thickness,
                case_thermal_conductivity=case_thermal_conductivity,
                v_nom=v_nom,
                engine_displacement=engine_displacement,
                flow_characteristic=flow_characteristic,
                N_ref=N_ref,
                K=K,
                efficiency_characteristic=efficiency_characteristic,
                effectiveness_nom=effectiveness_nom,
                cooling_Q_nom=cooling_Q_nom,
                T_inlet_nom=T_inlet_nom,
                V_dot_nom=V_dot_nom,
                dp_nom=dp_nom)
                annotation (Placement(transformation(extent={{-20,-10},{20,26}})));
              parameter Boolean useSupport=false
              "= true, if support flange enabled, otherwise implicitly grounded";
            equation
              connect(example_Engine_Basic_Advanced.to_cac, intake_adaptor3.fluidHeatflow_port)
                annotation (Line(
                  points={{-20,13.2941},{-160,13.2941},{-160,140},{-180,140}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_Advanced.from_cac, intake_adaptor2.fluidHeatflow_port)
                annotation (Line(
                  points={{-20,17.5294},{-120,17.5294},{-120,150},{-140,150}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_Advanced.fluid_in, intake_adaptor.fluidHeatflow_port)
                annotation (Line(
                  points={{-20,26.2118},{-80,26.2118},{-80,160},{-100,160}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_Advanced.fluid_out, intake_adaptor1.fluidHeatflow_port)
                annotation (Line(
                  points={{-11.8,26},{-12,26},{-12,170},{-60,170}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(pin_p, example_Engine_Basic_Advanced.pin_p) annotation (Line(
                  points={{-200,80},{-168,80},{-168,9.05882},{-20,9.05882}},
                  color={0,0,255},
                  smooth=Smooth.None));
              connect(pin_n, example_Engine_Basic_Advanced.pin_n) annotation (Line(
                  points={{-200,40},{-180,40},{-180,4.82353},{-20,4.82353}},
                  color={0,0,255},
                  smooth=Smooth.None));
              connect(brg_01.flange, example_Engine_Basic_Advanced.brg_01) annotation (Line(
                  points={{-200,0},{-110,0},{-110,0.588235},{-20,0.588235}},
                  color={135,135,135},
                  thickness=0.5,
                  smooth=Smooth.None));
              connect(example_Engine_Basic_Advanced.outer_surface_heat_port,
                outer_surface_heat_port) annotation (Line(
                  points={{10,26},{10,160},{100,160},{100,200}},
                  color={191,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_Advanced.top_hose_outlet, Coolant_adaptor_top.fluidHeatflow_port)
                annotation (Line(
                  points={{20,15.4118},{100,15.4118},{100,120},{180,120}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_Advanced.bottom_hose_in, Coolant_adaptor_bottom.fluidHeatflow_port)
                annotation (Line(
                  points={{20,-10},{100,-10},{100,-120},{180,-120}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(brg_02.flange, example_Engine_Basic_Advanced.brg_02) annotation (Line(
                  points={{200,0},{110,0},{110,0.588235},{20,0.588235}},
                  color={135,135,135},
                  thickness=0.5,
                  smooth=Smooth.None));
              connect(fuel_adaptor.fluidHeatflow_port, example_Engine_Basic_Advanced.fuel_in)
                annotation (Line(
                  points={{-180,-140},{-100,-140},{-100,-3.64706},{-20,-3.64706}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_Advanced.speed, engineControlBus.speed)
                annotation (Line(
                  points={{-16,-10.6353},{-16,-20},{-30,-20},{-30,120},{0,120},{0,200}},
                  color={0,0,127},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              connect(example_Engine_Basic_Advanced.fuel_flow, engineControlBus.fuel_flow)
                annotation (Line(
                  points={{-10,-10.6353},{-10,-32},{-40,-32},{-40,130},{0,130},{0,200}},
                  color={0,0,127},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              connect(example_Engine_Basic_Advanced.net_torque, engineControlBus.net_torque)
                annotation (Line(
                  points={{-4,-10.6353},{-4,-40},{-50,-40},{-50,140},{0,140},{0,200}},
                  color={0,0,127},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              connect(example_Engine_Basic_Advanced.starter_engage, engineControlBus.starter_engage)
                annotation (Line(
                  points={{-6,27.0588},{-6,100},{0,100},{0,200}},
                  color={255,0,255},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              connect(example_Engine_Basic_Advanced.ECU_Throttle_Out, engineControlBus.ECU_Throttle_Out)
                annotation (Line(
                  points={{0,27.0588},{0,200}},
                  color={0,0,127},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              connect(example_Engine_Basic_Advanced.engine_running, engineControlBus.engine_running)
                annotation (Line(
                  points={{5.8,27.0588},{5.8,113.529},{0,113.529},{0,200}},
                  color={255,0,255},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                        -200},{200,200}}),
                                     graphics));
            end Example_Engine_Basic_Advanced;

            model Example_Engine_Basic_wFuel "wrapped engine"
              extends Interfaces.Engine_wFuel(world(driveTrainMechanics3D=false));
                parameter SI.Area case_heat_transfer_area=1.0
              "Area available for heat to transfer through case"
                annotation (Dialog(tab="Thermal Model"));
              parameter SI.Thickness case_heat_transfer_thickness=0.005
              "Effective case thickness for heat transfer"
                annotation (Dialog(tab="Thermal Model"));
              parameter SI.ThermalConductivity case_thermal_conductivity=50
              "Conductivity of case"   annotation (Dialog(tab="Thermal Model"));

              parameter SI.Torque friction_map[:,2]=[0,1; 1,120; 10,120; 187.5001584,220;
                  375.0003167,325; 562.5004751,425; 700.0005913,500; 750.0006335,527;
                  800.0006757,555; 850.000718,580; 900.0007602,610; 950.0008024,636;
                  1000.000845,665; 1050.000887,690; 1100.000929,720; 1150.000971,745;
                  1200.001014,770; 1250.001056,800; 1300.001098,825; 1350.00114,855;
                  1400.001183,880; 1450.001225,910; 1500.001267,935; 1550.001309,965;
                  1600.001351,990; 1650.001394,1020; 1700.001436,1045; 1750.001478,1070;
                  1800.00152,1100; 1850.001563,1125; 1900.001605,1153; 1950.001647,1180;
                  2000.001689,1210; 2050.001732,1235; 2100.001774,1260; 2150.001816,1290;
                  2250,1290; 2300,1290]
              "Table of speed (rpm) vs engine friction torque";
              parameter SI.Torque torque_map[:,2]=[562.5004751,420; 700.0005913,1000;
                  750.0006335,1225; 800.0006757,1360; 850.000718,1480; 900.0007602,1585;
                  950.0008024,1685; 1000.000845,1775; 1050.000887,1860; 1100.000929,1945;
                  1150.000971,2025; 1200.001014,2065; 1250.001056,2080; 1300.001098,2080;
                  1350.00114,2060; 1400.001183,2035; 1450.001225,2010; 1500.001267,1975;
                  1550.001309,1925; 1600.001351,1875; 1650.001394,1825; 1700.001436,1775;
                  1750.001478,1725; 1800.00152,1675; 1850.001563,1625; 1900.001605,1585;
                  1950.001647,1535; 2000.001689,1485; 2050.001732,1440; 2100.001774,1390;
                  2150.001816,1330; 2250,0; 2255,0]
              " Table of speed(rpm) vs engine torque at WOT";
              parameter SI.MassFlowRate fuel_map[:,:]=[0,0,10,500.0004223,550.0004646,
                  600.0005068,650.000549,700.0005913,750.0006335,800.0006757,850.000718,
                  900.0007602,950.0008024,1000.000845,1050.000887,1100.000929,1150.000971,
                  1200.001014,1250.001056,1300.001098,1350.00114,1400.001183,1450.001225,
                  1500.001267,1550.001309,1600.001351,1650.001394,1700.001436,1750.001478,
                  1800.00152,1850.001563,1900.001605,1950.001647,2000.001689,2050.001732,
                  2100.001774,2150.001816,2200.001858,2250.0019; 0,0,0,0.000115077,
                  0.000134841,0.000157082,0.000179875,0.000207374,0.000234876,0.000261386,
                  0.000291112,0.00032447,0.000358984,0.000388806,0.000425181,0.000469451,
                  0.000503569,0.000546567,0.0006147,0.000690695,0.000757855,0.000830525,
                  0.000923075,0.001003919,0.001082698,0.001182413,0.001283234,0.001374041,
                  0.001458324,0.001582554,0.001698684,0.001792534,0.001896859,0.002015258,
                  0.002136724,0.002289975,0.002394179,0.002556089,0.002698939; 70.05060006,
                  0,0,0.000357347,0.000396983,0.000438847,0.000478967,0.000520609,
                  0.000566196,0.000605333,0.000651545,0.000704011,0.000754256,0.000801822,
                  0.000851797,0.000906041,0.00094958,0.001009562,0.001087556,0.001184368,
                  0.001253784,0.001365088,0.001437915,0.00155706,0.001661825,0.001756577,
                  0.00185663,0.00199224,0.002101612,0.002218382,0.002333051,0.002469539,
                  0.002592001,0.002730314,0.002859046,0.003012337,0.003133989,0.003293779,
                  0.003461377; 140.1012001,0,0,0.000599708,0.000648694,0.000708328,
                  0.000766908,0.000838683,0.000887612,0.000951407,0.001025648,0.001067673,
                  0.001150541,0.001201261,0.001278282,0.001350712,0.001411658,0.001475311,
                  0.001579904,0.001680621,0.001773634,0.00186571,0.001972046,0.002103904,
                  0.002226054,0.002312078,0.002449318,0.002587895,0.00268291,0.002833754,
                  0.002957563,0.003137412,0.00325725,0.003436602,0.0035697,0.00375666,
                  0.003909565,0.004083891,0.004273732; 210.1518002,0,0,0.000828053,
                  0.000905628,0.000990726,0.001058494,0.001144932,0.001214673,0.001295964,
                  0.001377572,0.001468351,0.001530065,0.001614283,0.001681968,0.001772218,
                  0.001871811,0.001952415,0.002032151,0.00214057,0.002270388,0.002369926,
                  0.002511775,0.002612639,0.002748628,0.002923005,0.003051573,0.003149479,
                  0.003329422,0.003473512,0.003627706,0.003772651,0.00394143,0.004157803,
                  0.004346105,0.004472209,0.0046636,0.004865091,0.005114112; 280.2024002,0,
                  0,0.001075936,0.001172941,0.001274854,0.001370625,0.001455299,0.001563224,
                  0.001660534,0.001745645,0.001832013,0.001913631,0.002028647,0.002126145,
                  0.002195082,0.002322944,0.002393616,0.002525453,0.002671998,0.002754556,
                  0.002905384,0.003072071,0.003182469,0.003329846,0.003495536,0.003630398,
                  0.003807147,0.003921153,0.004084166,0.004275935,0.004434841,0.00465945,
                  0.004813804,0.005017551,0.005215954,0.005449868,0.005690319,0.005955481;
                  350.2530003,0,0,0.001322565,0.001421465,0.001557601,0.00165054,
                  0.001774169,0.00188381,0.002007638,0.002112904,0.002213298,0.002294493,
                  0.002434271,0.002523673,0.002623304,0.002741966,0.002871303,0.002972217,
                  0.003120798,0.003255239,0.003426645,0.003548528,0.003743814,0.003853752,
                  0.004037267,0.004204037,0.004442107,0.004580722,0.004736006,0.00492388,
                  0.005188689,0.0053141,0.005609333,0.005778653,0.006059417,0.006295564,
                  0.006489461,0.006661956; 420.3036003,0,0,0.001554639,0.001699166,
                  0.001811233,0.001955902,0.002099137,0.002223466,0.002321325,0.002469554,
                  0.002598381,0.002733371,0.002842161,0.002928576,0.003094608,0.003199881,
                  0.003316755,0.003482078,0.00360855,0.003804304,0.003923034,0.004077374,
                  0.004278201,0.004421149,0.004590714,0.004858417,0.004996542,0.005158069,
                  0.005357129,0.005601556,0.005858407,0.00599737,0.006304847,0.0065581,
                  0.006816798,0.006995613,0.007301837,0.007497616; 490.3542004,0,0,
                  0.001807824,0.001956499,0.002097762,0.002263333,0.002402906,0.002517197,
                  0.002693621,0.002811624,0.002969092,0.003076745,0.003218626,0.003399024,
                  0.003545868,0.003659694,0.003826696,0.003951532,0.004119462,0.00427216,
                  0.004484229,0.004653266,0.004846958,0.005071501,0.005196311,0.00543916,
                  0.005668657,0.00583742,0.006097476,0.006294829,0.006470421,0.006733115,
                  0.006955381,0.007232631,0.007482187,0.007866234,0.008037662,0.008337939;
                  560.4048004,0,0,0.002036092,0.002185866,0.002364543,0.002540243,
                  0.00271881,0.002886187,0.003052666,0.0031862,0.003362409,0.003457437,
                  0.003634524,0.00380104,0.003921823,0.004135659,0.004275741,0.004433496,
                  0.004649183,0.004805937,0.005019275,0.005235527,0.005354848,0.005572661,
                  0.005844605,0.006073066,0.006220582,0.006458678,0.006740624,0.006977103,
                  0.00721282,0.007497557,0.007742057,0.008040882,0.008362483,0.008608584,
                  0.008867068,0.009170346; 630.4554005,0,0,0.002257567,0.002467794,
                  0.002675342,0.00284593,0.002995089,0.003165995,0.003346948,0.003566379,
                  0.003680615,0.003885091,0.00408557,0.004212524,0.004397487,0.004525951,
                  0.004755746,0.00487956,0.005113773,0.005353434,0.005508666,0.005781315,
                  0.00597662,0.006146354,0.006348415,0.006624572,0.006883208,0.007064022,
                  0.007378966,0.007621634,0.007916153,0.008093021,0.008500802,0.00880721,
                  0.009061799,0.009338996,0.009702039,0.010115007; 700.5060006,0,0,
                  0.002484499,0.002698238,0.002925589,0.003104628,0.003304758,0.003550228,
                  0.003678892,0.003886873,0.004102561,0.004264028,0.004433628,0.00464125,
                  0.004826817,0.005020603,0.005233626,0.005404906,0.005634196,0.00576674,
                  0.005996037,0.006205576,0.006536924,0.006784112,0.007039717,0.007208007,
                  0.007494016,0.007758994,0.008054669,0.008301443,0.008603607,0.008843489,
                  0.00918076,0.009455755,0.009868793,0.010143845,0.010617307,0.010818546;
                  770.5566006,0,0,0.002732385,0.002974377,0.003225061,0.003416013,
                  0.003603968,0.0038798,0.004042562,0.004265259,0.00448914,0.00466634,
                  0.004877442,0.0050133,0.00520751,0.00541228,0.00566104,0.005867669,
                  0.006148112,0.006361315,0.006529102,0.006866272,0.007037468,0.007355363,
                  0.007573933,0.007789419,0.008177144,0.008415082,0.008628315,0.008948014,
                  0.009288249,0.00956245,0.010012595,0.010269215,0.010657043,0.011082045,
                  0.01139578,0.011688953; 840.6072007,0,0,0.00299129,0.003260322,
                  0.003471621,0.003712241,0.003981027,0.004162821,0.004406188,0.004603203,
                  0.004848076,0.005038012,0.005217561,0.005515822,0.005638551,0.005882173,
                  0.006138352,0.0063399,0.00656249,0.006818514,0.007139423,0.007277906,
                  0.007552308,0.00789139,0.00815197,0.008443037,0.008802596,0.0089559,
                  0.009277344,0.00958275,0.009928593,0.010407144,0.010767236,0.011064698,
                  0.01131228,0.011908425,0.012226302,0.012517; 910.6578007,0,0,0.003216134,
                  0.003483667,0.003727712,0.004030699,0.004229468,0.004461442,0.004776539,
                  0.005026396,0.005233455,0.005421065,0.005727613,0.005867425,0.006069297,
                  0.006320983,0.006520323,0.006802302,0.00703797,0.007297502,0.007678125,
                  0.007925697,0.008129177,0.008529737,0.008778909,0.00912278,0.009316539,
                  0.009753951,0.009913522,0.010246687,0.010697352,0.011008774,0.011440212,
                  0.011722308,0.012302719,0.012506738,0.012942023,0.013455971; 980.7084008,
                  0,0,0.00346327,0.003740348,0.004012176,0.004323632,0.004555522,
                  0.004839654,0.005090728,0.005288571,0.005621454,0.00583595,0.006080784,
                  0.006367581,0.006510202,0.006834616,0.007071574,0.007269451,0.007653234,
                  0.007868246,0.008137207,0.008502116,0.008804794,0.008965911,0.009314721,
                  0.009674163,0.010077612,0.010362149,0.010686452,0.010993431,0.011303646,
                  0.011694833,0.012169998,0.012631742,0.012933236,0.013334194,0.013962171,
                  0.014385005; 1050.759001,0,0,0.003677872,0.003967137,0.004313352,
                  0.004613478,0.00487842,0.00516083,0.005393888,0.005656384,0.006004634,
                  0.006183179,0.006453491,0.006739075,0.007018065,0.00724722,0.007564644,
                  0.007821356,0.008163492,0.008397831,0.008601057,0.009004931,0.009303597,
                  0.009518848,0.010008583,0.010316464,0.010538598,0.011037697,0.011420607,
                  0.011643522,0.012020386,0.012588258,0.013046583,0.01327526,0.013873753,
                  0.014384339,0.014667764,0.015256557; 1120.809601,0,0,0.003931094,
                  0.004261234,0.00454188,0.004890058,0.005177477,0.005484366,0.005786588,
                  0.006043486,0.006344013,0.006550229,0.006837473,0.007164386,0.007450865,
                  0.007666174,0.007994788,0.008268723,0.008554573,0.008916318,0.009216168,
                  0.009467362,0.009919672,0.010231056,0.010536456,0.010956879,0.011342154,
                  0.011587639,0.01194467,0.012401861,0.012784508,0.013336535,0.013670403,
                  0.014160269,0.014677751,0.015108747,0.015685437,0.016035555; 1190.860201,
                  0,0,0.004168882,0.004481686,0.004843021,0.005199923,0.005430119,
                  0.005753059,0.00609522,0.006411217,0.006712729,0.006979124,0.007223317,
                  0.007513525,0.007807537,0.008118786,0.00841761,0.008741523,0.009118388,
                  0.009453152,0.009706962,0.010066364,0.010510908,0.0108627,0.011087475,
                  0.011408834,0.011843639,0.012258113,0.012582015,0.013125443,0.013553887,
                  0.013970755,0.014454671,0.014797075,0.015347466,0.015807182,0.016451679,
                  0.017075723; 1260.910801,0,0,0.004397181,0.004757047,0.005103052,
                  0.005491066,0.005831324,0.006158052,0.006383534,0.006760492,0.0070166,
                  0.007411542,0.00770397,0.00802494,0.008359863,0.008666293,0.008957514,
                  0.009165463,0.009594792,0.009855532,0.010207109,0.010626353,0.010935797,
                  0.011337457,0.011712058,0.012085334,0.012594147,0.012999442,0.013397101,
                  0.013751069,0.014172464,0.014810247,0.015235835,0.015700934,0.016293985,
                  0.016644077,0.017285695,0.017768817; 1330.961401,0,0,0.004651163,
                  0.005026823,0.005402895,0.005766842,0.006061432,0.006487762,0.006843933,
                  0.007121371,0.007487373,0.007826556,0.008121261,0.008456308,0.008785913,
                  0.009064373,0.009295403,0.009715569,0.009988033,0.010339149,0.010802942,
                  0.01125246,0.011575269,0.012000549,0.012269241,0.01267643,0.013191945,
                  0.013525161,0.014115653,0.014486879,0.015029543,0.015500716,0.015916054,
                  0.016528683,0.017148035,0.017749178,0.018321747,0.018778942; 1401.012001,
                  0,0,0.004868125,0.005268141,0.005672144,0.005970351,0.006417673,
                  0.006731039,0.007147921,0.007520983,0.007815652,0.008226698,0.008541171,
                  0.008921184,0.009227145,0.009536486,0.009822676,0.010242214,0.010575352,
                  0.011010919,0.011302544,0.011657088,0.012215878,0.012565798,0.012986346,
                  0.013348034,0.013769634,0.014290683,0.014740778,0.01530434,0.015688458,
                  0.01632077,0.016784045,0.017251392,0.018000138,0.018483624,0.018983713,
                  0.019807532; 1471.062601,0,0,0.005084936,0.005458776,0.00593416,
                  0.006288746,0.006705037,0.007120778,0.007409511,0.007822573,0.008223948,
                  0.008592197,0.008875517,0.009276453,0.009626549,0.010026559,0.010408733,
                  0.010669618,0.011086296,0.011514068,0.011913256,0.012178626,0.012588932,
                  0.013140048,0.013414875,0.014120182,0.014448596,0.014856152,0.015279907,
                  0.015778582,0.016450611,0.016915405,0.017692328,0.01805522,0.018849983,
                  0.019250228,0.019863646,0.020545776; 1541.113201,0,0,0.005322789,
                  0.005760758,0.006144848,0.006579486,0.007019394,0.007385693,0.00788008,
                  0.008154316,0.008590492,0.008907259,0.009299089,0.009645807,0.009964867,
                  0.01039708,0.010727767,0.01110816,0.011517292,0.012030419,0.012294601,
                  0.012942519,0.013381089,0.01381138,0.014049788,0.014509783,0.015113865,
                  0.015674113,0.016055315,0.016715072,0.017077274,0.017767526,0.018364758,
                  0.019097406,0.019658994,0.020167293,0.020711705,0.021391838; 1611.163801,
                  0,0,0.005585518,0.006046334,0.006470078,0.006881721,0.007337968,
                  0.007706548,0.008128958,0.008600037,0.008956296,0.009412755,0.00963958,
                  0.010207281,0.010398253,0.010972285,0.011184975,0.011718407,0.012009637,
                  0.012512584,0.012829528,0.0134051,0.013778829,0.014205722,0.014634989,
                  0.015223219,0.015681341,0.016192232,0.016789262,0.017301545,0.01802162,
                  0.018672868,0.019055634,0.019606547,0.020318571,0.020995307,0.021948286,
                  0.022369534; 1681.214401,0,0,0.00580822,0.006239558,0.006725818,
                  0.007139663,0.007598026,0.00799661,0.008437593,0.008858054,0.009240434,
                  0.009632173,0.010052063,0.010562072,0.011024636,0.011266265,0.01175001,
                  0.012083814,0.012547809,0.013101742,0.013421004,0.014077723,0.014457881,
                  0.014888169,0.015515448,0.015774752,0.016279644,0.016911205,0.017575726,
                  0.018203882,0.018572337,0.019327737,0.020080611,0.020663778,0.0214107,
                  0.022161204,0.022609906,0.023371961; 1751.265001,0,0,0.006024714,
                  0.006524754,0.006973102,0.007467878,0.007965018,0.008346405,0.00876786,
                  0.0093003,0.009735957,0.010048707,0.010506915,0.011003701,0.0112886,
                  0.011873966,0.012182415,0.012726615,0.013171612,0.013452978,0.014120787,
                  0.014422004,0.015045127,0.015438329,0.015986429,0.01667792,0.016990224,
                  0.017617956,0.018109371,0.018640698,0.019358914,0.019885114,0.020795869,
                  0.02145395,0.022212409,0.023022136,0.023531056,0.024393712; 1821.315601,0,
                  0,0.006272467,0.006799419,0.007236376,0.007695629,0.008155356,0.008670651,
                  0.009106478,0.009672616,0.010037909,0.010507354,0.010960744,0.011448319,
                  0.011745923,0.012329444,0.012592855,0.013187059,0.013701727,0.014060923,
                  0.014664001,0.015039247,0.015403357,0.016007313,0.016716368,0.01707071,
                  0.017727,0.018115521,0.01888072,0.019690098,0.020004921,0.020978982,
                  0.021659837,0.022280838,0.022975004,0.023647303,0.024311889,0.02559746;
                  1891.366202,0,0,0.006451807,0.007065943,0.007524016,0.008031644,
                  0.008482568,0.009054633,0.009543535,0.009909258,0.010355249,0.010971986,
                  0.011240071,0.011812855,0.012327586,0.01261866,0.013166196,0.013694648,
                  0.014173035,0.014572982,0.015143891,0.015588356,0.016204265,0.016764909,
                  0.017131201,0.017687068,0.018377646,0.019015188,0.019588018,0.020158352,
                  0.020765252,0.021555828,0.022338739,0.022873158,0.023919424,0.024481686,
                  0.02534381,0.02629189; 1961.416802,0,0,0.006644101,0.007278485,
                  0.007740381,0.00824903,0.008828371,0.009303714,0.009845574,0.010417954,
                  0.010786239,0.011292367,0.011774379,0.012270877,0.012786042,0.013133381,
                  0.01365294,0.014200706,0.014710744,0.015224217,0.015763964,0.016080231,
                  0.01658222,0.017370076,0.017916173,0.018290227,0.019046945,0.019666603,
                  0.020390539,0.020815857,0.021869176,0.022230402,0.022930344,0.023677488,
                  0.024656159,0.025679501,0.02638297,0.027530874; 2031.467402,0,0,
                  0.006991992,0.007541484,0.008060435,0.00863469,0.00915203,0.009640107,
                  0.01011446,0.010721655,0.011211114,0.011601947,0.012173628,0.012510673,
                  0.012996707,0.013525757,0.013990039,0.014574776,0.015208654,0.015583794,
                  0.016138746,0.016631649,0.017241436,0.017782328,0.018353765,0.019213338,
                  0.019591734,0.020354047,0.021136093,0.021535369,0.022461781,0.023355324,
                  0.023785039,0.024910293,0.025395595,0.026504677,0.027371219,0.028347706;
                  2101.518002,0,0,0.00711227,0.007825692,0.008386875,0.008821081,
                  0.009531429,0.010064099,0.010446801,0.011058935,0.011485645,0.011931689,
                  0.012452276,0.01316248,0.013495873,0.0141893,0.014528201,0.014996621,
                  0.015470075,0.016294783,0.016789196,0.017403116,0.017701422,0.018529787,
                  0.019158365,0.019546969,0.020381831,0.020910089,0.021522199,0.022246257,
                  0.023312282,0.023847191,0.024739252,0.025439506,0.026378624,0.027245106,
                  0.028302627,0.029169502; 2206.593902,0,0,0.007561035,0.008160022,
                  0.008767591,0.009368683,0.009916778,0.010523499,0.011094384,0.011516654,
                  0.012133043,0.012525073,0.01328019,0.013556141,0.014341048,0.014597805,
                  0.015248034,0.015901825,0.016412546,0.01700199,0.017579766,0.01817544,
                  0.018789176,0.0195313,0.019943298,0.020785771,0.021429322,0.022239235,
                  0.022849524,0.023330276,0.024443997,0.025100091,0.026140335,0.027033896,
                  0.027525471,0.028760312,0.029741564,0.030796861; 2416.745702,0,0,
                  0.008201428,0.008778953,0.009596892,0.010103863,0.010792793,0.011495883,
                  0.012075489,0.012693154,0.013148647,0.013725104,0.014330988,0.014805847,
                  0.015454547,0.016070843,0.016773119,0.017262488,0.018027268,0.018470603,
                  0.019064396,0.019678926,0.020359141,0.021230578,0.022064378,0.022415805,
                  0.023237888,0.024362868,0.025094342,0.02577939,0.026504248,0.02739454,
                  0.028258016,0.029405284,0.030489104,0.031149239,0.032686382,0.033448493]
              "Engine Fuel Consumption (kg/s), Row 1 contains speed values, column 1 contains torque values";
              parameter SI.Inertia Jengine=3.75 "engine inertia";
              parameter SI.Mass engine_mass=900 "mass of engine";

              parameter Real engine_displacement=10
              "engine displacement in liters"                                       annotation (choicesAllMatching=true, Dialog(tab="Fluid Model"));

              parameter SI.AngularVelocity crank_speed=62.831853071796
              "crank speed";

                parameter Real voleff[:,:]=[0,600,1200,1500,1800; 0,0.867641652,0.867641652,
                  0.867641652,0.867641652; 300,0.867641652,1,1.05,1.1; 400,0.867641652,
                  1.027886075,1.074580184,1.122243498; 500,0.867641652,1.027886075,
                  1.169487592,1.318243069; 600,0.867641652,1.098542293,1.264395,1.514242641;
                  700,0.867641652,1.169198511,1.359303369,1.514242641; 800,0.867641652,
                  1.239854728,1.454211738,1.514242641; 900,0.867641652,1.310510946,
                  1.454211738,1.706250056; 1000,0.867641652,1.391266152,1.693757702,
                  1.898257471; 1200,0.867641652,1.552776565,1.933303667,2.059404565; 1300,
                  0.867641652,1.633531772,1.933303667,2.220551658; 1400,0.867641652,
                  1.712133134,2.11370574,2.220551658; 1600,0.867641652,1.790734496,
                  2.294107813,2.220551658; 1700,0.867641652,1.869335858,2.294107813,
                  2.220551658; 1800,0.867641652,1.94793722,2.3,2.220551658]
              "Table of volumetric efficiency";

               parameter Real flow_characteristic[:,:]=[0.000167,1.3e5; 0.0025,1e5; 0.004,
                  0.6e5; 0.005,0.2e5]
              "Table with volume flow rate[m3] and pressure rise[pa] columns at N_ref"
                                                                                        annotation (Dialog(tab="Cooling System", group="Water Pump"));
              parameter SI.AngularVelocity N_ref=314.15926535898
              "Rotational speed at which table data is provided"  annotation (Dialog(tab="Cooling System", group="Water Pump"));
              parameter Real K=1e-6
              "(Volume flow rate/delta P) Loss Coefficient to model the pump as a simple restriction at low speeds"
                                                                                                                  annotation (Dialog(tab="Cooling System", group="Water Pump"));
              parameter Real efficiency_characteristic[:,:]=[-1,0.8; 0,0.8; 1,0.8]
              "Table with efficiency vs. volume flow rate(m3/s) at N_ref" annotation (Dialog(tab="Cooling System", group="Water Pump"));
              parameter Real effectiveness_nom=0.95
              "Nominal effectiveness of the thermal bridge"  annotation (Dialog(tab="Cooling System", group="Water Jacket"));
              parameter SI.Power cooling_Q_nom=300000
              "Nominal heat rejection to the cooling system"  annotation (Dialog(tab="Cooling System", group="Water Jacket"));
              parameter SI.Temperature T_inlet_nom=358.15
              "Nominal coolant inlet temperature"
                annotation (Dialog(tab="Cooling System", group="Water Jacket"));
              parameter SI.VolumeFlowRate V_dot_nom=0.003
              "Nominal coolant volume flow rate"  annotation (Dialog(tab="Cooling System", group="Water Jacket"));
              parameter SI.Pressure dp_nom=50000
              "Nominal pressure drop in the engine coolant jacket"  annotation (Dialog(tab="Cooling System", group="Water Jacket"));

              C2M2L_OM.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Example_Engine_Basic_wFuel
                example_Engine_Basic_wFuel(
                Fuel_Medium=fuel_adaptor_medium,
                useSupport=useSupport,
                case_heat_transfer_area=case_heat_transfer_area,
                case_heat_transfer_thickness=case_heat_transfer_thickness,
                case_thermal_conductivity=case_thermal_conductivity,
                friction_map=friction_map,
                torque_map=torque_map,
                fuel_map=fuel_map,
                Jengine=Jengine,
                engine_mass=engine_mass,
                engine_displacement=engine_displacement,
                crank_speed=crank_speed,
                voleff=voleff,
                flow_characteristic=flow_characteristic,
                N_ref=N_ref,
                K=K,
                efficiency_characteristic=efficiency_characteristic,
                effectiveness_nom=effectiveness_nom,
                cooling_Q_nom=cooling_Q_nom,
                T_inlet_nom=T_inlet_nom,
                V_dot_nom=V_dot_nom,
                dp_nom=dp_nom)
                annotation (Placement(transformation(extent={{-20,-10},{20,26}})));
              parameter Boolean useSupport=false
              "= true, if support flange enabled, otherwise implicitly grounded";
            equation
              connect(example_Engine_Basic_wFuel.to_cac, intake_adaptor3.fluidHeatflow_port)
                annotation (Line(
                  points={{-20,13.2941},{-160,13.2941},{-160,140},{-180,140}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_wFuel.from_cac, intake_adaptor2.fluidHeatflow_port)
                annotation (Line(
                  points={{-20,17.5294},{-120,17.5294},{-120,150},{-140,150}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_wFuel.fluid_in, intake_adaptor.fluidHeatflow_port)
                annotation (Line(
                  points={{-20,26.2118},{-80,26.2118},{-80,160},{-100,160}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_wFuel.fluid_out, intake_adaptor1.fluidHeatflow_port)
                annotation (Line(
                  points={{-11.8,26},{-12,26},{-12,170},{-60,170}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(brg_01.flange, example_Engine_Basic_wFuel.brg_01)    annotation (Line(
                  points={{-200,0},{-110,0},{-110,0.588235},{-20,0.588235}},
                  color={135,135,135},
                  thickness=0.5,
                  smooth=Smooth.None));
              connect(example_Engine_Basic_wFuel.outer_surface_heat_port,
                outer_surface_heat_port) annotation (Line(
                  points={{10,26},{10,160},{100,160},{100,200}},
                  color={191,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_wFuel.top_hose_outlet, Coolant_adaptor_top.fluidHeatflow_port)
                annotation (Line(
                  points={{20,15.4118},{100,15.4118},{100,120},{180,120}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_wFuel.bottom_hose_in, Coolant_adaptor_bottom.fluidHeatflow_port)
                annotation (Line(
                  points={{20,-10},{100,-10},{100,-120},{180,-120}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(brg_02.flange, example_Engine_Basic_wFuel.brg_02)    annotation (Line(
                  points={{200,0},{110,0},{110,0.588235},{20,0.588235}},
                  color={135,135,135},
                  thickness=0.5,
                  smooth=Smooth.None));
              connect(fuel_adaptor.fluidHeatflow_port, example_Engine_Basic_wFuel.fuel_in)
                annotation (Line(
                  points={{-180,-140},{-100,-140},{-100,-3.64706},{-20,-3.64706}},
                  color={255,0,0},
                  smooth=Smooth.None));
              connect(example_Engine_Basic_wFuel.speed, engineControlBus.speed)
                annotation (Line(
                  points={{-16,-10.6353},{-16,-20},{-30,-20},{-30,120},{0,120},{0,200}},
                  color={0,0,127},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              connect(example_Engine_Basic_wFuel.fuel_flow, engineControlBus.fuel_flow)
                annotation (Line(
                  points={{-10,-10.6353},{-10,-32},{-40,-32},{-40,130},{0,130},{0,200}},
                  color={0,0,127},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              connect(example_Engine_Basic_wFuel.net_torque, engineControlBus.net_torque)
                annotation (Line(
                  points={{-4,-10.6353},{-4,-40},{-50,-40},{-50,140},{0,140},{0,200}},
                  color={0,0,127},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              connect(example_Engine_Basic_wFuel.starter_engage, engineControlBus.starter_engage)
                annotation (Line(
                  points={{-6,27.0588},{-6,100},{0,100},{0,200}},
                  color={255,0,255},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              connect(example_Engine_Basic_wFuel.ECU_Throttle_Out, engineControlBus.ECU_Throttle_Out)
                annotation (Line(
                  points={{0,27.0588},{0,200}},
                  color={0,0,127},
                  smooth=Smooth.None), Text(
                  string="%second",
                  index=1,
                  extent={{6,3},{6,3}}));
              annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-200,-200},
                        {200,200}}), graphics));
            end Example_Engine_Basic_wFuel;

            package Interfaces
             extends Modelica.Icons.InterfacesPackage;

              partial model Engine "Shell for a C2M2L engine model"

                replaceable package Coolant_Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant
                "Fluid used for cooling the engine"
                      annotation (choicesAllMatching=true, Dialog(tab="Cooling System"));

                parameter Modelica.Thermal.FluidHeatFlow.Media.Medium coolant_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Medium()
                "Medium in the component"
                      annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Cooling System"));

                replaceable package Fuel_Medium =
                    C2M2L_Ext.Media.Incompressible.Constant_Property_JP8
                    annotation (choicesAllMatching=true, Dialog(tab="Fuel System"));

                parameter Modelica.Thermal.FluidHeatFlow.Media.Medium fuel_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Medium()
                "Medium in the component"
                      annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fuel System"));

                replaceable package Intake_Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air
                    annotation (choicesAllMatching=true, Dialog(tab="Fluid Model"));

                parameter Modelica.Thermal.FluidHeatFlow.Media.Medium intake_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Medium()
                "Medium in the component"
                      annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fluid Model"));

                Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                    includeBearingConnector=world.driveTrainMechanics3D)
                  annotation (Placement(transformation(extent={{-210,-10},{-190,10}})));
                Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare
                  package Medium =
                      Intake_Medium)
                "Port that nominally flows fluid into the container"
                  annotation (Placement(transformation(extent={{-110,190},{-90,210}})));
                Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare
                  package Medium =
                      Intake_Medium)
                "Port that nominally flows fluid out of the container"
                  annotation (Placement(transformation(extent={{-70,190},{-50,210}})));
                Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a outer_surface_heat_port
                  annotation (Placement(transformation(extent={{90,190},{110,210}})));
                Modelica.Electrical.Analog.Interfaces.PositivePin pin_p
                  annotation (Placement(transformation(extent={{-210,70},{-190,90}})));
                Modelica.Electrical.Analog.Interfaces.NegativePin pin_n
                  annotation (Placement(transformation(extent={{-210,30},{-190,50}})));
                Modelica.Fluid.Interfaces.FluidPort_a fuel_in(redeclare package
                  Medium =
                      Fuel_Medium) annotation (Placement(transformation(extent={{-210,-130},{-190,
                          -110}}),iconTransformation(extent={{-210,-130},{-190,-110}})));
                Modelica.Fluid.Interfaces.FluidPort_b to_cac(redeclare package
                  Medium =
                      Intake_Medium)
                "Port that nominally flows fluid out of the container"
                  annotation (Placement(transformation(extent={{-190,190},{-170,210}})));
                Modelica.Fluid.Interfaces.FluidPort_a from_cac(redeclare
                  package Medium =
                      Intake_Medium)
                "Port that nominally flows fluid into the container"
                  annotation (Placement(transformation(extent={{-150,190},{-130,210}})));
                Modelica.Fluid.Interfaces.FluidPort_b top_hose_outlet(redeclare
                  package Medium =
                             Coolant_Medium)
                  annotation (Placement(transformation(extent={{190,130},{210,150}}),
                      iconTransformation(extent={{230,130},{250,150}})));
                Modelica.Fluid.Interfaces.FluidPort_a bottom_hose_in(redeclare
                  package Medium =
                      Coolant_Medium)
                  annotation (Placement(transformation(extent={{190,-110},{210,-90}})));
                outer Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false)
                  annotation (Placement(transformation(extent={{140,-160},{160,-140}})));
                Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_02(
                    includeBearingConnector=world.driveTrainMechanics3D)
                  annotation (Placement(transformation(extent={{190,-10},{210,10}})));
            public
                C2M2L_Ext.C2M2L_Component_Building_Blocks.Prime_Movers.Common_Controls.Engine_Control_Bus
                  engineControlBus
                  annotation (Placement(transformation(extent={{-10,190},{10,210}})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                intake_adaptor(
                    HeatFlowMedium=intake_adaptor_medium, redeclare package
                  Medium =
                      Intake_Medium) annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={-100,170})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                intake_adaptor1(
                    HeatFlowMedium=intake_adaptor_medium, redeclare package
                  Medium =
                      Intake_Medium) annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={-60,180})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                intake_adaptor2(
                    HeatFlowMedium=intake_adaptor_medium, redeclare package
                  Medium =
                      Intake_Medium) annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={-140,160})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                intake_adaptor3(
                    HeatFlowMedium=intake_adaptor_medium, redeclare package
                  Medium =
                      Intake_Medium) annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={-180,150})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                Coolant_adaptor_top(
                    HeatFlowMedium=coolant_adaptor_medium, redeclare package
                  Medium =
                      Coolant_Medium)
                                    annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={180,130})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                Coolant_adaptor_bottom(
                    HeatFlowMedium=coolant_adaptor_medium, redeclare package
                  Medium =
                      Coolant_Medium)
                                    annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={180,-110})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                fuel_adaptor(
                    HeatFlowMedium=fuel_adaptor_medium,
                    redeclare package Medium =
                      Fuel_Medium) annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={-180,-130})));

              equation
                connect(fuel_in, fuel_adaptor.fluid_port) annotation (Line(
                    points={{-200,-120},{-180,-120}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(to_cac, intake_adaptor3.fluid_port) annotation (Line(
                    points={{-180,200},{-180,160}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(from_cac, intake_adaptor2.fluid_port) annotation (Line(
                    points={{-140,200},{-140,170}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(intake_adaptor.fluid_port, fluid_in) annotation (Line(
                    points={{-100,180},{-100,200}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(intake_adaptor1.fluid_port, fluid_out) annotation (Line(
                    points={{-60,190},{-60,200}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(Coolant_adaptor_top.fluid_port, top_hose_outlet) annotation (Line(
                    points={{180,140},{200,140}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(Coolant_adaptor_bottom.fluid_port, bottom_hose_in) annotation (Line(
                    points={{180,-100},{200,-100}},
                    color={0,127,255},
                    smooth=Smooth.None));
                annotation (Diagram(coordinateSystem(extent={{-200,-200},{200,200}},
                        preserveAspectRatio=true), graphics), Icon(coordinateSystem(extent={{-200,
                          -200},{200,200}})));
              end Engine;

              partial model Engine_wFuel
              "Shell for a C2M2L engine model - without starter"

                replaceable package Coolant_Medium =

                  C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant
                "Fluid used for cooling the engine"
                      annotation (choicesAllMatching=true, Dialog(tab="Cooling System"));

                parameter Modelica.Thermal.FluidHeatFlow.Media.Medium coolant_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Water()
                "Medium in the component"
                      annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Cooling System"));

                replaceable package Fuel_Medium =
                    C2M2L_Ext.Media.Incompressible.Constant_Property_JP8
                    annotation (choicesAllMatching=true, Dialog(tab="Fuel System"));

                parameter Modelica.Thermal.FluidHeatFlow.Media.Medium fuel_adaptor_medium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8()
                "Medium in the component"
                      annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fuel System"));

                replaceable package Intake_Medium =
                     C2M2L_Ext.Media.Ideal_Gases.Simple_Air
                    annotation (choicesAllMatching=true, Dialog(tab="Fluid Model"));

                parameter Modelica.Thermal.FluidHeatFlow.Media.Medium intake_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC()
                "Medium in the component"
                      annotation(__Dymola_choicesAllMatching=true, Dialog(tab="Fluid Model"));

                Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_01(
                    includeBearingConnector=world.driveTrainMechanics3D)
                  annotation (Placement(transformation(extent={{-210,-10},{-190,10}})));
                Modelica.Fluid.Interfaces.FluidPort_a fluid_in(redeclare
                  package Medium =
                      Intake_Medium)
                "Port that nominally flows fluid into the container"
                  annotation (Placement(transformation(extent={{-110,190},{-90,210}})));
                Modelica.Fluid.Interfaces.FluidPort_b fluid_out(redeclare
                  package Medium =
                      Intake_Medium)
                "Port that nominally flows fluid out of the container"
                  annotation (Placement(transformation(extent={{-70,190},{-50,210}})));
                Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a outer_surface_heat_port
                  annotation (Placement(transformation(extent={{90,190},{110,210}})));
                Modelica.Fluid.Interfaces.FluidPort_a fuel_in(redeclare package
                  Medium =
                      Fuel_Medium) annotation (Placement(transformation(extent={{-210,-130},{-190,
                          -110}}),iconTransformation(extent={{-210,-130},{-190,-110}})));
                Modelica.Fluid.Interfaces.FluidPort_b to_cac(redeclare package
                  Medium =
                      Intake_Medium)
                "Port that nominally flows fluid out of the container"
                  annotation (Placement(transformation(extent={{-190,190},{-170,210}})));
                Modelica.Fluid.Interfaces.FluidPort_a from_cac(redeclare
                  package Medium =
                      Intake_Medium)
                "Port that nominally flows fluid into the container"
                  annotation (Placement(transformation(extent={{-150,190},{-130,210}})));
                Modelica.Fluid.Interfaces.FluidPort_b top_hose_outlet(redeclare
                  package Medium =
                             Coolant_Medium)
                  annotation (Placement(transformation(extent={{190,130},{210,150}}),
                      iconTransformation(extent={{230,130},{250,150}})));
                Modelica.Fluid.Interfaces.FluidPort_a bottom_hose_in(redeclare
                  package Medium =
                      Coolant_Medium)
                  annotation (Placement(transformation(extent={{190,-110},{210,-90}})));
                inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false)
                  annotation (Placement(transformation(extent={{140,-160},{160,-140}})));
                Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_02(
                    includeBearingConnector=world.driveTrainMechanics3D)
                  annotation (Placement(transformation(extent={{190,-10},{210,10}})));
            public
                C2M2L_Ext.C2M2L_Component_Building_Blocks.Prime_Movers.Common_Controls.Engine_Control_Bus
                  engineControlBus
                  annotation (Placement(transformation(extent={{-10,190},{10,210}})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                intake_adaptor(
                    HeatFlowMedium=intake_adaptor_medium, redeclare package
                  Medium =
                      Intake_Medium) annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={-100,170})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                intake_adaptor1(
                    HeatFlowMedium=intake_adaptor_medium, redeclare package
                  Medium =
                      Intake_Medium) annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={-60,180})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                intake_adaptor2(
                    HeatFlowMedium=intake_adaptor_medium, redeclare package
                  Medium =
                      Intake_Medium) annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={-140,160})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                intake_adaptor3(
                    HeatFlowMedium=intake_adaptor_medium, redeclare package
                  Medium =
                      Intake_Medium) annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={-180,150})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                Coolant_adaptor_top(
                    HeatFlowMedium=coolant_adaptor_medium, redeclare package
                  Medium =
                      Coolant_Medium)
                                    annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={180,130})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                Coolant_adaptor_bottom(
                    HeatFlowMedium=coolant_adaptor_medium, redeclare package
                  Medium =
                      Coolant_Medium)
                                    annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={180,-110})));
                C2M2L_OM.MSL_Extend.Thermal.FluidHeatFlow.Adaptors.FluidAdaptor
                                                                                fuel_adaptor(
                    HeatFlowMedium=fuel_adaptor_medium,
                    redeclare package Medium =
                      Fuel_Medium) annotation (
                    Placement(transformation(
                      extent={{-10,-10},{10,10}},
                      rotation=90,
                      origin={-180,-130})));

              equation
                connect(fuel_in, fuel_adaptor.fluid_port) annotation (Line(
                    points={{-200,-120},{-180,-120}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(to_cac, intake_adaptor3.fluid_port) annotation (Line(
                    points={{-180,200},{-180,160}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(from_cac, intake_adaptor2.fluid_port) annotation (Line(
                    points={{-140,200},{-140,170}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(intake_adaptor.fluid_port, fluid_in) annotation (Line(
                    points={{-100,180},{-100,200}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(intake_adaptor1.fluid_port, fluid_out) annotation (Line(
                    points={{-60,190},{-60,200}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(Coolant_adaptor_top.fluid_port, top_hose_outlet) annotation (Line(
                    points={{180,140},{200,140}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(Coolant_adaptor_bottom.fluid_port, bottom_hose_in) annotation (Line(
                    points={{180,-100},{200,-100}},
                    color={0,127,255},
                    smooth=Smooth.None));
                annotation (Diagram(coordinateSystem(extent={{-200,-200},{200,200}},
                        preserveAspectRatio=true), graphics), Icon(coordinateSystem(extent={{-200,
                          -200},{200,200}})));
              end Engine_wFuel;
            end Interfaces;

            package Tests
            extends C2M2L_OM.MSL_Extend.Icons.Package_For_Simple_Test_Cases;

              model test_engine "Test engine on a dyno"
                extends C2M2L_Ext.Icons.Simple_Test_Case;
            public
                inner Modelica.Fluid.System system
                  annotation (Placement(transformation(extent={{-120,120},{-100,140}})));
                inner Modelica.Mechanics.MultiBody.World world(
                  gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.UniformGravity,
                  n={-1,0,0},
                  enableAnimation=false,
                  driveTrainMechanics3D=false)
                  annotation (Placement(transformation(extent={{-60,-90},{-40,-70}})));

                inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env(fixed_htc=200)
                  annotation (Placement(transformation(extent={{-80,120},{-60,140}})));
                replaceable Example_Engine_Basic_Advanced example_Engine_Basic(
                  redeclare package Coolant_Medium =

                    C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                  coolant_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Water(),
                  fuel_adaptor_medium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
                  redeclare package Intake_Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                  intake_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC())
                  annotation (Placement(transformation(extent={{-40,-32},{0,28}})));
              //    constrainedby
              //    C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Example_Engine_Basic(
              //      crank_speed(displayUnit="rpm") = 62.831853071796)

                C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
                                                    air_Path_For_Testing
                  annotation (Placement(transformation(extent={{-90,50},{-70,70}})));
                C2M2L_Ext.Environments.Thermal_To_Environment_Thru_Area thermal_To_Environment_Thru_Area(
                    area_for_heat_transfer=0.5)
                  annotation (Placement(transformation(extent={{0,40},{20,60}})));
                C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Cooling_Cart_For_Testing
                                                                                     cooling_Cart_For_Testing
                  annotation (Placement(transformation(extent={{40,-40},{60,-20}})));
                C2M2L_Ext.Blocks.Sources.Steps_Multiple speed_steps(
                  offset=700,
                  length=100,
                  height=200) annotation (Placement(transformation(extent={{40,60},{60,80}})));
                C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Test_Driver
                  test_driver annotation (Placement(transformation(rotation=0, extent={{-60,80},
                          {-40,100}})));
                Modelica.Electrical.Analog.Sources.ConstantVoltage constantVoltage(V=24)
                  annotation (Placement(transformation(extent={{-80,-42},{-60,-22}})));
                Modelica.Electrical.Analog.Basic.Ground ground
                  annotation (Placement(transformation(extent={{-62,-58},{-42,-38}})));
                C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Dyno_Non_Motoring
                                                                                   dyno_Non_Motoring(w_start=0)
                        annotation (Placement(transformation(extent={{80,-32},{120,28}})));
                Modelica.Fluid.Sensors.TemperatureTwoPort temperature(redeclare
                  package Medium =

                    C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                  annotation (Placement(transformation(extent={{12,4},{32,24}})));
                C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
                                                                                          fuel_Tank
                  annotation (Placement(transformation(extent={{-138,-32},{-98,28}})));
                C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Charge_Air_Cooler_Surrogate
                                                                                        charge_Air_Cooler_Surrogate
                  annotation (Placement(transformation(extent={{-60,50},{-40,70}})));
              equation

                connect(air_Path_For_Testing.intake_air, example_Engine_Basic.fluid_in)
                  annotation (Line(
                    points={{-86,50},{-86,36},{-30,36},{-30,28}},
                    color={0,127,255},
                    pattern=LinePattern.None,
                    smooth=Smooth.None));
                connect(air_Path_For_Testing.exhaust_out, example_Engine_Basic.fluid_out)
                  annotation (Line(
                    points={{-74,50},{-74,38},{-26,38},{-26,28}},
                    color={0,127,255},
                    pattern=LinePattern.None,
                    smooth=Smooth.None));
                connect(thermal_To_Environment_Thru_Area.solid, example_Engine_Basic.outer_surface_heat_port)
                  annotation (Line(
                    points={{0,50},{-10,50},{-10,28}},
                    color={191,0,0},
                    pattern=LinePattern.None,
                    smooth=Smooth.None));
                connect(test_driver.engine_Control_Bus, example_Engine_Basic.engineControlBus)
                  annotation (Line(
                    points={{-41.2,90},{-20,90},{-20,28}},
                    color={175,175,175},
                    thickness=0.5,
                    smooth=Smooth.None));
                connect(constantVoltage.p, example_Engine_Basic.pin_p) annotation (Line(
                    points={{-80,-32},{-80,10},{-40,10}},
                    color={0,0,255},
                    smooth=Smooth.None));
                connect(constantVoltage.n, example_Engine_Basic.pin_n) annotation (Line(
                    points={{-60,-32},{-60,4},{-40,4}},
                    color={0,0,255},
                    smooth=Smooth.None));
                connect(ground.p, constantVoltage.n) annotation (Line(
                    points={{-52,-38},{-52,-32},{-60,-32}},
                    color={0,0,255},
                    smooth=Smooth.None));
                connect(dyno_Non_Motoring.brg_01, example_Engine_Basic.brg_02) annotation (
                    Line(
                    points={{80,0},{40,0},{40,-2},{0,-2}},
                    color={135,135,135},
                    thickness=0.5,
                    smooth=Smooth.None));
                connect(speed_steps.y, dyno_Non_Motoring.Set_Speed_rpm) annotation (Line(
                    points={{61,70},{100,70},{100,24}},
                    color={0,0,127},
                    smooth=Smooth.None));
                connect(example_Engine_Basic.top_hose_outlet, temperature.port_a) annotation (
                   Line(
                    points={{4,19},{8,19},{8,14},{12,14}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(temperature.port_b, cooling_Cart_For_Testing.to_rad) annotation (Line(
                    points={{32,14},{36,14},{36,-24},{40,-24}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(fuel_Tank.fluid_out, example_Engine_Basic.fuel_in) annotation (Line(
                    points={{-126,24},{-126,30},{-60,30},{-60,-20},{-40,-20}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(cooling_Cart_For_Testing.from_rad, example_Engine_Basic.bottom_hose_in)
                  annotation (Line(
                    points={{40,-36},{24,-36},{24,-17},{0,-17}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(charge_Air_Cooler_Surrogate.from_engine, example_Engine_Basic.to_cac)
                  annotation (Line(
                    points={{-56,50},{-56,44},{-38,44},{-38,28}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(charge_Air_Cooler_Surrogate.to_engine, example_Engine_Basic.from_cac)
                  annotation (Line(
                    points={{-44,50},{-44,46},{-34,46},{-34,28}},
                    color={0,127,255},
                    smooth=Smooth.None));
                annotation (Diagram(coordinateSystem(extent={{-160,-100},{140,140}},
                        preserveAspectRatio=true),
                                    graphics),
                  experiment(StopTime=1000),
                  __Dymola_experimentSetupOutput,
                  Icon(coordinateSystem(extent={{-160,-100},{140,140}})));
              end test_engine;

              model test_engine_no_starter "Test engine on a dyno"
                extends C2M2L_Ext.Icons.Simple_Test_Case;
            public
                inner Modelica.Fluid.System system
                  annotation (Placement(transformation(extent={{-120,120},{-100,140}})));
                inner Modelica.Mechanics.MultiBody.World world(
                  gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.UniformGravity,
                  n={-1,0,0},
                  enableAnimation=false,
                  driveTrainMechanics3D=false)
                  annotation (Placement(transformation(extent={{-60,-90},{-40,-70}})));

                inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env(fixed_htc=200)
                  annotation (Placement(transformation(extent={{-80,120},{-60,140}})));
                replaceable Example_Engine_Basic_wFuel    example_Engine_Basic(
                  redeclare package Coolant_Medium =

                    C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                  coolant_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Water(),
                  fuel_adaptor_medium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
                  redeclare package Intake_Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                  intake_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC(),
                  example_Engine_Basic_wFuel(Coolant_Medium=
                        Modelica.Thermal.FluidHeatFlow.Media.Water()))
                  constrainedby Example_Engine_Basic_Advanced(
                  redeclare package Coolant_Medium =

                    C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant,
                  coolant_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Water(),
                  fuel_adaptor_medium=C2M2L_OM.MSL_Extend.Media.Constant_Property_JP8(),
                  redeclare package Intake_Medium =
                    C2M2L_Ext.Media.Ideal_Gases.Simple_Air,
                  intake_adaptor_medium=Modelica.Thermal.FluidHeatFlow.Media.Air_30degC())
                  annotation (Placement(transformation(extent={{-40,-32},{0,28}})));
              //    constrainedby
              //    C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Example_Engine_Basic(
              //      crank_speed(displayUnit="rpm") = 62.831853071796)

                C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
                                                    air_Path_For_Testing
                  annotation (Placement(transformation(extent={{-90,50},{-70,70}})));
                C2M2L_Ext.Environments.Thermal_To_Environment_Thru_Area thermal_To_Environment_Thru_Area(
                    area_for_heat_transfer=0.5)
                  annotation (Placement(transformation(extent={{0,40},{20,60}})));
                C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Cooling_Cart_For_Testing
                                                                                     cooling_Cart_For_Testing
                  annotation (Placement(transformation(extent={{40,-40},{60,-20}})));
                C2M2L_Ext.Blocks.Sources.Steps_Multiple speed_steps(
                  offset=700,
                  length=100,
                  height=200) annotation (Placement(transformation(extent={{40,60},{60,80}})));
                C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Test_Driver
                  test_driver annotation (Placement(transformation(rotation=0, extent={{-60,80},
                          {-40,100}})));
                C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Dyno_Non_Motoring
                                                                                   dyno_Non_Motoring(w_start=0)
                        annotation (Placement(transformation(extent={{80,-32},{120,28}})));
                Modelica.Fluid.Sensors.TemperatureTwoPort temperature(redeclare
                  package Medium =

                    C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                  annotation (Placement(transformation(extent={{12,4},{32,24}})));
                C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
                                                                                          fuel_Tank
                  annotation (Placement(transformation(extent={{-138,-32},{-98,28}})));
                C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Charge_Air_Cooler_Surrogate
                                                                                        charge_Air_Cooler_Surrogate
                  annotation (Placement(transformation(extent={{-60,50},{-40,70}})));
              equation

                connect(air_Path_For_Testing.intake_air, example_Engine_Basic.fluid_in)
                  annotation (Line(
                    points={{-86,50},{-86,36},{-30,36},{-30,28}},
                    color={0,127,255},
                    pattern=LinePattern.None,
                    smooth=Smooth.None));
                connect(air_Path_For_Testing.exhaust_out, example_Engine_Basic.fluid_out)
                  annotation (Line(
                    points={{-74,50},{-74,38},{-26,38},{-26,28}},
                    color={0,127,255},
                    pattern=LinePattern.None,
                    smooth=Smooth.None));
                connect(thermal_To_Environment_Thru_Area.solid, example_Engine_Basic.outer_surface_heat_port)
                  annotation (Line(
                    points={{0,50},{-10,50},{-10,28}},
                    color={191,0,0},
                    pattern=LinePattern.None,
                    smooth=Smooth.None));
                connect(test_driver.engine_Control_Bus, example_Engine_Basic.engineControlBus)
                  annotation (Line(
                    points={{-41.2,90},{-20,90},{-20,28}},
                    color={175,175,175},
                    thickness=0.5,
                    smooth=Smooth.None));
                connect(dyno_Non_Motoring.brg_01, example_Engine_Basic.brg_02) annotation (
                    Line(
                    points={{80,0},{40,0},{40,-2},{0,-2}},
                    color={135,135,135},
                    thickness=0.5,
                    smooth=Smooth.None));
                connect(speed_steps.y, dyno_Non_Motoring.Set_Speed_rpm) annotation (Line(
                    points={{61,70},{100,70},{100,24}},
                    color={0,0,127},
                    smooth=Smooth.None));
                connect(example_Engine_Basic.top_hose_outlet, temperature.port_a) annotation (
                   Line(
                    points={{4,19},{8,19},{8,14},{12,14}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(temperature.port_b, cooling_Cart_For_Testing.to_rad) annotation (Line(
                    points={{32,14},{36,14},{36,-24},{40,-24}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(fuel_Tank.fluid_out, example_Engine_Basic.fuel_in) annotation (Line(
                    points={{-126,24},{-126,30},{-60,30},{-60,-20},{-40,-20}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(fuel_Tank.mount_01, world.frame_b) annotation (Line(
                    points={{-118,-32},{-118,-56},{-36,-56},{-36,-80},{-40,-80}},
                    color={95,95,95},
                    thickness=0.5,
                    smooth=Smooth.None));
                connect(cooling_Cart_For_Testing.from_rad, example_Engine_Basic.bottom_hose_in)
                  annotation (Line(
                    points={{40,-36},{24,-36},{24,-17},{0,-17}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(charge_Air_Cooler_Surrogate.from_engine, example_Engine_Basic.to_cac)
                  annotation (Line(
                    points={{-56,50},{-56,44},{-38,44},{-38,28}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(charge_Air_Cooler_Surrogate.to_engine, example_Engine_Basic.from_cac)
                  annotation (Line(
                    points={{-44,50},{-44,46},{-34,46},{-34,28}},
                    color={0,127,255},
                    smooth=Smooth.None));
                annotation (Diagram(coordinateSystem(extent={{-160,-100},{140,140}},
                        preserveAspectRatio=true),
                                    graphics),
                  experiment(StopTime=1000),
                  __Dymola_experimentSetupOutput,
                  Icon(coordinateSystem(extent={{-160,-100},{140,140}})));
              end test_engine_no_starter;

              model test_engine_original "Test engine on a dyno"
                extends C2M2L_Ext.Icons.Simple_Test_Case;
            public
                inner Modelica.Fluid.System system
                  annotation (Placement(transformation(extent={{-120,120},{-100,140}})));
                inner Modelica.Mechanics.MultiBody.World world(
                  gravityType=Modelica.Mechanics.MultiBody.Types.GravityTypes.UniformGravity,
                  n={-1,0,0},
                  enableAnimation=false)
                  annotation (Placement(transformation(extent={{-60,-90},{-40,-70}})));

                inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env(fixed_htc=
                      200)
                  annotation (Placement(transformation(extent={{-80,120},{-60,140}})));
                replaceable
                C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Example_Engine_Basic
                  example_Engine_Basic(crank_speed(displayUnit="rpm") = 62.831853071796)
                  constrainedby
                C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Example_Engine_Basic(
                    crank_speed(displayUnit="rpm") = 62.831853071796)
                  annotation (Placement(transformation(extent={{-40,-32},{0,28}})));

                C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
                                                    air_Path_For_Testing
                  annotation (Placement(transformation(extent={{-90,50},{-70,70}})));
                C2M2L_Ext.Environments.Thermal_To_Environment_Thru_Area thermal_To_Environment_Thru_Area(
                    area_for_heat_transfer=0.5)
                  annotation (Placement(transformation(extent={{0,40},{20,60}})));
                C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Cooling_Cart_For_Testing
                                                                                     cooling_Cart_For_Testing
                  annotation (Placement(transformation(extent={{40,-40},{60,-20}})));
                C2M2L_Ext.Blocks.Sources.Steps_Multiple speed_steps(
                  offset=700,
                  length=100,
                  height=200) annotation (Placement(transformation(extent={{40,60},{60,80}})));
                C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Test_Driver
                  test_driver annotation (Placement(transformation(rotation=0, extent={{-60,80},
                          {-40,100}})));
                Modelica.Electrical.Analog.Sources.ConstantVoltage constantVoltage(V=24)
                  annotation (Placement(transformation(extent={{-80,-42},{-60,-22}})));
                Modelica.Electrical.Analog.Basic.Ground ground
                  annotation (Placement(transformation(extent={{-62,-58},{-42,-38}})));
                C2M2L_Ext.Testing_Blocks.Mechanical_Source_Sinks.Dyno_Non_Motoring
                                                                                   dyno_Non_Motoring(w_start=0)
                        annotation (Placement(transformation(extent={{80,-32},{120,28}})));
                Modelica.Fluid.Sensors.TemperatureTwoPort temperature(redeclare
                  package Medium =

                    C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
                  annotation (Placement(transformation(extent={{12,4},{32,24}})));
                C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
                                                                                          fuel_Tank
                  annotation (Placement(transformation(extent={{-138,-32},{-98,28}})));
                C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Charge_Air_Cooler_Surrogate
                                                                                        charge_Air_Cooler_Surrogate
                  annotation (Placement(transformation(extent={{-60,50},{-40,70}})));
              equation

                connect(world.frame_b, example_Engine_Basic.mount_03) annotation (Line(
                    points={{-40,-80},{-36,-80},{-36,-56},{-16.6,-56},{-16.6,-32.2}},
                    color={95,95,95},
                    thickness=0.5,
                    smooth=Smooth.None));
                connect(air_Path_For_Testing.intake_air, example_Engine_Basic.fluid_in)
                  annotation (Line(
                    points={{-86,50},{-86,36},{-36.2,36},{-36.2,24}},
                    color={0,127,255},
                    pattern=LinePattern.None,
                    smooth=Smooth.None));
                connect(air_Path_For_Testing.exhaust_out, example_Engine_Basic.fluid_out)
                  annotation (Line(
                    points={{-74,50},{-74,38},{-28,38},{-28,24}},
                    color={0,127,255},
                    pattern=LinePattern.None,
                    smooth=Smooth.None));
                connect(thermal_To_Environment_Thru_Area.solid, example_Engine_Basic.outer_surface_heat_port)
                  annotation (Line(
                    points={{0,50},{-9.8,50},{-9.8,24}},
                    color={191,0,0},
                    pattern=LinePattern.None,
                    smooth=Smooth.None));
                connect(test_driver.engine_Control_Bus, example_Engine_Basic.engineControlBus)
                  annotation (Line(
                    points={{-41.2,90},{-20,90},{-20,20.4}},
                    color={175,175,175},
                    thickness=0.5,
                    smooth=Smooth.None));
                connect(constantVoltage.p, example_Engine_Basic.pin_p) annotation (Line(
                    points={{-80,-32},{-80,10},{-40,10}},
                    color={0,0,255},
                    smooth=Smooth.None));
                connect(constantVoltage.n, example_Engine_Basic.pin_n) annotation (Line(
                    points={{-60,-32},{-60,4},{-40,4}},
                    color={0,0,255},
                    smooth=Smooth.None));
                connect(ground.p, constantVoltage.n) annotation (Line(
                    points={{-52,-38},{-52,-32},{-60,-32}},
                    color={0,0,255},
                    smooth=Smooth.None));
                connect(dyno_Non_Motoring.brg_01, example_Engine_Basic.brg_02) annotation (
                    Line(
                    points={{80,0},{0,0}},
                    color={135,135,135},
                    thickness=0.5,
                    smooth=Smooth.None));
                connect(speed_steps.y, dyno_Non_Motoring.Set_Speed_rpm) annotation (Line(
                    points={{61,70},{100,70},{100,24}},
                    color={0,0,127},
                    smooth=Smooth.None));
                connect(example_Engine_Basic.top_hose_outlet, temperature.port_a) annotation (
                   Line(
                    points={{4,14},{12,14}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(temperature.port_b, cooling_Cart_For_Testing.to_rad) annotation (Line(
                    points={{32,14},{36,14},{36,-24},{40,-24}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(fuel_Tank.fluid_out, example_Engine_Basic.fuel_in) annotation (Line(
                    points={{-126,24},{-126,30},{-60,30},{-60,14},{-44,14}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(fuel_Tank.mount_01, world.frame_b) annotation (Line(
                    points={{-118,-32},{-118,-56},{-36,-56},{-36,-80},{-40,-80}},
                    color={95,95,95},
                    thickness=0.5,
                    smooth=Smooth.None));
                connect(cooling_Cart_For_Testing.from_rad, example_Engine_Basic.bottom_hose_in)
                  annotation (Line(
                    points={{40,-36},{24,-36},{24,-10},{4,-10}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(charge_Air_Cooler_Surrogate.from_engine, example_Engine_Basic.to_cac)
                  annotation (Line(
                    points={{-56,50},{-56,44},{-32,44},{-32,28}},
                    color={0,127,255},
                    smooth=Smooth.None));
                connect(charge_Air_Cooler_Surrogate.to_engine, example_Engine_Basic.from_cac)
                  annotation (Line(
                    points={{-44,50},{-44,46},{-24,46},{-24,28}},
                    color={0,127,255},
                    smooth=Smooth.None));
                annotation (Diagram(coordinateSystem(extent={{-160,-100},{140,140}},
                        preserveAspectRatio=true),
                                    graphics),
                  experiment(StopTime=1000),
                  __Dymola_experimentSetupOutput,
                  Icon(coordinateSystem(extent={{-160,-100},{140,140}})));
              end test_engine_original;
            end Tests;
          end Engine_Basic;
        end Compression_Ignition;
      end Reciprocating;
    end Prime_Movers;

    package Suspension
    extends Modelica.Icons.Package;

      package Component_Test_Cases
        extends C2M2L_Ext.Icons.Package_For_Simple_Test_Cases;
      end Component_Test_Cases;
    end Suspension;
  end C2M2L_Delivered_Component_Implementations;

  package Designs_For_Testing_Only
  "Contains design models that can be used for testing the tools"
  extends Modelica.Icons.Package;
    package Alpha "Design named Alpha with some test benches"
    extends Modelica.Icons.Package;
      model Design_OM "Contains the full design within this scope"
        extends C2M2L_CyPhy.Icons.Component_Assembly_400x300;
        C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
          Final_Drive_RHS
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=90,
              origin={266,172})));
        C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
          Final_Drive_LHS
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=-90,
              origin={270,-198})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_with_TC
          pTM_with_TC
          annotation (Placement(transformation(extent={{70,-88},{110,-28}})));
        C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft_RHS
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=90,
              origin={268,32})));
        C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft_LHS
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={270,-122})));
        C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft2
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=90,
              origin={104,0})));
        C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft3
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=270,
              origin={104,-104})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft4
          annotation (Placement(transformation(extent={{286,42},{306,62}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft5
          annotation (Placement(transformation(extent={{286,-166},{306,-146}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Gearbox_90_Degree
          gearbox_90_Degree
          annotation (Placement(transformation(extent={{20,-30},{-20,30}},
              rotation=270,
              origin={104,36})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Gearbox_90_Degree
          gearbox_90_Degree1
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=270,
              origin={104,-144})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_without_TC
          cross_Drive_without_TC
          annotation (choicesAllMatching=true, Placement(transformation(extent={{234,-88},
                  {274,-28}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Example_Engine_Basic
          engine
          annotation (choicesAllMatching=true, Placement(transformation(extent={{-94,-88},{-54,-28}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Liquid
          charge_Cooler_Air_To_Liquid
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=90,
              origin={-46,102})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Accessory_Drives.Front_End_Accessory_Drive
          front_End_Accessory_Drive
          annotation (Placement(transformation(extent={{-20,-28},{20,28}},
              rotation=180,
              origin={-128,-80})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Hydraulic_Fan_Assembly
          hydraulic_Fan_Assembly
          annotation (Placement(transformation(extent={{24,198},{64,258}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Radiators.Radiator_Main_Cooling_Pack
          radiator_Main_Cooling_Pack(
          loss_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
          loss_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
          flow_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate,
          flow_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate,
          effec_spec=C2M2L_Ext.Fluid.Base_Classes.Effec_Spec.Q_per_ITD_Area,
          flow_effec_spec=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate,
          effectiveness_table=[0.0,0.0,0.1,0.2,0.3; 0.0,0.0,0.0,0.0,0.0; 0.1,0.0,
              100,800,1000; 0.2,0.0,800,1000,1000; 0.3,0.0,1000,1000,1000])
          annotation (Placement(transformation(extent={{-38,246},{2,186}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fill_and_Pressurization.Degas_Bottle
          degas_Bottle
          annotation (Placement(transformation(extent={{0,-132},{40,-72}})));
        C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
          lead_Acid_Battery
          annotation (Placement(transformation(extent={{-244,-196},{-204,-136}})));
        C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Alternator
          alternator
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=-90,
              origin={-260,-94})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Waterjet.Waterjet
          waterjet_RHS
          annotation (Placement(transformation(extent={{320,20},{360,80}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Waterjet.Waterjet
          waterjet_LHS
          annotation (Placement(transformation(extent={{320,-124},{360,-184}})));
        C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
          lead_Acid_Battery1
          annotation (choicesAllMatching=true,Placement(transformation(extent={{-296,-196},{-256,-136}})));
        C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
          fuel_Tank
          annotation (Placement(transformation(extent={{-392,-80},{-352,-20}})));
        C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Pump
          fuel_Pump(efficiency_characteristic=[0,1; 10,1], flow_characteristic=[
              0.00083259501,172823.2968; 0.00087131978,170206.0469; 0.00095845365,
              162573.5506; 0.00098265505,160211.4067; 0.00106011088,152651.3054;
              0.00111819802,145782.0587; 0.00115692279,141202.5609; 0.00123921133,
              132120.0971; 0.00125373469,130517.0660; 0.00132150618,122884.5697;
              0.00135539193,118774.6049; 0.00138443234,115252.0734; 0.00145220383,
              107619.5771; 0.00147640523,105165.7329; 0.00151997532,100749.6409;
              0.00158774050,92913.7492; 0.00159258583,92353.8949; 0.00167003535,
              83194.8994; 0.00173780684,73933.8614; 0.00174264586,73272.6541;
              0.00186850449,56481.0243])
          annotation (Placement(transformation(extent={{-280,-42},{-240,18}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Pump_Hydraulic
          pump_Hydraulic
          annotation (Placement(transformation(extent={{24,58},{64,118}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Accumulator
          hydraulic_Accumulator
          annotation (Placement(transformation(extent={{24,128},{64,188}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Radiators.Oil_To_Coolant_Cooler
          oil_To_Coolant_Cooler(
          effectiveness_table=[0.0,0.0,0.1,0.2,0.3; 0.0,0.0,0.0,0.0,0.0; 0.1,0.0,
              100,800,1000; 0.2,0.0,800,1000,1000; 0.3,0.0,1000,1000,1000],
          loss_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
          loss_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
          flow_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate,
          flow_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate,
          effec_spec=C2M2L_Ext.Fluid.Base_Classes.Effec_Spec.Q_per_ITD_Area,
          flow_effec_spec=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate)
          annotation (Placement(transformation(extent={{-20,30},{20,-30}},
              rotation=90,
              origin={130,170})));
        Extra_Components.Conventional_ECU    ECU
          annotation (choicesAllMatching=true,Placement(transformation(extent={{-112,-30},{-152,10}})));
        replaceable
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Prime_Movers.Electrical_Controls.General_Controllers.Transmission_TCU
          TCU constrainedby
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Prime_Movers.Electrical_Controls.General_Controllers.Transmission_TCU
          annotation (Placement(transformation(extent={{56,-30},{16,10}})));
        outer C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
          annotation (Placement(transformation(extent={{280,242},{300,262}})));
        outer Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
            enableAnimation=false)
          annotation (Placement(transformation(extent={{360,242},{380,262}})));
        outer Modelica.Fluid.System system
          annotation (Placement(transformation(extent={{320,242},{340,262}})));
        C2M2L_Ext.Testing_Blocks.Hull.Electrical_Interface_Swim
          electrical_Interface_Swim
          annotation (Placement(transformation(extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-180,-10})));
        Modelica.Electrical.Analog.Basic.Ground ground
          annotation (Placement(transformation(extent={{-214,-212},{-194,-192}})));
        Modelica.Fluid.Interfaces.FluidPort_a engine_air_path_in(redeclare
          package Medium =
                     C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid into the container"
          annotation (Placement(transformation(extent={{-168,290},{-148,310}})));
        Modelica.Fluid.Interfaces.FluidPort_b engine_air_path_out(redeclare
          package Medium =
                     C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid out of the container"
          annotation (Placement(transformation(extent={{-110,290},{-90,310}})));
        Modelica.Fluid.Interfaces.FluidPort_a cold_fluid_in(redeclare package
          Medium =
              C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid into the container"
          annotation (Placement(transformation(extent={{-60,290},{-40,310}})));
        Modelica.Fluid.Interfaces.FluidPort_b cold_fluid_out(redeclare package
          Medium =
              C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid out of the container"
          annotation (Placement(transformation(extent={{74,288},{94,308}})));
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Brakes_Clutch.Common_Controls.Brake_Control_Bus
          brake_bus
          annotation (Placement(transformation(extent={{190,290},{210,310}})));
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Cross_Drive_Steering.Common_Controls.Steering_Control_Bus
          steering_bus
          annotation (Placement(transformation(extent={{220,290},{240,310}})));
        C2M2L_Ext.Interfaces.Context_Interfaces.Driver.Driver_Bus driver_bus
          annotation (Placement(transformation(extent={{154,290},{174,310}})));
        Modelica.Mechanics.MultiBody.Interfaces.Frame_a waterjet_thrust
          annotation (Placement(transformation(extent={{384,-16},{416,16}})));
        Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_RHS(
            includeBearingConnector=world.driveTrainMechanics3D)          annotation (
           Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={266,300})));
        Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_LHS(
            includeBearingConnector=world.driveTrainMechanics3D)          annotation (
           Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={272,-300})));
        C2M2L_Ext.Electrical.Interfaces.Battery_Bus battery_bus
          annotation (Placement(transformation(extent={{-410,34},{-390,54}})));
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Range_Packs.Common_Controls.Range_Pack_Control_Bus
          range_pack_control_bus
          annotation (Placement(transformation(extent={{-410,50},{-390,70}})));
      equation

        connect(fuel_Pump.fluid_out,engine. fuel_in)               annotation (Line(
            points={{-239.7,-17.4},{-220,-17.4},{-220,-42},{-98,-42}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(engine.brg_01, front_End_Accessory_Drive.crank_pulley)
          annotation (Line(
            points={{-94,-56},{-104,-56},{-104,-78},{-108,-78}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(front_End_Accessory_Drive.aux_3,alternator. brg_01) annotation (
            Line(
            points={{-148,-64},{-260,-64},{-260,-74}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(engine.bottom_hose_in, degas_Bottle.fluid_in)
          annotation (Line(
            points={{-50,-66},{-46,-66},{-46,-108},{0,-108}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(radiator_Main_Cooling_Pack.hot_fluid_in,engine. bottom_hose_in)
          annotation (Line(
            points={{-38,206},{-46,206},{-46,-66},{-50,-66}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(radiator_Main_Cooling_Pack.cold_fluid_out,hydraulic_Fan_Assembly. fluid_in)
          annotation (Line(
            points={{2,222},{24,222}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(charge_Cooler_Air_To_Liquid.cold_fluid_in,engine. top_hose_outlet)
          annotation (Line(
            points={{-38,84},{-38,-42},{-50,-42}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(engine.engineControlBus, ECU.engine_control_bus)
          annotation (Line(
            points={{-74,-35.6},{-74,2},{-111.6,2}},
            color={175,175,175},
            thickness=0.5,
            smooth=Smooth.None));
        connect(ECU.driver_bus, TCU.driver_bus)
          annotation (Line(
            points={{-112,-10},{56,-10}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(ECU.range_pack_control_bus, TCU.range_pack_control_bus)
          annotation (Line(
            points={{-112,-22},{56,-22}},
            color={213,170,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(pTM_with_TC.torque_Converter_Control_Bus, TCU.tcc_control_bus)
          annotation (Line(
            points={{85.8,-35.8},{85.8,2},{56,2}},
            color={85,255,85},
            thickness=0.5,
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.range_Pack_Control_Bus, TCU.range_pack_control_bus)
          annotation (Line(
            points={{251,-35.2},{251,-22},{56,-22}},
            color={213,170,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(pTM_with_TC.brg_02,drive_Shaft2. frame_a) annotation (Line(
            points={{104,-36},{104,-20},{103,-20},{103,-10}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft2.frame_b,gearbox_90_Degree. brg_01) annotation (Line(
            points={{103,10},{103,14},{104,14},{104,18}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(gearbox_90_Degree.brg_02,drive_Shaft4. frame_a) annotation (Line(
            points={{124,52},{206,52},{206,52},{286,52}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft4.frame_b,waterjet_RHS. brg_01)
                                                       annotation (Line(
            points={{306,52},{314,52},{314,52},{320,52}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.brg_02, drive_Shaft_RHS.frame_a)
                                                                    annotation (
            Line(
            points={{268,-36},{268,-4},{267,-4},{267,22}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft_RHS.frame_b, Final_Drive_RHS.brg_01)
          annotation (Line(
            points={{267,42},{267,154},{266,154}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(pTM_with_TC.fluid_out,cross_Drive_without_TC. fluid_in) annotation (
           Line(
            points={{82,-32},{82,-26},{237.8,-26},{237.8,-32}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(cross_Drive_without_TC.fluid_out,oil_To_Coolant_Cooler. hot_fluid_out)
          annotation (Line(
            points={{246,-32},{246,-24},{140,-24},{140,188},{138,188}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(oil_To_Coolant_Cooler.hot_fluid_in,pTM_with_TC. fluid_in)
          annotation (Line(
            points={{138,148},{138,-24},{73.8,-24},{73.8,-32}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(pTM_with_TC.brg_03,drive_Shaft3. frame_a) annotation (Line(
            points={{104,-76},{104,-92},{105,-92},{105,-94}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft3.frame_b,gearbox_90_Degree1. brg_01) annotation (Line(
            points={{105,-114},{105,-118},{104,-118},{104,-122}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(gearbox_90_Degree1.brg_02,drive_Shaft5. frame_a) annotation (Line(
            points={{124,-156},{206,-156},{206,-156},{286,-156}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft5.frame_b, waterjet_LHS.brg_01)
                                                        annotation (Line(
            points={{306,-156},{314,-156},{314,-156},{320,-156}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.brg_03, drive_Shaft_LHS.frame_a)
                                                                     annotation (
            Line(
            points={{268,-76},{268,-112},{271,-112}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft_LHS.frame_b, Final_Drive_LHS.brg_01) annotation (Line(
            points={{271,-132},{271,-154},{270,-154},{270,-176}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(hydraulic_Fan_Assembly.hyd_a,pump_Hydraulic. hyd_in) annotation (
            Line(
            points={{24,242},{16,242},{16,98},{24,98}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(pump_Hydraulic.hyd_out,hydraulic_Fan_Assembly. hyd_b) annotation (
            Line(
            points={{64,98},{78,98},{78,242},{64,242}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(hydraulic_Accumulator.hyd,pump_Hydraulic. hyd_out) annotation (Line(
            points={{36.2,138},{42,138},{42,120},{78,120},{78,98},{64,98}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(engine.brg_02, pTM_with_TC.brg_01)               annotation (Line(
            points={{-54,-56},{8,-56},{8,-56},{70,-56}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(lead_Acid_Battery1.pin_n,lead_Acid_Battery. pin_p) annotation (Line(
            points={{-256,-165.667},{-250,-165.667},{-250,-165.667},{-244,-165.667}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(charge_Cooler_Air_To_Liquid.cold_fluid_out,oil_To_Coolant_Cooler. cold_fluid_in)
          annotation (Line(
            points={{-38,124},{122,124},{122,148}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(oil_To_Coolant_Cooler.cold_fluid_out,radiator_Main_Cooling_Pack. hot_fluid_out)
          annotation (Line(
            points={{122,188},{122,206},{2,206}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(engine.pin_p, alternator.pin_p)               annotation (Line(
            points={{-94,-46},{-242,-46},{-242,-74}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(engine.pin_n, alternator.pin_n)               annotation (Line(
            points={{-94,-52},{-236,-52},{-236,-114},{-242,-114}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(electrical_Interface_Swim.alternator_control,alternator. electric_Machine_Bus)
          annotation (Line(
            points={{-190,-4},{-212,-4},{-212,-94.1},{-230.15,-94.1}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(electrical_Interface_Swim.battery_Bus,lead_Acid_Battery. battery_Bus)
          annotation (Line(
            points={{-190,-10},{-208,-10},{-208,-126},{-223.8,-126},{-223.8,-136}},
            color={64,64,160},
            thickness=0.5,
            smooth=Smooth.None));
        connect(ECU.driver_bus, electrical_Interface_Swim.driver_Bus)
          annotation (Line(
            points={{-112,-10},{-170.2,-10}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(electrical_Interface_Swim.ancilliary_pumps,fuel_Pump. electric_Machine_Bus)
          annotation (Line(
            points={{-180,0},{-180,17.9},{-260,17.9}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(pTM_with_TC.brg_06,cross_Drive_without_TC. brg_01) annotation (Line(
            points={{110,-56},{172,-56},{172,-56},{234,-56}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(ground.p,lead_Acid_Battery. pin_n) annotation (Line(
            points={{-204,-192},{-204,-165.667}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(pTM_with_TC.brg_04, pump_Hydraulic.brg_01) annotation (Line(
            points={{70,-66},{8,-66},{8,90},{24,90}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(engine.from_cac, charge_Cooler_Air_To_Liquid.hot_fluid_in)
          annotation (Line(
            points={{-78,-28},{-78,42},{-54,42},{-54,84}},
            color={0,127,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(charge_Cooler_Air_To_Liquid.hot_fluid_out,engine. to_cac) annotation (
           Line(
            points={{-54,124},{-86,124},{-86,-28}},
            color={0,127,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(alternator.pin_p, fuel_Pump.pin_p) annotation (Line(
            points={{-242,-74},{-242,-46},{-286,-46},{-286,1.6},{-280,1.6}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(alternator.pin_n, fuel_Pump.pin_n) annotation (Line(
            points={{-242,-114},{-236,-114},{-236,1.6},{-240,1.6}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(lead_Acid_Battery1.pin_p, alternator.pin_p) annotation (Line(
            points={{-296,-165.667},{-306,-165.667},{-306,-46},{-242,-46},{-242,-74}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(lead_Acid_Battery.pin_n, alternator.pin_n) annotation (Line(
            points={{-204,-165.667},{-200,-165.667},{-200,-114},{-242,-114}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(engine.fluid_in, engine_air_path_in) annotation (Line(
            points={{-90.2,-32},{-158,222},{-158,300}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(engine.fluid_out, engine_air_path_out) annotation (Line(
            points={{-82,-32},{-82,300},{-100,300}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(radiator_Main_Cooling_Pack.cold_fluid_in, cold_fluid_in) annotation (
            Line(
            points={{-38,222},{-50,222},{-50,300}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(hydraulic_Fan_Assembly.fluid_out, cold_fluid_out) annotation (Line(
            points={{64,222},{84,222},{84,298}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(cross_Drive_without_TC.brake_Control_Bus, pTM_with_TC.brake_Control_Bus)
          annotation (Line(
            points={{257,-35.2},{257,-16},{90,-16},{90,-35.8}},
            color={255,85,85},
            thickness=0.5,
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.brake_Control_Bus, brake_bus) annotation (Line(
            points={{257,-35.2},{257,-16},{200,-16},{200,300}},
            color={255,85,85},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(cross_Drive_without_TC.steering_Control_Bus, steering_bus)
          annotation (Line(
            points={{254,-35.2},{254,-20},{230,-20},{230,300}},
            color={0,127,0},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(TCU.driver_bus, driver_bus) annotation (Line(
            points={{56,-10},{164,-10},{164,300}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(waterjet_RHS.thrust, waterjet_thrust) annotation (Line(
            points={{360,52.2},{368,52.2},{368,52},{380,52},{380,0},{400,0}},
            color={95,95,95},
            thickness=0.5,
            smooth=Smooth.None));
        connect(waterjet_LHS.thrust, waterjet_thrust) annotation (Line(
            points={{360,-156.2},{380,-156.2},{380,0},{400,0}},
            color={95,95,95},
            thickness=0.5,
            smooth=Smooth.None));
        connect(Final_Drive_RHS.brg_02,brg_RHS)  annotation (Line(
            points={{266,194},{266,300}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(Final_Drive_LHS.brg_02, brg_LHS) annotation (Line(
            points={{270,-216},{270,-300},{272,-300}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(waterjet_RHS.driver_bus, driver_bus) annotation (Line(
            points={{340,72.4},{340,220},{164,220},{164,300}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(waterjet_LHS.driver_bus, waterjet_RHS.driver_bus) annotation (Line(
            points={{340,-176.4},{340,72.4}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(electrical_Interface_Swim.battery_Bus, battery_bus) annotation (Line(
            points={{-190,-10},{-198,-10},{-198,44},{-400,44}},
            color={64,64,160},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(TCU.range_pack_control_bus, range_pack_control_bus) annotation (Line(
            points={{56,-22},{14,-22},{14,60},{-400,60}},
            color={255,170,255},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(fuel_Tank.fluid_out, fuel_Pump.fluid_in) annotation (Line(
            points={{-377.5,-20.4},{-377.5,-17.5},{-280.4,-17.5}},
            color={0,127,255},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-400,
                  -300},{400,300}}), graphics), Icon(coordinateSystem(
                preserveAspectRatio=false, extent={{-400,-300},{400,300}}), graphics={
              Text(
                extent={{-380,0},{380,-300}},
                lineColor={0,0,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="This system composition may or may NOT
represent/model a real physical system.
 This is just an artificial composition of the
 C2M2L components for tool testing purposes."),
              Text(
                extent={{-384,120},{-252,-2}},
                lineColor={0,0,255},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Inspection
interfaces
(TCU/Battery)"),
              Text(
                extent={{-198,302},{-64,226}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Engine (Air)
intake/exhaust"),
              Text(
                extent={{-50,300},{84,224}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Coolant (Air)
intake/exhaust"),
              Text(
                extent={{134,282},{266,266}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Control buses"),
              Text(
                extent={{278,300},{362,248}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="RHS
output shaft"),
              Text(
                extent={{286,-244},{370,-296}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="LHS
output shaft"),
              Text(
                extent={{304,26},{388,-26}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Waterjet
output"),     Text(
                extent={{-384,-270},{256,-286}},
                lineColor={203,203,203},
                textString="Dynamics Team, ISIS, Vanderbilt University",
                horizontalAlignment=TextAlignment.Left)}));
      end Design_OM;

      model Design "Contains the full design within this scope"
        extends C2M2L_CyPhy.Icons.Component_Assembly_400x300;
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
          Final_Drive_RHS constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=90,
              origin={266,172})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
          Final_Drive_LHS constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=-90,
              origin={270,-196})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_with_TC
          pTM_with_TC constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_with_TC
          annotation (Placement(transformation(extent={{70,-88},{110,-28}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft_RHS
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=90,
              origin={268,32})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft_LHS
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={270,-122})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft2
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=90,
              origin={104,0})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft3
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=270,
              origin={104,-104})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft4
          annotation (Placement(transformation(extent={{286,42},{306,62}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft5
          annotation (Placement(transformation(extent={{286,-166},{306,-146}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Gearbox_90_Degree
          gearbox_90_Degree constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Gearbox_90_Degree
          annotation (Placement(transformation(extent={{20,-30},{-20,30}},
              rotation=270,
              origin={104,36})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Gearbox_90_Degree
          gearbox_90_Degree1 constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Gearbox_90_Degree.Gearbox_90_Degree
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=270,
              origin={104,-144})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_without_TC
          cross_Drive_without_TC constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_without_TC
          annotation (choicesAllMatching=true, Placement(transformation(extent={{234,-88},
                  {274,-28}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Example_Engine_Basic
          engine constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Example_Engine_Basic
          annotation (choicesAllMatching=true, Placement(transformation(extent={{-94,-88},{-54,-28}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Liquid
          charge_Cooler_Air_To_Liquid constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Air_Intake_Systems.Charge_Cooling.Charge_Cooler_Air_To_Liquid
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=90,
              origin={-46,102})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Accessory_Drives.Front_End_Accessory_Drive
          front_End_Accessory_Drive constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Accessory_Drives.Front_End_Accessory_Drive
          annotation (Placement(transformation(extent={{-20,-28},{20,28}},
              rotation=180,
              origin={-128,-80})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Hydraulic_Fan_Assembly
          hydraulic_Fan_Assembly constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fans.Hydraulic_Fan_Assembly
          annotation (Placement(transformation(extent={{24,198},{64,258}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Radiators.Radiator_Main_Cooling_Pack
          radiator_Main_Cooling_Pack(
          loss_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
          loss_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
          flow_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate,
          flow_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate,
          effec_spec=C2M2L_Ext.Fluid.Base_Classes.Effec_Spec.Q_per_ITD_Area,
          flow_effec_spec=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate,
          effectiveness_table=[0.0,0.0,0.1,0.2,0.3; 0.0,0.0,0.0,0.0,0.0; 0.1,0.0,
              100,800,1000; 0.2,0.0,800,1000,1000; 0.3,0.0,1000,1000,1000])
          constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Radiators.Radiator_Main_Cooling_Pack
          annotation (Placement(transformation(extent={{-38,246},{2,186}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fill_and_Pressurization.Degas_Bottle
          degas_Bottle constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Fill_and_Pressurization.Degas_Bottle
          annotation (Placement(transformation(extent={{0,-132},{40,-72}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
          lead_Acid_Battery
          annotation (Placement(transformation(extent={{-244,-196},{-204,-136}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Alternator
          alternator constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Charging_Systems.Alternator
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=-90,
              origin={-260,-94})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Waterjet.Waterjet
          waterjet_RHS constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Waterjet.Waterjet
          annotation (Placement(transformation(extent={{320,20},{360,80}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Waterjet.Waterjet
          waterjet_LHS constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Amphibious.Waterjet.Waterjet
          annotation (Placement(transformation(extent={{320,-124},{360,-184}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Electrical_System.Starting_Systems.Lead_Acid_Battery
          lead_Acid_Battery1
          annotation (choicesAllMatching=true,Placement(transformation(extent={{-296,-196},{-256,-136}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
          fuel_Tank constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
          annotation (Placement(transformation(extent={{-392,-80},{-352,-20}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Pump
          fuel_Pump(efficiency_characteristic=[0,1; 10,1], flow_characteristic=[
              0.00083259501,172823.2968; 0.00087131978,170206.0469; 0.00095845365,
              162573.5506; 0.00098265505,160211.4067; 0.00106011088,152651.3054;
              0.00111819802,145782.0587; 0.00115692279,141202.5609; 0.00123921133,
              132120.0971; 0.00125373469,130517.0660; 0.00132150618,122884.5697;
              0.00135539193,118774.6049; 0.00138443234,115252.0734; 0.00145220383,
              107619.5771; 0.00147640523,105165.7329; 0.00151997532,100749.6409;
              0.00158774050,92913.7492; 0.00159258583,92353.8949; 0.00167003535,
              83194.8994; 0.00173780684,73933.8614; 0.00174264586,73272.6541;
              0.00186850449,56481.0243]) constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Pump
          annotation (Placement(transformation(extent={{-280,-42},{-240,18}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Pump_Hydraulic
          pump_Hydraulic constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Pump_Hydraulic
          annotation (Placement(transformation(extent={{24,58},{64,118}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Accumulator
          hydraulic_Accumulator constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Hydraulic.Hydraulic_Accumulator
          annotation (Placement(transformation(extent={{24,128},{64,188}})));
        replaceable
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Radiators.Oil_To_Coolant_Cooler
          oil_To_Coolant_Cooler(
          effectiveness_table=[0.0,0.0,0.1,0.2,0.3; 0.0,0.0,0.0,0.0,0.0; 0.1,0.0,
              100,800,1000; 0.2,0.0,800,1000,1000; 0.3,0.0,1000,1000,1000],
          loss_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
          loss_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Loss_Spec.deltaP,
          flow_spec_side_a=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate,
          flow_spec_side_b=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate,
          effec_spec=C2M2L_Ext.Fluid.Base_Classes.Effec_Spec.Q_per_ITD_Area,
          flow_effec_spec=C2M2L_Ext.Fluid.Base_Classes.Flow_Spec.mass_flow_rate)
          constrainedby
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Cooling_System.Radiators.Oil_To_Coolant_Cooler
          annotation (Placement(transformation(extent={{-20,30},{20,-30}},
              rotation=90,
              origin={130,170})));
        replaceable Extra_Components.Conventional_ECU
                                             ECU constrainedby
        Extra_Components.Conventional_ECU
          annotation (choicesAllMatching=true,Placement(transformation(extent={{-112,-30},{-152,10}})));
        replaceable
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Prime_Movers.Electrical_Controls.General_Controllers.Transmission_TCU
          TCU constrainedby
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Prime_Movers.Electrical_Controls.General_Controllers.Transmission_TCU
          annotation (Placement(transformation(extent={{56,-30},{16,10}})));
        outer C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
          annotation (Placement(transformation(extent={{280,242},{300,262}})));
        outer Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
            enableAnimation=false)
          annotation (Placement(transformation(extent={{360,242},{380,262}})));
        outer Modelica.Fluid.System system
          annotation (Placement(transformation(extent={{320,242},{340,262}})));
        C2M2L_Ext.Testing_Blocks.Hull.Electrical_Interface_Swim
          electrical_Interface_Swim
          annotation (Placement(transformation(extent={{10,-10},{-10,10}},
              rotation=-90,
              origin={-180,-10})));
        Modelica.Electrical.Analog.Basic.Ground ground
          annotation (Placement(transformation(extent={{-214,-212},{-194,-192}})));
        Modelica.Fluid.Interfaces.FluidPort_a engine_air_path_in(redeclare
          package Medium =
                     C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid into the container"
          annotation (Placement(transformation(extent={{-168,290},{-148,310}})));
        Modelica.Fluid.Interfaces.FluidPort_b engine_air_path_out(redeclare
          package Medium =
                     C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid out of the container"
          annotation (Placement(transformation(extent={{-110,290},{-90,310}})));
        Modelica.Fluid.Interfaces.FluidPort_a cold_fluid_in(redeclare package
          Medium =
              C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid into the container"
          annotation (Placement(transformation(extent={{-60,290},{-40,310}})));
        Modelica.Fluid.Interfaces.FluidPort_b cold_fluid_out(redeclare package
          Medium =
              C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid out of the container"
          annotation (Placement(transformation(extent={{74,288},{94,308}})));
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Brakes_Clutch.Common_Controls.Brake_Control_Bus
          brake_bus
          annotation (Placement(transformation(extent={{190,290},{210,310}})));
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Cross_Drive_Steering.Common_Controls.Steering_Control_Bus
          steering_bus
          annotation (Placement(transformation(extent={{220,290},{240,310}})));
        C2M2L_Ext.Interfaces.Context_Interfaces.Driver.Driver_Bus driver_bus
          annotation (Placement(transformation(extent={{154,290},{174,310}})));
        Modelica.Mechanics.MultiBody.Interfaces.Frame_a waterjet_thrust
          annotation (Placement(transformation(extent={{384,-16},{416,16}})));
        Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_RHS(
            includeBearingConnector=world.driveTrainMechanics3D)          annotation (
           Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={266,300})));
        Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_LHS(
            includeBearingConnector=world.driveTrainMechanics3D)          annotation (
           Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={272,-300})));
        C2M2L_Ext.Electrical.Interfaces.Battery_Bus battery_bus
          annotation (Placement(transformation(extent={{-410,34},{-390,54}})));
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Range_Packs.Common_Controls.Range_Pack_Control_Bus
          range_pack_control_bus
          annotation (Placement(transformation(extent={{-410,50},{-390,70}})));
      equation

        connect(fuel_Pump.fluid_out,engine. fuel_in)               annotation (Line(
            points={{-240,-18},{-220,-18},{-220,-42},{-98,-42}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(engine.brg_01, front_End_Accessory_Drive.crank_pulley)
          annotation (Line(
            points={{-94,-56},{-104,-56},{-104,-78},{-108,-78}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(front_End_Accessory_Drive.aux_3,alternator. brg_01) annotation (
            Line(
            points={{-148,-64},{-260,-64},{-260,-72}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(engine.bottom_hose_in, degas_Bottle.fluid_in)
          annotation (Line(
            points={{-50,-66},{-46,-66},{-46,-108},{0,-108}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(radiator_Main_Cooling_Pack.hot_fluid_in,engine. bottom_hose_in)
          annotation (Line(
            points={{-38,206},{-46,206},{-46,-66},{-50,-66}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(radiator_Main_Cooling_Pack.cold_fluid_out,hydraulic_Fan_Assembly. fluid_in)
          annotation (Line(
            points={{2,222},{24,222}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(charge_Cooler_Air_To_Liquid.cold_fluid_in,engine. top_hose_outlet)
          annotation (Line(
            points={{-38,84},{-38,-42},{-50,-42}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(engine.engineControlBus, ECU.engine_control_bus)
          annotation (Line(
            points={{-74,-35.6},{-74,2},{-111.6,2}},
            color={175,175,175},
            thickness=0.5,
            smooth=Smooth.None));
        connect(ECU.driver_bus, TCU.driver_bus)
          annotation (Line(
            points={{-112,-10},{56,-10}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(ECU.range_pack_control_bus, TCU.range_pack_control_bus)
          annotation (Line(
            points={{-112,-22},{56,-22}},
            color={213,170,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(pTM_with_TC.torque_Converter_Control_Bus, TCU.tcc_control_bus)
          annotation (Line(
            points={{85.8,-35.8},{85.8,2},{56,2}},
            color={85,255,85},
            thickness=0.5,
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.range_Pack_Control_Bus, TCU.range_pack_control_bus)
          annotation (Line(
            points={{251,-35.2},{251,-22},{56,-22}},
            color={213,170,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(pTM_with_TC.brg_02,drive_Shaft2. frame_a) annotation (Line(
            points={{104,-36},{104,-10}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft2.frame_b,gearbox_90_Degree. brg_01) annotation (Line(
            points={{104,10},{104,18}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(gearbox_90_Degree.brg_02,drive_Shaft4. frame_a) annotation (Line(
            points={{124,52},{286,52}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft4.frame_b,waterjet_RHS. brg_01)
                                                       annotation (Line(
            points={{306,52},{320,52}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.brg_02, drive_Shaft_RHS.frame_a)
                                                                    annotation (
            Line(
            points={{268,-36},{268,22}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft_RHS.frame_b, Final_Drive_RHS.brg_01)
          annotation (Line(
            points={{268,42},{268,154},{266,154}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(pTM_with_TC.fluid_out,cross_Drive_without_TC. fluid_in) annotation (
           Line(
            points={{82,-32},{82,-26},{237.8,-26},{237.8,-32}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(cross_Drive_without_TC.fluid_out,oil_To_Coolant_Cooler. hot_fluid_out)
          annotation (Line(
            points={{246,-32},{246,-24},{140,-24},{140,188},{138,188}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(oil_To_Coolant_Cooler.hot_fluid_in,pTM_with_TC. fluid_in)
          annotation (Line(
            points={{138,148},{138,-24},{73.8,-24},{73.8,-32}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(pTM_with_TC.brg_03,drive_Shaft3. frame_a) annotation (Line(
            points={{104,-76},{104,-94}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft3.frame_b,gearbox_90_Degree1. brg_01) annotation (Line(
            points={{104,-114},{104,-122}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(gearbox_90_Degree1.brg_02,drive_Shaft5. frame_a) annotation (Line(
            points={{124,-156},{286,-156}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft5.frame_b, waterjet_LHS.brg_01)
                                                        annotation (Line(
            points={{306,-156},{320,-156}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.brg_03, drive_Shaft_LHS.frame_a)
                                                                     annotation (
            Line(
            points={{268,-76},{268,-112},{270,-112}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft_LHS.frame_b, Final_Drive_LHS.brg_01) annotation (Line(
            points={{270,-132},{270,-174}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(hydraulic_Fan_Assembly.hyd_a,pump_Hydraulic. hyd_in) annotation (
            Line(
            points={{24,242},{16,242},{16,98},{24,98}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(pump_Hydraulic.hyd_out,hydraulic_Fan_Assembly. hyd_b) annotation (
            Line(
            points={{64,98},{78,98},{78,242},{64,242}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(hydraulic_Accumulator.hyd,pump_Hydraulic. hyd_out) annotation (Line(
            points={{36.2,138},{42,138},{42,120},{78,120},{78,98},{64,98}},
            color={255,0,128},
            smooth=Smooth.None));
        connect(engine.brg_02, pTM_with_TC.brg_01)               annotation (Line(
            points={{-54,-56},{70,-56}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(lead_Acid_Battery1.pin_n,lead_Acid_Battery. pin_p) annotation (Line(
            points={{-256,-152},{-244,-152}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(charge_Cooler_Air_To_Liquid.cold_fluid_out,oil_To_Coolant_Cooler. cold_fluid_in)
          annotation (Line(
            points={{-38,124},{122,124},{122,148}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(oil_To_Coolant_Cooler.cold_fluid_out,radiator_Main_Cooling_Pack. hot_fluid_out)
          annotation (Line(
            points={{122,188},{122,206},{2,206}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(engine.pin_p, alternator.pin_p)               annotation (Line(
            points={{-94,-46},{-248,-46},{-248,-72}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(engine.pin_n, alternator.pin_n)               annotation (Line(
            points={{-94,-52},{-236,-52},{-236,-112},{-248,-112}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(electrical_Interface_Swim.alternator_control,alternator. electric_Machine_Bus)
          annotation (Line(
            points={{-190,-4},{-212,-4},{-212,-92},{-240,-92}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(electrical_Interface_Swim.battery_Bus,lead_Acid_Battery. battery_Bus)
          annotation (Line(
            points={{-190,-10},{-208,-10},{-208,-126},{-224,-126},{-224,-144.2}},
            color={64,64,160},
            thickness=0.5,
            smooth=Smooth.None));
        connect(ECU.driver_bus, electrical_Interface_Swim.driver_Bus)
          annotation (Line(
            points={{-112,-10},{-170.2,-10}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(electrical_Interface_Swim.ancilliary_pumps,fuel_Pump. electric_Machine_Bus)
          annotation (Line(
            points={{-180,0},{-180,11.4},{-260,11.4}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(pTM_with_TC.brg_06,cross_Drive_without_TC. brg_01) annotation (Line(
            points={{110,-56},{234,-56}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(ground.p,lead_Acid_Battery. pin_n) annotation (Line(
            points={{-204,-192},{-204,-152}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(pTM_with_TC.brg_04, pump_Hydraulic.brg_01) annotation (Line(
            points={{70,-66},{8,-66},{8,90},{24,90}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(engine.from_cac, charge_Cooler_Air_To_Liquid.hot_fluid_in)
          annotation (Line(
            points={{-78,-28},{-78,42},{-54,42},{-54,84}},
            color={0,127,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(charge_Cooler_Air_To_Liquid.hot_fluid_out,engine. to_cac) annotation (
           Line(
            points={{-54,124},{-86,124},{-86,-28}},
            color={0,127,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(alternator.pin_p, fuel_Pump.pin_p) annotation (Line(
            points={{-248,-72},{-248,-46},{-286,-46},{-286,2},{-280,2}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(alternator.pin_n, fuel_Pump.pin_n) annotation (Line(
            points={{-248,-112},{-236,-112},{-236,2},{-240,2}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(lead_Acid_Battery1.pin_p, alternator.pin_p) annotation (Line(
            points={{-296,-152},{-306,-152},{-306,-46},{-248,-46},{-248,-72}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(lead_Acid_Battery.pin_n, alternator.pin_n) annotation (Line(
            points={{-204,-152},{-200,-152},{-200,-112},{-248,-112}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(engine.fluid_in, engine_air_path_in) annotation (Line(
            points={{-90.2,-32},{-90,222},{-158,300}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(engine.fluid_out, engine_air_path_out) annotation (Line(
            points={{-82,-32},{-82,300},{-100,300}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(radiator_Main_Cooling_Pack.cold_fluid_in, cold_fluid_in) annotation (
            Line(
            points={{-38,222},{-50,222},{-50,300}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(hydraulic_Fan_Assembly.fluid_out, cold_fluid_out) annotation (Line(
            points={{64,222},{84,222},{84,298}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(cross_Drive_without_TC.brake_Control_Bus, pTM_with_TC.brake_Control_Bus)
          annotation (Line(
            points={{257,-35.2},{257,-16},{90,-16},{90,-35.8}},
            color={255,85,85},
            thickness=0.5,
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.brake_Control_Bus, brake_bus) annotation (Line(
            points={{257,-35.2},{257,-16},{200,-16},{200,300}},
            color={255,85,85},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(cross_Drive_without_TC.steering_Control_Bus, steering_bus)
          annotation (Line(
            points={{254,-35.2},{254,-20},{230,-20},{230,300}},
            color={0,127,0},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(TCU.driver_bus, driver_bus) annotation (Line(
            points={{56,-10},{164,-10},{164,300}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(waterjet_RHS.thrust, waterjet_thrust) annotation (Line(
            points={{360,52.2},{368,52.2},{368,52},{380,52},{380,0},{400,0}},
            color={95,95,95},
            thickness=0.5,
            smooth=Smooth.None));
        connect(waterjet_LHS.thrust, waterjet_thrust) annotation (Line(
            points={{360,-156.2},{380,-156.2},{380,0},{400,0}},
            color={95,95,95},
            thickness=0.5,
            smooth=Smooth.None));
        connect(Final_Drive_RHS.brg_02,brg_RHS)  annotation (Line(
            points={{266,194},{266,300}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(Final_Drive_LHS.brg_02, brg_LHS) annotation (Line(
            points={{270,-214},{270,-300},{272,-300}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(waterjet_RHS.driver_bus, driver_bus) annotation (Line(
            points={{340,72.4},{340,220},{164,220},{164,300}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(waterjet_LHS.driver_bus, waterjet_RHS.driver_bus) annotation (Line(
            points={{340,-176.4},{340,72.4}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(electrical_Interface_Swim.battery_Bus, battery_bus) annotation (Line(
            points={{-190,-10},{-198,-10},{-198,44},{-400,44}},
            color={64,64,160},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(TCU.range_pack_control_bus, range_pack_control_bus) annotation (Line(
            points={{56,-22},{14,-22},{14,60},{-400,60}},
            color={255,170,255},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(fuel_Tank.fluid_out, fuel_Pump.fluid_in) annotation (Line(
            points={{-380,-24},{-380,-18},{-280,-18}},
            color={0,127,255},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-400,
                  -300},{400,300}}), graphics), Icon(coordinateSystem(
                preserveAspectRatio=false, extent={{-400,-300},{400,300}}), graphics={
              Text(
                extent={{-380,0},{380,-300}},
                lineColor={0,0,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="This system composition may or may NOT
represent/model a real physical system.
 This is just an artificial composition of the
 C2M2L components for tool testing purposes."),
              Text(
                extent={{-384,120},{-252,-2}},
                lineColor={0,0,255},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Inspection
interfaces
(TCU/Battery)"),
              Text(
                extent={{-198,302},{-64,226}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Engine (Air)
intake/exhaust"),
              Text(
                extent={{-50,300},{84,224}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Coolant (Air)
intake/exhaust"),
              Text(
                extent={{134,282},{266,266}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Control buses"),
              Text(
                extent={{278,300},{362,248}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="RHS
output shaft"),
              Text(
                extent={{286,-244},{370,-296}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="LHS
output shaft"),
              Text(
                extent={{304,26},{388,-26}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Waterjet
output"),     Text(
                extent={{-384,-270},{256,-286}},
                lineColor={203,203,203},
                textString="Dynamics Team, ISIS, Vanderbilt University",
                horizontalAlignment=TextAlignment.Left)}));
      end Design;

      package TestBenches "Contains all test benches for this design"
        extends C2M2L_Ext.Icons.Package_For_Simple_Test_Cases;
        model TB00_FullSpeedLand
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          C2M2L_Ext.Testing_Blocks.Land.Driver_Land_Square_Profile
                                                            driver_Land_Profile(
              profile_data=[0,0; 10,0; 10,100; 100,100])
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{54,58},{54,66},{120,66},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(road_Wheel_Load_Both_Sides.lhs_flange, design.brg_LHS)    annotation (
             Line(
              points={{140,-8},{120,-8},{120,-102},{54.88,-102},{54.88,-78}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=500, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB00_FullSpeedLand;

        model TB01_FullSpeedLandReverse
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          C2M2L_Ext.Testing_Blocks.Land.Driver_Land_Reverse driver_Land_Profile
            annotation (Placement(transformation(extent={{-20,142},{20,182}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,162},{160,162},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,146},{45.325,146},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,154},{38,154},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,162},{30,162},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{53.515,66},{120,66},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{56,-78},{56,-112},{120,-112},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=500, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB01_FullSpeedLandReverse;

        model TB11_FullSpeedGrade10
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          C2M2L_Ext.Testing_Blocks.Land.Driver_Land_Square_Profile
                                                            driver_Land_Profile(
              profile_data=[0,0; 10,0; 10,100; 100,100])
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides(grade=10)
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{54,58},{54,66},{120,66},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(road_Wheel_Load_Both_Sides.lhs_flange, design.brg_LHS)    annotation (
             Line(
              points={{140,-8},{120,-8},{120,-96},{54.88,-96},{54.88,-78}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=500, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB11_FullSpeedGrade10;

        model TB12_FullSpeedGrade20
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          C2M2L_Ext.Testing_Blocks.Land.Driver_Land_Square_Profile
                                                            driver_Land_Profile(
              profile_data=[0,0; 10,0; 10,100; 100,100])
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides(grade=20)
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{53.515,66},{120,66},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{56,-78},{56,-106},{120,-106},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=500, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB12_FullSpeedGrade20;

        model TB13_FullSpeedGrade30
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          C2M2L_Ext.Testing_Blocks.Land.Driver_Land_Square_Profile
                                                            driver_Land_Profile(
              profile_data=[0,0; 10,0; 10,100; 100,100])
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides(grade=30)
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{53.515,66},{120,66},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{56,-78},{56,-106},{120,-106},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=500, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB13_FullSpeedGrade30;

        model TB14_HillClimb10
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          C2M2L_Ext.Testing_Blocks.Land.Driver_Hill_climb   driver_Land_Profile
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides(grade=10)
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{53.515,64},{120,64},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{56,-78},{56,-100},{120,-100},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=500, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB14_HillClimb10;

        model TB15_HillClimb20
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          C2M2L_Ext.Testing_Blocks.Land.Driver_Hill_climb   driver_Land_Profile
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides(grade=20)
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{54,58},{54,64},{120,64},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{54.88,-102},{120,-102},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=500, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB15_HillClimb20;

        model TB16_HillClimb30
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          C2M2L_Ext.Testing_Blocks.Land.Driver_Hill_climb   driver_Land_Profile
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides(grade=30)
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{54,58},{54,66},{120,66},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{56,-78},{56,-100},{120,-100},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=500, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB16_HillClimb30;

        model TB20_SundayDrive
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          Testing_Blocks.Land.Sunday_Driver                 driver_Land_Profile
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{53.515,64},{120,64},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{54,-78},{54,-100},{120,-100},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=1200, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB20_SundayDrive;

        model TB21_SmallTownDrive
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          Testing_Blocks.Land.SC03_Driver                   driver_Land_Profile
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{53.515,64},{120,64},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{54,-78},{54,-100},{120,-100},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=600, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB21_SmallTownDrive;

        model TB22_HighwayCruise
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          Testing_Blocks.Land.US06_Driver                   driver_Land_Profile
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{53.515,64},{120,64},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{54,-78},{54,-100},{120,-100},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=600, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB22_HighwayCruise;

        model TB23_MondayMorningTraffic
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          Testing_Blocks.Land.Urban_Driver                  driver_Land_Profile
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{53.515,64},{120,64},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{54,-78},{54,-100},{120,-100},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=1400, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB23_MondayMorningTraffic;

        model TB24_ColdAndHotDrive
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          Testing_Blocks.Land.FTP_Driver                    driver_Land_Profile
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{53.515,64},{120,64},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_LHS, road_Wheel_Load_Both_Sides.lhs_flange)    annotation (
             Line(
              points={{54.88,-78},{54,-78},{54,-100},{120,-100},{120,-8},{140,-8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=1900, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB24_ColdAndHotDrive;

        model TB00_FullSpeedLand_OM
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          C2M2L_Ext.Testing_Blocks.Land.Driver_Land_Square_Profile
                                                            driver_Land_Profile(
              profile_data=[0,0; 10,0; 10,100; 100,100])
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing1
            annotation (Placement(transformation(extent={{-10,100},{10,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design_OM
                 design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Testing_Blocks.Amphibious_Load
                          amphibious_Load
            annotation (Placement(transformation(extent={{140,-80},{180,-40}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.intake_air, design.cold_fluid_in)
            annotation (Line(
              points={{-6,100},{-6,94},{-18.375,94},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing1.exhaust_out, design.cold_fluid_out)
            annotation (Line(
              points={{6,100},{6,94},{12.11,94},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.waterjet_thrust, amphibious_Load.frame_a)    annotation (Line(
              points={{84,-10},{112,-10},{112,-60},{140,-60}},
              color={95,95,95},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{54,58},{54,66},{120,66},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(road_Wheel_Load_Both_Sides.lhs_flange, design.brg_LHS)    annotation (
             Line(
              points={{140,-8},{120,-8},{120,-102},{54.88,-102},{54.88,-78}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=500, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB00_FullSpeedLand_OM;
      end TestBenches;
    end Alpha;

    package Bravo "Design named Alpha with some test benches"
    extends Modelica.Icons.Package;

      model Design "Contains the full design within this scope"
        extends C2M2L_CyPhy.Icons.Component_Assembly_400x300;
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
          Final_Drive_RHS
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=90,
              origin={266,172})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Final_Drive.Example_Standalone_Final_Drive_Implementation
          Final_Drive_LHS
          annotation (Placement(transformation(extent={{-20,-30},{20,30}},
              rotation=-90,
              origin={270,-196})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Power_Take_Off_Module.PTM_with_TC
          pTM_with_TC
          annotation (Placement(transformation(extent={{70,-88},{110,-28}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft_RHS
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=90,
              origin={268,32})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Drive_Shafts.Drive_Shaft
          drive_Shaft_LHS
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=-90,
              origin={270,-122})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Drive_Line.Cross_Drive_Transmission.Cross_Drive_without_TC
          cross_Drive_without_TC
          annotation (choicesAllMatching=true, Placement(transformation(extent={{234,-88},
                  {274,-28}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Prime_Movers.Reciprocating.Compression_Ignition.Engine_Basic.Example_Engine_Basic
          engine
          annotation (choicesAllMatching=true, Placement(transformation(extent={{-94,-88},{-54,-28}})));
        C2M2L_Ext.C2M2L_Delivered_Component_Implementations.Fuel_System.Fuel_Tank
          fuel_Tank
          annotation (Placement(transformation(extent={{-392,-80},{-352,-20}})));
        Extra_Components.Conventional_ECU    ECU
          annotation (choicesAllMatching=true,Placement(transformation(extent={{-112,-30},{-152,10}})));
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Prime_Movers.Electrical_Controls.General_Controllers.Transmission_TCU
          TCU
          annotation (Placement(transformation(extent={{56,-30},{16,10}})));
        outer C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
          annotation (Placement(transformation(extent={{280,242},{300,262}})));
        outer Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
            enableAnimation=false)
          annotation (Placement(transformation(extent={{360,242},{380,262}})));
        outer Modelica.Fluid.System system
          annotation (Placement(transformation(extent={{320,242},{340,262}})));
        Modelica.Electrical.Analog.Basic.Ground ground
          annotation (Placement(transformation(extent={{-214,-212},{-194,-192}})));
        Modelica.Fluid.Interfaces.FluidPort_a engine_air_path_in(redeclare
          package Medium =
                     C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid into the container"
          annotation (Placement(transformation(extent={{-168,290},{-148,310}})));
        Modelica.Fluid.Interfaces.FluidPort_b engine_air_path_out(redeclare
          package Medium =
                     C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid out of the container"
          annotation (Placement(transformation(extent={{-110,290},{-90,310}})));
        Modelica.Fluid.Interfaces.FluidPort_a cold_fluid_in(redeclare package
          Medium =   C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop)
        "Port that nominally flows fluid into the container"
          annotation (Placement(transformation(extent={{-60,290},{-40,310}})));
        Modelica.Fluid.Interfaces.FluidPort_b cold_fluid_out(redeclare package
          Medium =   C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop)
        "Port that nominally flows fluid out of the container"
          annotation (Placement(transformation(extent={{74,288},{94,308}})));
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Brakes_Clutch.Common_Controls.Brake_Control_Bus
          brake_bus
          annotation (Placement(transformation(extent={{190,290},{210,310}})));
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Cross_Drive_Steering.Common_Controls.Steering_Control_Bus
          steering_bus
          annotation (Placement(transformation(extent={{220,290},{240,310}})));
        C2M2L_Ext.Interfaces.Context_Interfaces.Driver.Driver_Bus driver_bus
          annotation (Placement(transformation(extent={{154,290},{174,310}})));
        Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_RHS(
            includeBearingConnector=world.driveTrainMechanics3D)          annotation (
           Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={266,300})));
        Modelica.Mechanics.MultiBody.Interfaces.FlangeWithBearing brg_LHS(
            includeBearingConnector=world.driveTrainMechanics3D)          annotation (
           Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={272,-300})));
        C2M2L_Ext.C2M2L_Component_Building_Blocks.Drive_Line.Range_Packs.Common_Controls.Range_Pack_Control_Bus
          range_pack_control_bus
          annotation (Placement(transformation(extent={{-410,50},{-390,70}})));
        Modelica.Fluid.Interfaces.FluidPort_b to_cac1(redeclare package Medium
          =   C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid out of the container"
          annotation (Placement(transformation(extent={{-410,150},{-390,170}})));
        Modelica.Fluid.Interfaces.FluidPort_a from_cac1(redeclare package
          Medium =
              C2M2L_Ext.Media.Ideal_Gases.Simple_Air)
        "Port that nominally flows fluid into the container"
          annotation (Placement(transformation(extent={{-412,236},{-392,256}})));
        Modelica.Fluid.Interfaces.FluidPort_b top_hose_outlet1(redeclare
          package Medium =

            C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
          annotation (Placement(transformation(extent={{-50,-310},{-30,-290}})));
        Modelica.Fluid.Interfaces.FluidPort_a bottom_hose_in1(redeclare package
          Medium =
            C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
          annotation (Placement(transformation(extent={{32,-310},{52,-290}})));
        Modelica.Electrical.Analog.Interfaces.PositivePin pin_p1
          annotation (Placement(transformation(extent={{-410,-130},{-390,-110}})));
        Modelica.Electrical.Analog.Interfaces.NegativePin pin_n1
          annotation (Placement(transformation(extent={{-402,-166},{-382,-146}})));
      equation

        connect(engine.engineControlBus, ECU.engine_control_bus)
          annotation (Line(
            points={{-74,-35.6},{-74,2},{-111.6,2}},
            color={175,175,175},
            thickness=0.5,
            smooth=Smooth.None));
        connect(ECU.driver_bus, TCU.driver_bus)
          annotation (Line(
            points={{-112,-10},{56,-10}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None));
        connect(ECU.range_pack_control_bus, TCU.range_pack_control_bus)
          annotation (Line(
            points={{-112,-22},{56,-22}},
            color={213,170,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(pTM_with_TC.torque_Converter_Control_Bus, TCU.tcc_control_bus)
          annotation (Line(
            points={{85.8,-35.8},{85.8,2},{56,2}},
            color={85,255,85},
            thickness=0.5,
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.range_Pack_Control_Bus, TCU.range_pack_control_bus)
          annotation (Line(
            points={{251,-35.2},{251,-22},{56,-22}},
            color={213,170,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(cross_Drive_without_TC.brg_02, drive_Shaft_RHS.frame_a)
                                                                    annotation (
            Line(
            points={{268,-36},{268,22}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft_RHS.frame_b, Final_Drive_RHS.brg_01)
          annotation (Line(
            points={{268,42},{268,154},{266,154}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(pTM_with_TC.fluid_out,cross_Drive_without_TC. fluid_in) annotation (
           Line(
            points={{82,-32},{82,-26},{237.8,-26},{237.8,-32}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(cross_Drive_without_TC.brg_03, drive_Shaft_LHS.frame_a)
                                                                     annotation (
            Line(
            points={{268,-76},{268,-112},{270,-112}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(drive_Shaft_LHS.frame_b, Final_Drive_LHS.brg_01) annotation (Line(
            points={{270,-132},{270,-174}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(engine.brg_02, pTM_with_TC.brg_01)               annotation (Line(
            points={{-54,-56},{70,-56}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(pTM_with_TC.brg_06,cross_Drive_without_TC. brg_01) annotation (Line(
            points={{110,-56},{234,-56}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(engine.fluid_in, engine_air_path_in) annotation (Line(
            points={{-90.2,-32},{-90,222},{-158,300}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(engine.fluid_out, engine_air_path_out) annotation (Line(
            points={{-82,-32},{-82,300},{-100,300}},
            color={0,127,255},
            smooth=Smooth.None,
            thickness=0.5));
        connect(cross_Drive_without_TC.brake_Control_Bus, pTM_with_TC.brake_Control_Bus)
          annotation (Line(
            points={{257,-35.2},{257,-16},{90,-16},{90,-35.8}},
            color={255,85,85},
            thickness=0.5,
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.brake_Control_Bus, brake_bus) annotation (Line(
            points={{257,-35.2},{257,-16},{200,-16},{200,300}},
            color={255,85,85},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(cross_Drive_without_TC.steering_Control_Bus, steering_bus)
          annotation (Line(
            points={{254,-35.2},{254,-20},{230,-20},{230,300}},
            color={0,127,0},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(TCU.driver_bus, driver_bus) annotation (Line(
            points={{56,-10},{164,-10},{164,300}},
            color={170,213,255},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(Final_Drive_RHS.brg_02,brg_RHS)  annotation (Line(
            points={{266,194},{266,300}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(Final_Drive_LHS.brg_02, brg_LHS) annotation (Line(
            points={{270,-214},{270,-300},{272,-300}},
            color={135,135,135},
            thickness=0.5,
            smooth=Smooth.None));
        connect(TCU.range_pack_control_bus, range_pack_control_bus) annotation (Line(
            points={{56,-22},{14,-22},{14,60},{-400,60}},
            color={255,170,255},
            thickness=0.5,
            smooth=Smooth.None), Text(
            string="%second",
            index=1,
            extent={{6,3},{6,3}}));
        connect(fuel_Tank.fluid_out, engine.fuel_in) annotation (Line(
            points={{-380,-24},{-380,-2},{-220,-2},{-220,-42},{-98,-42}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(engine.to_cac, to_cac1) annotation (Line(
            points={{-86,-28},{-86,160},{-400,160}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(engine.from_cac, from_cac1) annotation (Line(
            points={{-78,-28},{-78,202},{-402,202},{-402,246}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(engine.top_hose_outlet, top_hose_outlet1) annotation (Line(
            points={{-50,-42},{-40,-42},{-40,-300}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(engine.bottom_hose_in, bottom_hose_in1) annotation (Line(
            points={{-50,-66},{42,-66},{42,-300}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(pTM_with_TC.fluid_in, cold_fluid_in) annotation (Line(
            points={{73.8,-32},{72,-32},{72,264},{-50,264},{-50,300}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(cross_Drive_without_TC.fluid_out, cold_fluid_out) annotation (Line(
            points={{246,-32},{246,-10},{90,-10},{90,298},{84,298}},
            color={0,127,255},
            smooth=Smooth.None));
        connect(engine.pin_p, pin_p1) annotation (Line(
            points={{-94,-46},{-244,-46},{-244,-120},{-400,-120}},
            color={0,0,255},
            smooth=Smooth.None));
        connect(engine.pin_n, pin_n1) annotation (Line(
            points={{-94,-52},{-238,-52},{-238,-156},{-392,-156}},
            color={0,0,255},
            smooth=Smooth.None));
        annotation (Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-400,
                  -300},{400,300}}), graphics), Icon(coordinateSystem(
                preserveAspectRatio=false, extent={{-400,-300},{400,300}}), graphics={
              Text(
                extent={{-380,0},{380,-300}},
                lineColor={0,0,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="This system composition may or may NOT
represent/model a real physical system.
 This is just an artificial composition of the
 C2M2L components for tool testing purposes."),
              Text(
                extent={{-384,120},{-252,-2}},
                lineColor={0,0,255},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Inspection
interfaces
(TCU/Battery)"),
              Text(
                extent={{-198,302},{-64,226}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Engine (Air)
intake/exhaust"),
              Text(
                extent={{-50,300},{84,224}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Coolant (Air)
intake/exhaust"),
              Text(
                extent={{134,282},{266,266}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Control buses"),
              Text(
                extent={{278,300},{362,248}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="RHS
output shaft"),
              Text(
                extent={{286,-244},{370,-296}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="LHS
output shaft"),
              Text(
                extent={{304,26},{388,-26}},
                lineColor={0,128,0},
                lineThickness=0.5,
                fillColor={0,0,255},
                fillPattern=FillPattern.Solid,
                textString="Waterjet
output"),     Text(
                extent={{-384,-270},{256,-286}},
                lineColor={203,203,203},
                textString="Dynamics Team, ISIS, Vanderbilt University",
                horizontalAlignment=TextAlignment.Left),
              Text(
                extent={{-252,246},{274,-66}},
                lineColor={0,0,255},
                textString="Using
 6 C2M2L components +
 2 controllers")}));
      end Design;

      package TestBenches "Contains all test benches for this design"
        extends C2M2L_Ext.Icons.Package_For_Simple_Test_Cases;

        model TB00_FullSpeedLand
          extends C2M2L_CyPhy.Icons.Simple_Test_Case_200x200;
          C2M2L_Ext.Testing_Blocks.Land.Driver_Land_Square_Profile
                                                            driver_Land_Profile(
              profile_data=[0,0; 10,0; 10,100; 100,100])
            annotation (Placement(transformation(extent={{-20,140},{20,180}})));
          C2M2L_Ext.Testing_Blocks.Land.Road_Wheel_Load_Both_Sides
            road_Wheel_Load_Both_Sides
            annotation (Placement(transformation(extent={{140,-20},{180,20}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Air_Path_For_Testing
            air_Path_For_Testing
            annotation (Placement(transformation(extent={{-46,100},{-26,120}})));
          inner C2M2L_Ext.Environments.Lumped_Thermal_Fixed_HTC_Infinite env
            annotation (Placement(transformation(extent={{100,180},{120,200}})));
          inner Modelica.Mechanics.MultiBody.World world(driveTrainMechanics3D=false,
              enableAnimation=false)
            annotation (Placement(transformation(extent={{180,180},{200,200}})));
          inner Modelica.Fluid.System system
            annotation (Placement(transformation(extent={{140,180},{160,200}})));
          Design design
            annotation (Placement(transformation(extent={{-98,-78},{84,58}})));
          Modelica.Electrical.Analog.Sources.ConstantVoltage constantVoltage(V=24)
            annotation (Placement(transformation(extent={{-176,-110},{-156,-90}})));
          Modelica.Electrical.Analog.Basic.Ground ground
            annotation (Placement(transformation(extent={{-158,-126},{-138,-106}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Charge_Air_Cooler_Surrogate
            charge_Air_Cooler_Surrogate
            annotation (Placement(transformation(extent={{-170,52},{-150,72}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Cooling_Cart_For_Testing
                                                  cooling_Cart_For_Testing
            annotation (Placement(transformation(extent={{36,-130},{56,-110}})));
          Modelica.Fluid.Sensors.TemperatureTwoPort temperature(redeclare
            package Medium =

              C2M2L_Ext.Media.Incompressible.Water_Incompressible_Constant)
            annotation (Placement(transformation(extent={{2,-112},{22,-92}})));
          C2M2L_Ext.Testing_Blocks.Fluid_Source_Sinks.Fluid_Source_Sink_Passive
                                                fluid_Source_Sink(
            calc_cumulative=false,
            redeclare package Medium =
                C2M2L_Ext.Media.Incompressible.Essotherm650_Const_Prop)
            annotation (Placement(transformation(extent={{-16,100},{4,120}})));
        equation

          connect(driver_Land_Profile.driver_bus, road_Wheel_Load_Both_Sides.driver_Bus)
            annotation (Line(
              points={{20,160},{160,160},{160,20}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.engine_air_path_in, air_Path_For_Testing.intake_air)
            annotation (Line(
              points={{-42.945,58},{-42,58},{-42,100}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(air_Path_For_Testing.exhaust_out, design.engine_air_path_out)
            annotation (Line(
              points={{-30,100},{-30,96},{-29.75,96},{-29.75,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(driver_Land_Profile.steering_Control_Bus, design.steering_bus)
            annotation (Line(
              points={{20,144},{45.325,144},{45.325,58}},
              color={0,127,0},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.brake_Control_Bus, design.brake_bus)
            annotation (Line(
              points={{20,152},{38,152},{38,88},{38.5,88},{38.5,58}},
              color={255,85,85},
              thickness=0.5,
              smooth=Smooth.None));
          connect(driver_Land_Profile.driver_bus, design.driver_bus)      annotation (
              Line(
              points={{20,160},{30,160},{30,88},{30.31,88},{30.31,58}},
              color={170,213,255},
              thickness=0.5,
              smooth=Smooth.None));
          connect(design.brg_RHS, road_Wheel_Load_Both_Sides.rhs_flange)    annotation (
             Line(
              points={{53.515,58},{54,58},{54,66},{120,66},{120,8},{139.6,8}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(road_Wheel_Load_Both_Sides.lhs_flange, design.brg_LHS)    annotation (
             Line(
              points={{140,-8},{120,-8},{120,-102},{54.88,-102},{54.88,-78}},
              color={135,135,135},
              thickness=0.5,
              smooth=Smooth.None));
          connect(cooling_Cart_For_Testing.from_rad, design.top_hose_outlet1)
            annotation (Line(
              points={{36,-126},{-16,-126},{-16,-78},{-16.1,-78}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(design.to_cac1, charge_Air_Cooler_Surrogate.to_engine)
            annotation (Line(
              points={{-98,26.2667},{-154,26.2667},{-154,52}},
              color={0,127,255},
              smooth=Smooth.None));

          connect(design.from_cac1, charge_Air_Cooler_Surrogate.from_engine)
            annotation (Line(
              points={{-98.455,45.76},{-98.455,46},{-166,46},{-166,52}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(constantVoltage.n, ground.p) annotation (Line(
              points={{-156,-100},{-152,-100},{-152,-106},{-148,-106}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(ground.p, design.pin_n1) annotation (Line(
              points={{-148,-106},{-102,-106},{-102,-45.36},{-96.18,-45.36}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(design.bottom_hose_in1, temperature.port_a) annotation (Line(
              points={{2.555,-78},{2.555,-80},{2,-80},{2,-102}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(temperature.port_b, cooling_Cart_For_Testing.to_rad) annotation (
              Line(
              points={{22,-102},{32,-102},{32,-114},{36,-114}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(constantVoltage.p, design.pin_p1) annotation (Line(
              points={{-176,-100},{-178,-100},{-178,-38},{-98,-38},{-98,-37.2}},
              color={0,0,255},
              smooth=Smooth.None));
          connect(fluid_Source_Sink.supply_port, design.cold_fluid_in) annotation (
              Line(
              points={{-12,100},{-12,94},{-18,94},{-18,58},{-18.375,58}},
              color={0,127,255},
              smooth=Smooth.None));
          connect(fluid_Source_Sink.return_port, design.cold_fluid_out) annotation (
             Line(
              points={{0,100},{10,100},{10,57.5467},{12.11,57.5467}},
              color={0,127,255},
              smooth=Smooth.None));
          annotation (
            Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                    200,200}}), graphics),
            experiment(StopTime=500, __Dymola_Algorithm="Esdirk45a"),
            __Dymola_experimentSetupOutput);
        end TB00_FullSpeedLand;
      end TestBenches;
    end Bravo;
  end Designs_For_Testing_Only;

  package Extra_Components
    extends Modelica.Icons.Package;
    model Conventional_ECU
    "A parametric instance of a conventional diesel or petrol ECU"
      parameter Modelica.SIunits.Conversions.NonSIunits.AngularVelocity_rpm ShiftUpMaxRPM = 2000
      "Maximum RPM in the up shift table";
      parameter Modelica.SIunits.Conversions.NonSIunits.AngularVelocity_rpm ShiftUpMinRPM = ShiftUpMaxRPM * 0.8
      "Minimum RPM in the up shift table";
      parameter Modelica.SIunits.Conversions.NonSIunits.AngularVelocity_rpm ShiftDownMaxRPM = 1195
      "Maximum RPM in the down shift table";
      parameter Modelica.SIunits.Conversions.NonSIunits.AngularVelocity_rpm ShiftDownMinRPM = 800
      "Minimum RPM in the down shift table";

      extends
      C2M2L_Ext.C2M2L_Component_Building_Blocks.Prime_Movers.Electrical_Controls.General_Controllers.Conventional_ECU(
        overspeed_rpm_disable=overspeed_rpm_limit - 150,
        shift_up_map=[0,ShiftUpMinRPM; 1,ShiftUpMaxRPM],
        shift_up_delta_rpm=(ShiftUpMaxRPM-ShiftUpMinRPM) * 0.46,
        shift_down_map=[
        0,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.5;
        0.1,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.48;
        0.2,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.47;
        0.3,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.465;
        0.4,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.434;
        0.5,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.416;
        0.6,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.389;
        0.7,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.336;
        0.8,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.336;
        0.9,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.33;
        1,(ShiftDownMaxRPM - ShiftDownMinRPM) / 0.33],
        shift_down_delta_rpm=(ShiftDownMaxRPM-ShiftDownMinRPM) * 0.34);

    end Conventional_ECU;
  end Extra_Components;

  package Testing_Blocks
    extends Modelica.Icons.Package;
    model Amphibious_Load
      extends C2M2L_Ext.Interfaces.Test_Bed_C2M2L;
      Modelica.Mechanics.MultiBody.Joints.Prismatic prismatic
        annotation (Placement(transformation(extent={{6,-10},{26,10}})));
      Modelica.Mechanics.MultiBody.Parts.Body body(m=vehicle_mass)
                                                            annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={0,20})));
      Modelica.Mechanics.MultiBody.Parts.Fixed fixed annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={40,-10})));
      Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_a annotation (Placement(
            transformation(rotation=0, extent={{-120,-20},{-80,20}})));
      parameter SI.Mass vehicle_mass=20000 "Mass of rigid body";
    equation
      connect(body.frame_a,prismatic. frame_a) annotation (Line(
          points={{0,10},{0,0},{6,0}},
          color={95,95,95},
          thickness=0.5,
          smooth=Smooth.None));
      connect(prismatic.frame_b,fixed. frame_b) annotation (Line(
          points={{26,0},{40,0}},
          color={95,95,95},
          thickness=0.5,
          smooth=Smooth.None));
      connect(frame_a, prismatic.frame_a) annotation (Line(points={{-100,0},{-100,0},
              {-100,0},{6,0}},      color={95,95,95}));
      annotation (Diagram(coordinateSystem(extent={{-100,-100},{100,100}},
              preserveAspectRatio=true),  graphics),                         Icon(
            coordinateSystem(extent={{-100,-100},{100,100}}, preserveAspectRatio=true),
            graphics={
            Rectangle(
              extent={{-100,100},{100,-100}},
              lineColor={0,0,0},
              lineThickness=0.5),
            Text(
              extent={{-60,100},{60,0}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              textString="Aqua
Load"),     Text(
              extent={{-100,-40},{100,-60}},
              lineColor={135,135,135},
              lineThickness=0.5,
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              textString="m=%vehicle_mass kg")}));
    end Amphibious_Load;

    package Land
      extends Modelica.Icons.Package;

      model Sunday_Driver "Default driver profile from C2M2L_Ext"
        extends C2M2L_Ext.Testing_Blocks.Land.Driver_Land_Profile;
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Text(
                extent={{-120,130},{100,110}},
                lineColor={0,128,0},
                textString="Sunday")}));
      end Sunday_Driver;

      model SC03_Driver
      "SC03 Driving Cycle, per 8/96 Final Rule - a Supplemental FTP Driving Schedule"
        extends C2M2L_Ext.Testing_Blocks.Land.Driver_Base_Land(
        profile_data=[0.0,0.0;1.0,0.0;2.0,0.0;3.0,0.0;4.0,0.0;5.0,0.0;6.0,0.0;7.0,0.0;8.0,0.0;9.0,0.0;10.0,0.0;11.0,0.0;12.0,0.0;13.0,0.0;14.0,0.0;15.0,0.0;16.0,0.0;17.0,0.0;18.0,0.0;19.0,0.402336;20.0,1.34112;21.0,1.296416;22.0,1.475232;23.0,1.56464;24.0,0.983488;25.0,0.625856;26.0,0.0;27.0,0.0;28.0,0.0;29.0,0.0;30.0,0.0;31.0,0.0;32.0,0.0;33.0,0.178816;34.0,1.475232;35.0,2.68224;36.0,3.57632;37.0,3.889248;38.0,4.4704;39.0,5.543296;40.0,6.169152;41.0,6.571488;42.0,6.616192;43.0,7.420864;44.0,8.180832;45.0,8.49376;46.0,8.583168;47.0,8.627872;48.0,8.806688;49.0,9.16432;50.0,9.38784;51.0,9.477248;52.0,9.656064;53.0,9.924288;54.0,10.639552;55.0,10.997184;56.0,10.863072;57.0,10.416032;58.0,10.147808;59.0,9.566656;60.0,9.119616;61.0,8.71728;62.0,8.002016;63.0,6.973824;64.0,5.230368;65.0,3.486912;66.0,3.218688;67.0,4.157472;68.0,5.766816;69.0,7.063232;70.0,7.242048;71.0,7.554976;72.0,8.180832;73.0,9.074912;74.0,9.656064;75.0,10.013696;76.0,10.28192;77.0,10.192512;78.0,9.879584;79.0,9.477248;80.0,8.71728;81.0,7.644384;82.0,6.303264;83.0,4.69392;84.0,3.397504;85.0,3.3528;86.0,4.4704;87.0,5.856224;88.0,6.303264;89.0,7.331456;90.0,8.761984;91.0,10.013696;92.0,11.041888;93.0,11.667744;94.0,11.533632;95.0,11.891264;96.0,12.427712;97.0,12.74064;98.0,12.919456;99.0,13.098272;100.0,13.18768;101.0,13.142976;102.0,13.142976;103.0,13.321792;104.0,13.545312;105.0,13.679424;106.0,13.63472;107.0,13.63472;108.0,13.455904;109.0,13.098272;110.0,12.695936;111.0,12.338304;112.0,11.980672;113.0,11.39952;114.0,10.594848;115.0,9.700768;116.0,8.627872;117.0,7.465568;118.0,6.437376;119.0,5.14096;120.0,3.531616;121.0,2.950464;122.0,4.202176;123.0,5.543296;124.0,6.616192;125.0,7.197344;126.0,8.627872;127.0,10.103104;128.0,11.39952;129.0,11.801856;130.0,11.935968;131.0,12.427712;132.0,13.142976;133.0,13.902944;134.0,14.5288;135.0,15.020544;136.0,15.467584;137.0,15.825216;138.0,16.138144;139.0,16.54048;140.0,16.853408;141.0,17.032224;142.0,17.121632;143.0,17.032224;144.0,16.898112;145.0,16.361664;146.0,15.556992;147.0,14.841728;148.0,14.484096;149.0,14.439392;150.0,14.439392;151.0,14.484096;152.0,14.484096;153.0,14.484096;154.0,14.5288;155.0,14.886432;156.0,15.378176;157.0,15.86992;158.0,16.361664;159.0,16.719296;160.0,16.98752;161.0,17.166336;162.0,17.21104;163.0,17.255744;164.0,17.166336;165.0,17.076928;166.0,16.764;167.0,16.495776;168.0,16.227552;169.0,15.556992;170.0,14.75232;171.0,14.037056;172.0,13.724128;173.0,13.545312;174.0,13.4112;175.0,13.098272;176.0,12.248896;177.0,11.220704;178.0,9.745472;179.0,7.689088;180.0,5.588;181.0,3.621024;182.0,2.01168;183.0,0.89408;184.0,0.44704;185.0,0.268224;186.0,0.0;187.0,0.0;188.0,0.0;189.0,0.0;190.0,0.0;191.0,0.0;192.0,0.0;193.0,0.0;194.0,0.0;195.0,0.0;196.0,0.0;197.0,0.0;198.0,0.0;199.0,0.0;200.0,0.0;201.0,0.0;202.0,0.0;203.0,0.0;204.0,0.0;205.0,0.44704;206.0,0.22352;207.0,1.162304;208.0,3.442208;209.0,5.498592;210.0,7.063232;211.0,7.733792;212.0,8.672576;213.0,10.416032;214.0,12.159488;215.0,13.85824;216.0,15.020544;217.0,15.288768;218.0,16.004032;219.0,16.674592;220.0,17.121632;221.0,17.523968;222.0,17.926304;223.0,18.283936;224.0,18.32864;225.0,18.060416;226.0,17.747488;227.0,17.479264;228.0,17.032224;229.0,16.406368;230.0,16.048736;231.0,16.048736;232.0,15.959328;233.0,15.601696;234.0,15.154656;235.0,14.573504;236.0,14.260576;237.0,13.902944;238.0,13.679424;239.0,13.545312;240.0,13.455904;241.0,13.366496;242.0,13.321792;243.0,13.321792;244.0,13.321792;245.0,13.321792;246.0,13.277088;247.0,13.277088;248.0,13.232384;249.0,12.695936;250.0,11.533632;251.0,10.192512;252.0,8.49376;253.0,6.25856;254.0,3.844544;255.0,1.832864;256.0,0.581152;257.0,0.0;258.0,0.0;259.0,0.0;260.0,0.0;261.0,0.0;262.0,0.0;263.0,0.0;264.0,0.0;265.0,0.0;266.0,0.0;267.0,0.0;268.0,0.0;269.0,0.0;270.0,0.0;271.0,0.0;272.0,0.0;273.0,0.0;274.0,0.0;275.0,0.0;276.0,0.0;277.0,0.0;278.0,0.0;279.0,0.0;280.0,0.0;281.0,0.044704;282.0,2.01168;283.0,4.068064;284.0,6.079744;285.0,8.136128;286.0,10.103104;287.0,11.712448;288.0,13.098272;289.0,14.349984;290.0,15.42288;291.0,16.451072;292.0,17.166336;293.0,17.8816;294.0,18.418048;295.0,18.730976;296.0,18.865088;297.0,19.088608;298.0,19.22272;299.0,19.356832;300.0,19.44624;301.0,19.535648;302.0,19.803872;303.0,20.295616;304.0,20.519136;305.0,20.921472;306.0,21.279104;307.0,21.547328;308.0,21.726144;309.0,21.770848;310.0,21.726144;311.0,21.90496;312.0,22.262592;313.0,22.57552;314.0,22.888448;315.0,23.290784;316.0,23.559008;317.0,23.871936;318.0,23.424896;319.0,24.36368;320.0,24.497792;321.0,24.497792;322.0,24.453088;323.0,24.274272;324.0,24.14016;325.0,24.050752;326.0,23.91664;327.0,23.827232;328.0,23.648416;329.0,23.514304;330.0,23.24608;331.0,23.067264;332.0,22.79904;333.0,22.486112;334.0,22.039072;335.0,21.502624;336.0,20.78736;337.0,19.490944;338.0,18.194528;339.0,16.629888;340.0,15.378176;341.0,14.037056;342.0,12.785344;343.0,10.818368;344.0,8.091424;345.0,5.498592;346.0,3.621024;347.0,2.145792;348.0,1.162304;349.0,0.938784;350.0,0.0;351.0,0.0;352.0,0.0;353.0,0.0;354.0,0.0;355.0,0.0;356.0,0.0;357.0,0.0;358.0,0.0;359.0,0.0;360.0,0.0;361.0,0.0;362.0,0.0;363.0,0.0;364.0,0.0;365.0,0.0;366.0,0.0;367.0,0.0;368.0,0.0;369.0,0.0;370.0,0.0;371.0,1.922272;372.0,4.068064;373.0,5.900928;374.0,7.286752;375.0,8.538464;376.0,9.343136;377.0,10.147808;378.0,11.086592;379.0,12.025376;380.0,12.874752;381.0,13.4112;382.0,13.590016;383.0,13.679424;384.0,13.813536;385.0,13.902944;386.0,13.768832;387.0,13.902944;388.0,14.08176;389.0,14.484096;390.0,14.797024;391.0,14.886432;392.0,14.931136;393.0,15.065248;394.0,15.244064;395.0,15.512288;396.0,15.6464;397.0,15.825216;398.0,16.004032;399.0,16.09344;400.0,16.182848;401.0,16.227552;402.0,16.272256;403.0,16.31696;404.0,16.495776;405.0,16.629888;406.0,16.674592;407.0,16.898112;408.0,17.076928;409.0,17.255744;410.0,17.345152;411.0,17.255744;412.0,17.389856;413.0,17.43456;414.0,17.345152;415.0,17.255744;416.0,17.032224;417.0,16.808704;418.0,16.808704;419.0,16.674592;420.0,16.54048;421.0,16.361664;422.0,16.182848;423.0,16.09344;424.0,16.09344;425.0,15.86992;426.0,15.42288;427.0,14.75232;428.0,13.85824;429.0,12.2936;430.0,10.103104;431.0,8.9408;432.0,8.49376;433.0,8.672576;434.0,8.583168;435.0,9.209024;436.0,10.237216;437.0,10.997184;438.0,11.39952;439.0,12.025376;440.0,12.204192;441.0,12.606528;442.0,13.232384;443.0,13.500608;444.0,13.724128;445.0,13.992352;446.0,14.171168;447.0,14.394688;448.0,14.5288;449.0,14.75232;450.0,14.841728;451.0,14.886432;452.0,14.797024;453.0,14.618208;454.0,14.439392;455.0,14.260576;456.0,14.08176;457.0,13.947648;458.0,13.768832;459.0,13.63472;460.0,13.500608;461.0,13.366496;462.0,13.500608;463.0,13.679424;464.0,13.813536;465.0,13.947648;466.0,14.215872;467.0,14.484096;468.0,14.5288;469.0,14.439392;470.0,14.439392;471.0,14.662912;472.0,14.707616;473.0,14.662912;474.0,14.662912;475.0,14.886432;476.0,14.931136;477.0,14.707616;478.0,14.707616;479.0,14.662912;480.0,14.707616;481.0,14.662912;482.0,14.662912;483.0,14.484096;484.0,14.126464;485.0,13.679424;486.0,13.545312;487.0,13.545312;488.0,13.321792;489.0,13.098272;490.0,12.919456;491.0,12.874752;492.0,13.098272;493.0,13.4112;494.0,13.500608;495.0,13.590016;496.0,13.724128;497.0,13.768832;498.0,13.321792;499.0,12.830048;500.0,12.919456;501.0,13.053568;502.0,13.142976;503.0,12.785344;504.0,12.07008;505.0,12.159488;506.0,11.891264;507.0,10.371328;508.0,9.477248;509.0,9.477248;510.0,9.298432;511.0,8.002016;512.0,5.900928;513.0,4.24688;514.0,2.861056;515.0,1.832864;516.0,1.1176;517.0,0.0;518.0,0.0;519.0,0.0;520.0,0.0;521.0,0.0;522.0,0.0;523.0,0.0;524.0,0.0;525.0,0.0;526.0,0.0;527.0,0.0;528.0,0.0;529.0,0.0;530.0,0.0;531.0,0.0;532.0,0.0;533.0,0.0;534.0,0.0;535.0,0.0;536.0,0.0;537.0,0.268224;538.0,1.475232;539.0,2.637536;540.0,3.978656;541.0,4.559808;542.0,4.649216;543.0,4.425696;544.0,4.425696;545.0,4.69392;546.0,5.051552;547.0,5.543296;548.0,5.722112;549.0,6.25856;550.0,6.526784;551.0,6.92912;552.0,7.59968;553.0,7.8232;554.0,8.091424;555.0,8.225536;556.0,8.27024;557.0,8.136128;558.0,8.27024;559.0,8.180832;560.0,8.136128;561.0,8.002016;562.0,7.912608;563.0,7.912608;564.0,7.733792;565.0,7.778496;566.0,7.510272;567.0,7.8232;568.0,7.912608;569.0,7.8232;570.0,7.867904;571.0,7.733792;572.0,7.778496;573.0,7.867904;574.0,7.867904;575.0,8.002016;576.0,8.04672;577.0,7.957312;578.0,7.912608;579.0,7.8232;580.0,7.912608;581.0,7.912608;582.0,8.091424;583.0,8.225536;584.0,8.583168;585.0,8.449056;586.0,8.04672;587.0,6.973824;588.0,5.945632;589.0,4.4704;590.0,3.442208;591.0,2.592832;592.0,1.654048;593.0,1.072896;594.0,0.0;595.0,0.0;596.0,0.0;597.0,0.0;598.0,0.0;599.0,0.0;600.0,0.0]);
        annotation (Icon(graphics={Text(
                extent={{-120,130},{100,110}},
                lineColor={0,128,0},
                textString="SC03"),Line(
                points={{-110,140},{-102,168},{-96,182},{-90,162},{-84,180},{-76,162},
                    {-56,194},{-52,188},{-44,194},{-36,140},{-28,140},{-24,194},{-12,
                    176},{-4,174},{2,140},{14,190},{26,206},{36,140},{48,140},{60,180},
                    {78,192},{81.9961,164.027},{91.9902,177.986},{110,140}},
                color={255,0,0},
                smooth=Smooth.None)}));
      end SC03_Driver;

      model US06_Driver "US06 Driving Cycle, per 8/96 Final Rule"
        extends C2M2L_Ext.Testing_Blocks.Land.Driver_Base_Land(
        profile_data=[0.0,0.0;1.0,0.0;2.0,0.0;3.0,0.0;4.0,0.0;5.0,0.0;6.0,0.089408;7.0,0.312928;8.0,0.491744;9.0,0.759968;10.0,2.68224;11.0,6.213856;12.0,9.16432;13.0,11.488928;14.0,11.176;15.0,12.695936;16.0,14.439392;17.0,15.467584;18.0,16.31696;19.0,17.166336;20.0,17.836896;21.0,18.865088;22.0,19.580352;23.0,19.759168;24.0,19.401536;25.0,19.043904;26.0,18.015712;27.0,17.523968;28.0,17.166336;29.0,17.166336;30.0,17.523968;31.0,17.345152;32.0,17.345152;33.0,16.31696;34.0,14.439392;35.0,12.338304;36.0,9.968992;37.0,7.733792;38.0,5.14096;39.0,2.592832;40.0,0.536448;41.0,0.0;42.0,0.0;43.0,0.0;44.0,0.0;45.0,0.0;46.0,0.0;47.0,0.0;48.0,0.0;49.0,0.357632;50.0,4.112768;51.0,6.660896;52.0,8.136128;53.0,9.924288;54.0,12.159488;55.0,14.037056;56.0,15.109952;57.0,16.629888;58.0,18.239232;59.0,19.66976;60.0,20.697952;61.0,21.279104;62.0,22.12848;63.0,22.888448;64.0,23.69312;65.0,24.318976;66.0,24.855424;67.0,25.213056;68.0,25.078944;69.0,25.123648;70.0,24.944832;71.0,24.631904;72.0,24.318976;73.0,24.229568;74.0,24.318976;75.0,24.229568;76.0,23.91664;77.0,23.380192;78.0,23.24608;79.0,23.201376;80.0,23.156672;81.0,23.201376;82.0,23.24608;83.0,23.4696;84.0,23.871936;85.0,24.542496;86.0,25.391872;87.0,26.285952;88.0,27.090624;89.0,27.850592;90.0,28.699968;91.0,29.594048;92.0,30.309312;93.0,31.024576;94.0,31.471616;95.0,31.561024;96.0,31.605728;97.0,31.426912;98.0,30.488128;99.0,29.72816;100.0,29.012896;101.0,28.476448;102.0,27.94;103.0,27.26944;104.0,26.509472;105.0,25.794208;106.0,25.03424;107.0,24.36368;108.0,23.603712;109.0,22.888448;110.0,22.12848;111.0,21.45792;112.0,20.697952;113.0,19.66976;114.0,18.373344;115.0,17.345152;116.0,16.853408;117.0,16.361664;118.0,15.780512;119.0,13.4112;120.0,10.907776;121.0,8.851392;122.0,6.92912;123.0,4.828032;124.0,2.816352;125.0,1.430528;126.0,0.938784;127.0,0.536448;128.0,0.0;129.0,0.0;130.0,0.0;131.0,0.0;132.0,0.0;133.0,0.0;134.0,0.0;135.0,0.0;136.0,1.207008;137.0,4.112768;138.0,7.197344;139.0,10.147808;140.0,13.053568;141.0,15.288768;142.0,17.345152;143.0,19.22272;144.0,20.250912;145.0,20.921472;146.0,21.45792;147.0,22.12848;148.0,22.486112;149.0,23.02256;150.0,23.335488;151.0,23.514304;152.0,23.69312;153.0,24.050752;154.0,24.050752;155.0,24.050752;156.0,24.408384;157.0,25.168352;158.0,25.436576;159.0,25.973024;160.0,26.107136;161.0,26.643584;162.0,26.777696;163.0,26.911808;164.0,27.04592;165.0,26.688288;166.0,26.062432;167.0,25.973024;168.0,25.838912;169.0,25.615392;170.0,25.7048;171.0,25.302464;172.0,25.48128;173.0,25.302464;174.0,25.25776;175.0,25.123648;176.0,25.213056;177.0,25.302464;178.0,25.213056;179.0,25.078944;180.0,25.03424;181.0,24.989536;182.0,24.497792;183.0,24.229568;184.0,24.408384;185.0,23.335488;186.0,24.453088;187.0,24.900128;188.0,25.48128;189.0,25.92832;190.0,25.973024;191.0,26.554176;192.0,26.777696;193.0,27.26944;194.0,27.448256;195.0,27.671776;196.0,27.94;197.0,27.94;198.0,28.029408;199.0,27.805888;200.0,27.94;201.0,28.208224;202.0,28.029408;203.0,28.074112;204.0,28.16352;205.0,28.655264;206.0,28.565856;207.0,28.655264;208.0,28.744672;209.0,28.83408;210.0,29.012896;211.0,29.191712;212.0,29.50464;213.0,29.50464;214.0,29.683456;215.0,28.655264;216.0,28.431744;217.0,28.565856;218.0,28.655264;219.0,28.476448;220.0,28.744672;221.0,28.699968;222.0,28.565856;223.0,28.699968;224.0,28.342336;225.0,28.61056;226.0,28.565856;227.0,28.61056;228.0,28.521152;229.0,28.61056;230.0,28.297632;231.0,28.342336;232.0,28.565856;233.0,28.61056;234.0,28.744672;235.0,28.968192;236.0,29.102304;237.0,28.61056;238.0,28.699968;239.0,28.208224;240.0,28.476448;241.0,28.208224;242.0,28.476448;243.0,28.38704;244.0,28.16352;245.0,28.208224;246.0,28.16352;247.0,28.297632;248.0,28.342336;249.0,28.297632;250.0,27.94;251.0,27.94;252.0,28.118816;253.0,28.074112;254.0,27.805888;255.0,27.895296;256.0,27.850592;257.0,27.850592;258.0,27.895296;259.0,27.761184;260.0,27.94;261.0,28.074112;262.0,27.850592;263.0,27.850592;264.0,27.895296;265.0,27.671776;266.0,28.074112;267.0,28.074112;268.0,27.850592;269.0,28.074112;270.0,27.895296;271.0,27.761184;272.0,27.671776;273.0,27.627072;274.0,27.761184;275.0,27.761184;276.0,27.761184;277.0,27.71648;278.0,27.895296;279.0,27.805888;280.0,27.805888;281.0,27.895296;282.0,28.029408;283.0,27.984704;284.0,28.476448;285.0,28.744672;286.0,28.968192;287.0,29.102304;288.0,29.459936;289.0,29.549344;290.0,29.95168;291.0,30.041088;292.0,30.1752;293.0,30.532832;294.0,30.532832;295.0,30.756352;296.0,30.890464;297.0,31.024576;298.0,32.052768;299.0,32.231584;300.0,33.483296;301.0,32.455104;302.0,32.276288;303.0,32.276288;304.0,32.18688;305.0,32.4104;306.0,32.544512;307.0,32.499808;308.0,32.097472;309.0,31.918656;310.0,31.784544;311.0,31.784544;312.0,31.695136;313.0,31.73984;314.0,31.73984;315.0,31.829248;316.0,32.231584;317.0,32.455104;318.0,32.902144;319.0,33.438592;320.0,33.840928;321.0,34.556192;322.0,35.047936;323.0,35.450272;324.0,34.958528;325.0,33.97504;326.0,33.796224;327.0,34.153856;328.0,34.690304;329.0,34.86912;330.0,35.360864;331.0,35.53968;332.0,35.718496;333.0,35.718496;334.0,35.897312;335.0,35.897312;336.0,35.53968;337.0,35.53968;338.0,35.360864;339.0,35.182048;340.0,34.690304;341.0,34.19856;342.0,33.215072;343.0,32.455104;344.0,31.650432;345.0,30.219904;346.0,29.683456;347.0,29.817568;348.0,29.549344;349.0,29.459936;350.0,29.594048;351.0,29.549344;352.0,29.996384;353.0,30.130496;354.0,30.532832;355.0,30.532832;356.0,30.711648;357.0,30.488128;358.0,30.443424;359.0,30.39872;360.0,29.996384;361.0,29.683456;362.0,29.549344;363.0,29.370528;364.0,29.50464;365.0,29.683456;366.0,29.50464;367.0,29.638752;368.0,29.95168;369.0,30.1752;370.0,30.354016;371.0,30.443424;372.0,30.62224;373.0,30.801056;374.0,30.666944;375.0,31.024576;376.0,31.024576;377.0,31.024576;378.0,31.2928;379.0,31.471616;380.0,31.561024;381.0,31.695136;382.0,31.426912;383.0,31.561024;384.0,31.426912;385.0,31.158688;386.0,31.248096;387.0,31.337504;388.0,31.113984;389.0,30.979872;390.0,31.248096;391.0,31.158688;392.0,31.06928;393.0,31.248096;394.0,31.382208;395.0,31.382208;396.0,31.382208;397.0,31.73984;398.0,31.650432;399.0,31.695136;400.0,31.605728;401.0,31.695136;402.0,31.829248;403.0,31.873952;404.0,31.650432;405.0,31.829248;406.0,32.052768;407.0,32.142176;408.0,32.455104;409.0,32.320992;410.0,32.320992;411.0,32.231584;412.0,32.18688;413.0,32.142176;414.0,32.455104;415.0,32.544512;416.0,32.723328;417.0,32.231584;418.0,31.96336;419.0,31.695136;420.0,31.471616;421.0,31.51632;422.0,31.695136;423.0,31.382208;424.0,31.73984;425.0,31.382208;426.0,31.426912;427.0,30.890464;428.0,30.756352;429.0,30.488128;430.0,30.532832;431.0,30.488128;432.0,30.264608;433.0,30.085792;434.0,30.1752;435.0,30.219904;436.0,30.219904;437.0,30.041088;438.0,29.95168;439.0,29.638752;440.0,29.772864;441.0,29.594048;442.0,29.683456;443.0,29.459936;444.0,29.549344;445.0,29.28112;446.0,27.805888;447.0,27.805888;448.0,27.448256;449.0,27.314144;450.0,27.448256;451.0,27.314144;452.0,27.448256;453.0,27.448256;454.0,27.627072;455.0,27.627072;456.0,27.627072;457.0,27.627072;458.0,27.805888;459.0,27.627072;460.0,27.805888;461.0,27.984704;462.0,27.805888;463.0,27.984704;464.0,27.805888;465.0,27.984704;466.0,27.984704;467.0,28.16352;468.0,27.984704;469.0,27.805888;470.0,27.314144;471.0,26.59888;472.0,26.285952;473.0,25.391872;474.0,24.900128;475.0,24.184864;476.0,23.02256;477.0,21.994368;478.0,21.815552;479.0,21.279104;480.0,20.072096;481.0,18.55216;482.0,16.629888;483.0,15.467584;484.0,14.75232;485.0,13.053568;486.0,9.968992;487.0,7.912608;488.0,7.733792;489.0,6.25856;490.0,4.4704;491.0,2.68224;492.0,0.89408;493.0,0.0;494.0,0.0;495.0,0.0;496.0,0.0;497.0,0.0;498.0,0.0;499.0,0.0;500.0,0.0;501.0,0.089408;502.0,1.966976;503.0,4.515104;504.0,6.973824;505.0,9.298432;506.0,11.220704;507.0,12.383008;508.0,12.606528;509.0,11.980672;510.0,11.086592;511.0,10.013696;512.0,7.644384;513.0,5.051552;514.0,3.084576;515.0,3.3528;516.0,4.962144;517.0,6.884416;518.0,8.896096;519.0,10.818368;520.0,12.114784;521.0,12.74064;522.0,12.606528;523.0,11.444224;524.0,9.700768;525.0,7.733792;526.0,5.409184;527.0,3.3528;528.0,2.592832;529.0,1.072896;530.0,0.536448;531.0,0.849376;532.0,2.995168;533.0,5.275072;534.0,7.510272;535.0,9.700768;536.0,11.578336;537.0,12.383008;538.0,12.51712;539.0,12.114784;540.0,10.907776;541.0,9.030208;542.0,6.795008;543.0,4.157472;544.0,2.2352;545.0,1.296416;546.0,1.072896;547.0,3.755136;548.0,6.03504;549.0,7.957312;550.0,9.924288;551.0,11.712448;552.0,13.4112;553.0,13.321792;554.0,11.62304;555.0,9.521952;556.0,7.242048;557.0,5.096256;558.0,2.950464;559.0,1.162304;560.0,0.0;561.0,0.0;562.0,0.0;563.0,0.0;564.0,0.0;565.0,0.0;566.0,0.0;567.0,0.0;568.0,0.134112;569.0,2.861056;570.0,5.677408;571.0,8.583168;572.0,10.639552;573.0,12.606528;574.0,15.601696;575.0,16.764;576.0,18.015712;577.0,20.1168;578.0,22.307296;579.0,23.067264;580.0,22.888448;581.0,22.620224;582.0,22.307296;583.0,21.368512;584.0,19.937984;585.0,18.418048;586.0,16.898112;587.0,14.931136;588.0,12.51712;589.0,10.594848;590.0,8.404352;591.0,5.766816;592.0,2.771648;593.0,0.983488;594.0,0.0;595.0,0.0;596.0,0.0;597.0,0.0;598.0,0.0;599.0,0.0;600.0,0.0]);
        annotation (Icon(graphics={Text(
                extent={{-120,130},{100,110}},
                lineColor={0,128,0},
                textString="US06"),Line(
                points={{-110,140},{-102,168},{-96,162},{-90,140},{-80,140},{-72,180},
                    {-64,170},{-56,192},{-40,170},{-36,140},{-28,140},{-26,172},{-18,
                    178},{-12,172},{-8,190},{8,190},{12,198},{18,190},{36,190},{42,
                    184},{48,140},{54,156},{62,140},{70,156},{78,140},{84,156},{92,
                    140},{104,188},{110,140}},
                color={255,0,0},
                smooth=Smooth.None)}));
      end US06_Driver;

      model Urban_Driver "Urban Dynamometer Driving Schedule"
        extends C2M2L_Ext.Testing_Blocks.Land.Driver_Base_Land(
        profile_data=[0.0,0.0;1.0,0.0;2.0,0.0;3.0,0.0;4.0,0.0;5.0,0.0;6.0,0.0;7.0,0.0;8.0,0.0;9.0,0.0;10.0,0.0;11.0,0.0;12.0,0.0;13.0,0.0;14.0,0.0;15.0,0.0;16.0,0.0;17.0,0.0;18.0,0.0;19.0,0.0;20.0,0.0;21.0,1.34112;22.0,2.637536;23.0,3.844544;24.0,5.14096;25.0,6.392672;26.0,7.554976;27.0,7.733792;28.0,8.091424;29.0,9.253728;30.0,9.700768;31.0,10.013696;32.0,10.0584;33.0,9.879584;34.0,9.61136;35.0,9.343136;36.0,9.119616;37.0,8.851392;38.0,7.59968;39.0,6.660896;40.0,6.660896;41.0,6.795008;42.0,6.92912;43.0,7.15264;44.0,7.644384;45.0,8.538464;46.0,9.432544;47.0,10.147808;48.0,10.237216;49.0,10.147808;50.0,10.103104;51.0,9.521952;52.0,8.49376;53.0,7.644384;54.0,7.063232;55.0,7.063232;56.0,7.912608;57.0,8.851392;58.0,9.656064;59.0,10.371328;60.0,10.818368;61.0,10.997184;62.0,11.131296;63.0,11.176;64.0,10.997184;65.0,10.95248;66.0,11.041888;67.0,11.086592;68.0,11.041888;69.0,10.997184;70.0,10.997184;71.0,11.220704;72.0,11.444224;73.0,11.488928;74.0,11.354816;75.0,11.131296;76.0,11.176;77.0,11.354816;78.0,11.62304;79.0,11.62304;80.0,11.488928;81.0,11.667744;82.0,11.935968;83.0,12.2936;84.0,12.785344;85.0,13.098272;86.0,13.321792;87.0,13.455904;88.0,13.590016;89.0,13.724128;90.0,13.724128;91.0,13.63472;92.0,13.590016;93.0,13.545312;94.0,13.590016;95.0,13.768832;96.0,13.590016;97.0,13.366496;98.0,13.18768;99.0,13.321792;100.0,13.545312;101.0,13.724128;102.0,13.813536;103.0,13.85824;104.0,13.813536;105.0,13.590016;106.0,13.321792;107.0,13.366496;108.0,13.500608;109.0,13.724128;110.0,13.947648;111.0,14.215872;112.0,14.394688;113.0,14.484096;114.0,14.394688;115.0,14.171168;116.0,12.785344;117.0,11.310112;118.0,9.83488;119.0,8.359648;120.0,6.884416;121.0,5.409184;122.0,3.933952;123.0,2.45872;124.0,0.983488;125.0,0.0;126.0,0.0;127.0,0.0;128.0,0.0;129.0,0.0;130.0,0.0;131.0,0.0;132.0,0.0;133.0,0.0;134.0,0.0;135.0,0.0;136.0,0.0;137.0,0.0;138.0,0.0;139.0,0.0;140.0,0.0;141.0,0.0;142.0,0.0;143.0,0.0;144.0,0.0;145.0,0.0;146.0,0.0;147.0,0.0;148.0,0.0;149.0,0.0;150.0,0.0;151.0,0.0;152.0,0.0;153.0,0.0;154.0,0.0;155.0,0.0;156.0,0.0;157.0,0.0;158.0,0.0;159.0,0.0;160.0,0.0;161.0,0.0;162.0,0.0;163.0,0.0;164.0,1.475232;165.0,2.950464;166.0,4.425696;167.0,5.900928;168.0,7.37616;169.0,8.851392;170.0,9.924288;171.0,10.863072;172.0,11.533632;173.0,11.801856;174.0,11.488928;175.0,11.220704;176.0,11.041888;177.0,11.176;178.0,11.265408;179.0,11.354816;180.0,11.533632;181.0,12.159488;182.0,11.84656;183.0,10.72896;184.0,10.147808;185.0,8.672576;186.0,7.912608;187.0,7.689088;188.0,8.091424;189.0,8.314944;190.0,8.9408;191.0,9.924288;192.0,10.95248;193.0,12.204192;194.0,13.63472;195.0,14.97584;196.0,16.182848;197.0,16.674592;198.0,17.568672;199.0,18.10512;200.0,18.820384;201.0,19.44624;202.0,20.161504;203.0,20.56384;204.0,20.921472;205.0,21.2344;206.0,21.2344;207.0,21.144992;208.0,21.100288;209.0,21.01088;210.0,21.01088;211.0,21.01088;212.0,21.01088;213.0,21.01088;214.0,21.100288;215.0,21.189696;216.0,21.413216;217.0,21.68144;218.0,21.949664;219.0,22.12848;220.0,22.352;221.0,22.620224;222.0,22.79904;223.0,23.02256;224.0,23.335488;225.0,23.782528;226.0,24.184864;227.0,24.408384;228.0,24.542496;229.0,24.5872;230.0,24.542496;231.0,24.408384;232.0,24.408384;233.0,24.497792;234.0,24.631904;235.0,24.81072;236.0,24.900128;237.0,25.078944;238.0,25.168352;239.0,25.302464;240.0,25.347168;241.0,25.347168;242.0,25.25776;243.0,25.25776;244.0,25.25776;245.0,25.25776;246.0,25.25776;247.0,25.25776;248.0,25.213056;249.0,25.078944;250.0,24.944832;251.0,24.631904;252.0,24.408384;253.0,24.229568;254.0,24.14016;255.0,24.006048;256.0,23.961344;257.0,24.095456;258.0,24.14016;259.0,24.184864;260.0,24.184864;261.0,24.050752;262.0,23.871936;263.0,23.69312;264.0,23.514304;265.0,23.290784;266.0,23.424896;267.0,23.24608;268.0,23.201376;269.0,23.111968;270.0,23.02256;271.0,23.067264;272.0,23.156672;273.0,23.290784;274.0,23.4696;275.0,23.69312;276.0,23.91664;277.0,24.14016;278.0,24.542496;279.0,24.766016;280.0,24.855424;281.0,25.03424;282.0,25.03424;283.0,24.944832;284.0,24.676608;285.0,24.36368;286.0,23.961344;287.0,23.4696;288.0,23.02256;289.0,23.02256;290.0,23.02256;291.0,22.843744;292.0,22.396704;293.0,22.352;294.0,22.396704;295.0,22.352;296.0,22.173184;297.0,22.12848;298.0,22.12848;299.0,22.12848;300.0,21.949664;301.0,21.726144;302.0,21.502624;303.0,21.100288;304.0,20.608544;305.0,20.1168;306.0,19.580352;307.0,19.043904;308.0,18.55216;309.0,18.015712;310.0,17.21104;311.0,16.54048;312.0,15.735808;313.0,15.109952;314.0,14.5288;315.0,14.08176;316.0,13.679424;317.0,13.63472;318.0,13.4112;319.0,12.96416;320.0,12.2936;321.0,11.086592;322.0,9.61136;323.0,8.985504;324.0,8.538464;325.0,8.27024;326.0,7.59968;327.0,6.92912;328.0,5.588;329.0,4.828032;330.0,3.57632;331.0,2.101088;332.0,0.625856;333.0,0.0;334.0,0.0;335.0,0.0;336.0,0.0;337.0,0.0;338.0,0.0;339.0,0.0;340.0,0.0;341.0,0.0;342.0,0.0;343.0,0.0;344.0,0.0;345.0,0.0;346.0,0.0;347.0,0.44704;348.0,1.922272;349.0,3.397504;350.0,4.872736;351.0,6.347968;352.0,7.733792;353.0,8.9408;354.0,10.0584;355.0,10.594848;356.0,11.265408;357.0,11.891264;358.0,12.561824;359.0,13.4112;360.0,13.768832;361.0,14.126464;362.0,14.349984;363.0,14.662912;364.0,15.020544;365.0,15.42288;366.0,15.467584;367.0,15.601696;368.0,15.556992;369.0,15.42288;370.0,15.512288;371.0,15.86992;372.0,16.09344;373.0,16.09344;374.0,16.09344;375.0,16.09344;376.0,16.09344;377.0,16.09344;378.0,16.138144;379.0,16.272256;380.0,16.31696;381.0,16.272256;382.0,16.09344;383.0,15.691104;384.0,15.244064;385.0,14.97584;386.0,14.037056;387.0,12.96416;388.0,11.488928;389.0,10.28192;390.0,9.074912;391.0,7.8232;392.0,6.48208;393.0,5.36448;394.0,3.889248;395.0,2.414016;396.0,0.938784;397.0,0.0;398.0,0.0;399.0,0.0;400.0,0.0;401.0,0.0;402.0,0.0;403.0,1.162304;404.0,2.637536;405.0,4.112768;406.0,5.588;407.0,7.063232;408.0,8.538464;409.0,10.013696;410.0,11.176;411.0,11.444224;412.0,12.2936;413.0,12.96416;414.0,13.4112;415.0,13.455904;416.0,13.4112;417.0,13.277088;418.0,13.098272;419.0,12.874752;420.0,12.51712;421.0,11.176;422.0,9.700768;423.0,8.225536;424.0,6.750304;425.0,5.275072;426.0,3.79984;427.0,2.324608;428.0,0.849376;429.0,0.0;430.0,0.0;431.0,0.0;432.0,0.0;433.0,0.0;434.0,0.0;435.0,0.0;436.0,0.0;437.0,0.0;438.0,0.0;439.0,0.0;440.0,0.0;441.0,0.0;442.0,0.0;443.0,0.0;444.0,0.0;445.0,0.0;446.0,0.0;447.0,0.0;448.0,1.475232;449.0,2.950464;450.0,4.425696;451.0,5.900928;452.0,7.37616;453.0,8.851392;454.0,10.326624;455.0,11.801856;456.0,12.427712;457.0,13.008864;458.0,14.08176;459.0,14.75232;460.0,15.020544;461.0,15.556992;462.0,15.691104;463.0,15.914624;464.0,16.138144;465.0,16.09344;466.0,16.138144;467.0,16.182848;468.0,16.09344;469.0,15.959328;470.0,16.09344;471.0,16.09344;472.0,15.914624;473.0,15.86992;474.0,15.825216;475.0,15.735808;476.0,15.735808;477.0,15.735808;478.0,15.735808;479.0,15.735808;480.0,15.735808;481.0,15.6464;482.0,15.691104;483.0,15.735808;484.0,15.86992;485.0,15.735808;486.0,15.6464;487.0,15.6464;488.0,15.6464;489.0,15.556992;490.0,15.467584;491.0,15.42288;492.0,14.97584;493.0,14.30528;494.0,13.455904;495.0,12.51712;496.0,11.39952;497.0,10.0584;498.0,8.851392;499.0,7.37616;500.0,5.900928;501.0,4.604512;502.0,3.218688;503.0,1.78816;504.0,0.44704;505.0,0.0;506.0,0.0;507.0,0.0;508.0,0.0;509.0,0.0;510.0,0.0;511.0,0.536448;512.0,1.56464;513.0,2.45872;514.0,2.90576;515.0,3.79984;516.0,4.291584;517.0,4.69392;518.0,5.319776;519.0,6.25856;520.0,7.15264;521.0,7.912608;522.0,8.49376;523.0,8.985504;524.0,9.38784;525.0,9.83488;526.0,10.28192;527.0,10.639552;528.0,10.95248;529.0,11.131296;530.0,11.176;531.0,11.176;532.0,11.176;533.0,11.176;534.0,11.176;535.0,11.176;536.0,11.444224;537.0,11.533632;538.0,11.62304;539.0,11.444224;540.0,11.265408;541.0,11.176;542.0,11.176;543.0,11.176;544.0,10.907776;545.0,10.326624;546.0,8.851392;547.0,7.37616;548.0,5.900928;549.0,4.425696;550.0,2.950464;551.0,1.475232;552.0,0.0;553.0,0.0;554.0,0.0;555.0,0.0;556.0,0.0;557.0,0.0;558.0,0.0;559.0,0.0;560.0,0.0;561.0,0.0;562.0,0.0;563.0,0.0;564.0,0.0;565.0,0.0;566.0,0.0;567.0,0.0;568.0,0.0;569.0,1.475232;570.0,2.950464;571.0,4.425696;572.0,5.81152;573.0,6.526784;574.0,7.15264;575.0,7.59968;576.0,7.59968;577.0,7.59968;578.0,7.8232;579.0,7.912608;580.0,7.912608;581.0,7.8232;582.0,7.59968;583.0,7.554976;584.0,7.420864;585.0,7.59968;586.0,7.644384;587.0,7.59968;588.0,7.420864;589.0,7.37616;590.0,7.37616;591.0,7.420864;592.0,7.59968;593.0,7.867904;594.0,8.27024;595.0,8.583168;596.0,9.030208;597.0,9.38784;598.0,9.432544;599.0,9.477248;600.0,9.656064;601.0,9.83488;602.0,10.013696;603.0,10.0584;604.0,10.0584;605.0,10.0584;606.0,10.147808;607.0,10.594848;608.0,11.220704;609.0,11.62304;610.0,11.84656;611.0,12.07008;612.0,11.667744;613.0,10.192512;614.0,8.71728;615.0,7.242048;616.0,5.766816;617.0,4.291584;618.0,2.816352;619.0,1.34112;620.0,0.0;621.0,0.0;622.0,0.0;623.0,0.0;624.0,0.0;625.0,0.0;626.0,0.0;627.0,0.0;628.0,0.0;629.0,0.0;630.0,0.0;631.0,0.0;632.0,0.0;633.0,0.0;634.0,0.0;635.0,0.0;636.0,0.0;637.0,0.0;638.0,0.0;639.0,0.0;640.0,0.0;641.0,0.0;642.0,0.0;643.0,0.0;644.0,0.0;645.0,0.0;646.0,0.89408;647.0,2.01168;648.0,3.486912;649.0,4.559808;650.0,5.588;651.0,6.25856;652.0,6.839712;653.0,7.8232;654.0,8.761984;655.0,9.38784;656.0,9.924288;657.0,10.416032;658.0,10.95248;659.0,11.310112;660.0,11.444224;661.0,11.62304;662.0,11.667744;663.0,11.712448;664.0,11.712448;665.0,11.801856;666.0,11.84656;667.0,11.84656;668.0,11.62304;669.0,11.39952;670.0,10.550144;671.0,9.566656;672.0,8.27024;673.0,7.331456;674.0,6.48208;675.0,5.185664;676.0,3.889248;677.0,2.592832;678.0,1.56464;679.0,0.89408;680.0,0.0;681.0,0.0;682.0,0.0;683.0,0.0;684.0,0.0;685.0,0.0;686.0,0.0;687.0,0.0;688.0,0.0;689.0,0.0;690.0,0.0;691.0,0.0;692.0,0.0;693.0,0.0;694.0,0.625856;695.0,1.475232;696.0,1.966976;697.0,2.90576;698.0,4.112768;699.0,5.051552;700.0,6.03504;701.0,6.526784;702.0,7.331456;703.0,7.465568;704.0,7.37616;705.0,7.37616;706.0,8.136128;707.0,8.583168;708.0,8.985504;709.0,9.61136;710.0,10.0584;711.0,10.0584;712.0,9.879584;713.0,10.147808;714.0,10.416032;715.0,10.50544;716.0,10.0584;717.0,9.656064;718.0,9.16432;719.0,8.04672;720.0,6.7056;721.0,5.36448;722.0,4.02336;723.0,2.771648;724.0,2.01168;725.0,1.34112;726.0,0.938784;727.0,0.22352;728.0,0.22352;729.0,1.430528;730.0,2.90576;731.0,4.291584;732.0,5.588;733.0,6.25856;734.0,7.15264;735.0,8.04672;736.0,8.761984;737.0,9.61136;738.0,10.326624;739.0,10.95248;740.0,11.39952;741.0,11.84656;742.0,12.114784;743.0,12.338304;744.0,12.472416;745.0,12.651232;746.0,12.785344;747.0,12.785344;748.0,12.651232;749.0,12.606528;750.0,12.51712;751.0,12.2936;752.0,11.980672;753.0,11.39952;754.0,10.50544;755.0,9.61136;756.0,8.49376;757.0,7.37616;758.0,6.660896;759.0,5.588;760.0,4.202176;761.0,2.771648;762.0,1.34112;763.0,0.67056;764.0,0.67056;765.0,0.22352;766.0,0.0;767.0,1.34112;768.0,2.816352;769.0,4.291584;770.0,5.766816;771.0,7.063232;772.0,7.8232;773.0,8.225536;774.0,8.71728;775.0,9.253728;776.0,9.83488;777.0,10.371328;778.0,11.176;779.0,11.84656;780.0,12.2936;781.0,12.51712;782.0,12.651232;783.0,12.919456;784.0,12.919456;785.0,12.919456;786.0,12.874752;787.0,12.74064;788.0,12.651232;789.0,12.651232;790.0,12.651232;791.0,12.606528;792.0,12.338304;793.0,12.2936;794.0,12.2936;795.0,12.2936;796.0,12.2936;797.0,12.2936;798.0,12.2936;799.0,12.338304;800.0,12.51712;801.0,12.74064;802.0,13.4112;803.0,13.85824;804.0,14.30528;805.0,14.75232;806.0,14.75232;807.0,15.020544;808.0,15.19936;809.0,15.333472;810.0,15.288768;811.0,15.19936;812.0,15.19936;813.0,15.154656;814.0,15.020544;815.0,14.797024;816.0,14.75232;817.0,14.5288;818.0,14.30528;819.0,14.260576;820.0,14.126464;821.0,14.08176;822.0,13.679424;823.0,13.4112;824.0,13.366496;825.0,13.366496;826.0,13.366496;827.0,13.366496;828.0,13.232384;829.0,13.18768;830.0,13.18768;831.0,13.098272;832.0,12.919456;833.0,12.606528;834.0,12.383008;835.0,12.07008;836.0,11.39952;837.0,10.594848;838.0,9.83488;839.0,9.16432;840.0,8.583168;841.0,8.583168;842.0,8.985504;843.0,9.343136;844.0,9.566656;845.0,9.83488;846.0,10.103104;847.0,10.371328;848.0,10.72896;849.0,11.176;850.0,11.62304;851.0,11.891264;852.0,11.891264;853.0,11.980672;854.0,12.07008;855.0,12.159488;856.0,12.427712;857.0,12.561824;858.0,12.874752;859.0,12.919456;860.0,12.96416;861.0,13.008864;862.0,12.96416;863.0,12.561824;864.0,12.2936;865.0,12.07008;866.0,11.533632;867.0,11.176;868.0,10.95248;869.0,11.086592;870.0,11.220704;871.0,11.39952;872.0,11.488928;873.0,11.712448;874.0,12.025376;875.0,12.2936;876.0,12.427712;877.0,12.695936;878.0,12.96416;879.0,13.053568;880.0,13.008864;881.0,12.96416;882.0,12.919456;883.0,12.74064;884.0,12.561824;885.0,12.51712;886.0,12.51712;887.0,12.338304;888.0,12.159488;889.0,11.891264;890.0,12.07008;891.0,12.2936;892.0,12.427712;893.0,12.51712;894.0,12.427712;895.0,12.51712;896.0,12.51712;897.0,12.51712;898.0,12.383008;899.0,12.248896;900.0,12.025376;901.0,11.891264;902.0,11.84656;903.0,11.84656;904.0,11.84656;905.0,11.757152;906.0,11.712448;907.0,11.712448;908.0,11.578336;909.0,11.444224;910.0,11.444224;911.0,11.578336;912.0,11.533632;913.0,11.39952;914.0,10.997184;915.0,10.50544;916.0,9.924288;917.0,9.656064;918.0,9.656064;919.0,9.700768;920.0,10.103104;921.0,10.460736;922.0,10.72896;923.0,10.818368;924.0,10.907776;925.0,11.131296;926.0,11.220704;927.0,11.265408;928.0,11.310112;929.0,11.39952;930.0,11.265408;931.0,11.176;932.0,11.176;933.0,11.176;934.0,11.041888;935.0,10.95248;936.0,10.863072;937.0,10.863072;938.0,10.95248;939.0,11.176;940.0,11.176;941.0,10.997184;942.0,10.997184;943.0,10.773664;944.0,10.95248;945.0,11.220704;946.0,11.444224;947.0,11.220704;948.0,10.72896;949.0,9.83488;950.0,8.985504;951.0,7.554976;952.0,6.079744;953.0,4.604512;954.0,3.12928;955.0,1.654048;956.0,0.178816;957.0,0.0;958.0,0.0;959.0,0.0;960.0,0.89408;961.0,2.369312;962.0,3.844544;963.0,5.319776;964.0,6.795008;965.0,7.8232;966.0,8.314944;967.0,8.9408;968.0,9.432544;969.0,9.83488;970.0,10.28192;971.0,10.95248;972.0,11.757152;973.0,12.2936;974.0,12.561824;975.0,12.695936;976.0,12.74064;977.0,12.74064;978.0,12.74064;979.0,12.383008;980.0,12.2936;981.0,12.159488;982.0,11.980672;983.0,11.84656;984.0,11.62304;985.0,11.488928;986.0,11.265408;987.0,10.72896;988.0,9.83488;989.0,9.61136;990.0,9.61136;991.0,9.745472;992.0,10.0584;993.0,10.28192;994.0,10.192512;995.0,10.192512;996.0,10.28192;997.0,10.147808;998.0,10.147808;999.0,10.147808;1000.0,10.50544;1001.0,10.72896;1002.0,10.997184;1003.0,11.086592;1004.0,11.220704;1005.0,11.39952;1006.0,11.444224;1007.0,11.39952;1008.0,11.176;1009.0,10.773664;1010.0,10.594848;1011.0,10.371328;1012.0,10.237216;1013.0,10.0584;1014.0,9.83488;1015.0,9.656064;1016.0,9.16432;1017.0,7.8232;1018.0,6.347968;1019.0,4.872736;1020.0,3.397504;1021.0,1.922272;1022.0,0.44704;1023.0,0.0;1024.0,0.0;1025.0,0.0;1026.0,0.0;1027.0,0.0;1028.0,0.0;1029.0,0.0;1030.0,0.0;1031.0,0.0;1032.0,0.0;1033.0,0.0;1034.0,0.0;1035.0,0.0;1036.0,0.0;1037.0,0.0;1038.0,0.0;1039.0,0.0;1040.0,0.0;1041.0,0.0;1042.0,0.0;1043.0,0.0;1044.0,0.0;1045.0,0.0;1046.0,0.0;1047.0,0.0;1048.0,0.0;1049.0,0.0;1050.0,0.0;1051.0,0.0;1052.0,0.0;1053.0,0.536448;1054.0,1.78816;1055.0,3.263392;1056.0,4.738624;1057.0,6.213856;1058.0,7.59968;1059.0,8.27024;1060.0,8.9408;1061.0,9.745472;1062.0,10.28192;1063.0,10.72896;1064.0,11.086592;1065.0,11.444224;1066.0,11.84656;1067.0,11.980672;1068.0,12.248896;1069.0,12.472416;1070.0,12.651232;1071.0,12.51712;1072.0,12.2936;1073.0,12.07008;1074.0,12.07008;1075.0,11.757152;1076.0,10.95248;1077.0,10.0584;1078.0,9.61136;1079.0,9.209024;1080.0,8.04672;1081.0,6.7056;1082.0,5.498592;1083.0,4.962144;1084.0,4.738624;1085.0,4.4704;1086.0,4.24688;1087.0,4.068064;1088.0,3.889248;1089.0,3.844544;1090.0,3.933952;1091.0,4.02336;1092.0,3.889248;1093.0,3.844544;1094.0,3.57632;1095.0,3.12928;1096.0,2.2352;1097.0,1.877568;1098.0,1.162304;1099.0,0.44704;1100.0,0.0;1101.0,0.044704;1102.0,0.268224;1103.0,0.715264;1104.0,1.609344;1105.0,3.084576;1106.0,4.4704;1107.0,5.722112;1108.0,6.25856;1109.0,6.48208;1110.0,7.15264;1111.0,8.091424;1112.0,8.9408;1113.0,9.38784;1114.0,9.477248;1115.0,9.521952;1116.0,9.566656;1117.0,9.700768;1118.0,10.0584;1119.0,10.28192;1120.0,10.639552;1121.0,10.95248;1122.0,11.176;1123.0,11.131296;1124.0,11.086592;1125.0,11.176;1126.0,11.354816;1127.0,11.533632;1128.0,11.62304;1129.0,11.801856;1130.0,11.891264;1131.0,12.025376;1132.0,12.07008;1133.0,12.07008;1134.0,12.07008;1135.0,12.025376;1136.0,11.980672;1137.0,11.980672;1138.0,11.84656;1139.0,11.801856;1140.0,11.62304;1141.0,11.39952;1142.0,10.997184;1143.0,10.50544;1144.0,9.61136;1145.0,8.9408;1146.0,7.8232;1147.0,7.15264;1148.0,6.25856;1149.0,4.783328;1150.0,3.308096;1151.0,1.832864;1152.0,0.357632;1153.0,0.0;1154.0,0.0;1155.0,0.0;1156.0,0.0;1157.0,0.0;1158.0,0.0;1159.0,0.0;1160.0,0.0;1161.0,0.0;1162.0,0.0;1163.0,0.0;1164.0,0.0;1165.0,0.0;1166.0,0.0;1167.0,0.0;1168.0,0.0;1169.0,0.938784;1170.0,2.414016;1171.0,3.889248;1172.0,5.36448;1173.0,6.839712;1174.0,8.314944;1175.0,9.432544;1176.0,10.28192;1177.0,10.50544;1178.0,10.28192;1179.0,10.0584;1180.0,8.9408;1181.0,7.465568;1182.0,5.990336;1183.0,4.515104;1184.0,3.039872;1185.0,1.56464;1186.0,0.089408;1187.0,0.0;1188.0,0.0;1189.0,0.0;1190.0,0.0;1191.0,0.0;1192.0,0.0;1193.0,0.0;1194.0,0.0;1195.0,0.0;1196.0,0.0;1197.0,0.089408;1198.0,0.67056;1199.0,1.56464;1200.0,2.90576;1201.0,4.380992;1202.0,5.36448;1203.0,5.766816;1204.0,5.81152;1205.0,5.632704;1206.0,5.722112;1207.0,5.856224;1208.0,5.856224;1209.0,6.25856;1210.0,6.92912;1211.0,7.59968;1212.0,8.314944;1213.0,8.806688;1214.0,9.38784;1215.0,9.61136;1216.0,9.745472;1217.0,9.745472;1218.0,9.61136;1219.0,9.477248;1220.0,9.61136;1221.0,9.745472;1222.0,9.83488;1223.0,9.790176;1224.0,9.700768;1225.0,9.61136;1226.0,9.61136;1227.0,9.566656;1228.0,8.985504;1229.0,8.71728;1230.0,8.583168;1231.0,8.761984;1232.0,8.851392;1233.0,8.9408;1234.0,8.71728;1235.0,7.8232;1236.0,6.92912;1237.0,5.81152;1238.0,4.4704;1239.0,3.57632;1240.0,2.68224;1241.0,1.78816;1242.0,1.1176;1243.0,0.312928;1244.0,0.0;1245.0,0.0;1246.0,0.0;1247.0,0.0;1248.0,0.0;1249.0,0.0;1250.0,0.0;1251.0,0.0;1252.0,0.44704;1253.0,0.44704;1254.0,0.44704;1255.0,0.44704;1256.0,0.44704;1257.0,0.715264;1258.0,1.34112;1259.0,1.78816;1260.0,2.2352;1261.0,2.816352;1262.0,3.57632;1263.0,4.4704;1264.0,4.69392;1265.0,4.24688;1266.0,3.79984;1267.0,3.397504;1268.0,3.933952;1269.0,4.91744;1270.0,6.25856;1271.0,7.59968;1272.0,8.71728;1273.0,9.38784;1274.0,9.745472;1275.0,9.924288;1276.0,10.28192;1277.0,10.550144;1278.0,10.773664;1279.0,10.95248;1280.0,10.95248;1281.0,10.72896;1282.0,10.50544;1283.0,10.50544;1284.0,10.50544;1285.0,10.50544;1286.0,10.50544;1287.0,10.50544;1288.0,10.72896;1289.0,10.773664;1290.0,10.95248;1291.0,11.041888;1292.0,11.176;1293.0,11.354816;1294.0,11.444224;1295.0,11.488928;1296.0,11.62304;1297.0,11.712448;1298.0,12.07008;1299.0,12.427712;1300.0,12.651232;1301.0,12.96416;1302.0,13.008864;1303.0,12.96416;1304.0,12.51712;1305.0,11.041888;1306.0,9.566656;1307.0,8.091424;1308.0,6.616192;1309.0,5.14096;1310.0,3.665728;1311.0,2.190496;1312.0,0.715264;1313.0,0.0;1314.0,0.0;1315.0,0.0;1316.0,0.0;1317.0,0.0;1318.0,0.0;1319.0,0.0;1320.0,0.0;1321.0,0.0;1322.0,0.0;1323.0,0.0;1324.0,0.0;1325.0,0.0;1326.0,0.0;1327.0,0.0;1328.0,0.0;1329.0,0.0;1330.0,0.0;1331.0,0.0;1332.0,0.0;1333.0,0.0;1334.0,0.0;1335.0,0.0;1336.0,0.0;1337.0,0.0;1338.0,0.67056;1339.0,2.145792;1340.0,3.621024;1341.0,5.096256;1342.0,5.900928;1343.0,6.750304;1344.0,7.510272;1345.0,8.180832;1346.0,8.71728;1347.0,9.074912;1348.0,9.521952;1349.0,9.790176;1350.0,9.879584;1351.0,10.013696;1352.0,9.83488;1353.0,9.656064;1354.0,9.432544;1355.0,9.16432;1356.0,8.9408;1357.0,8.761984;1358.0,8.27024;1359.0,7.8232;1360.0,7.37616;1361.0,6.92912;1362.0,6.25856;1363.0,4.91744;1364.0,3.57632;1365.0,2.324608;1366.0,1.1176;1367.0,0.0;1368.0,0.0;1369.0,0.0]);
        annotation (Icon(graphics={Text(
                extent={{-120,130},{100,110}},
                lineColor={0,128,0},
                textString="Urban"),
                                   Line(
                points={{-110,140},{-106,168},{-92,178},{-90,140},{-80,140},{-72,180},
                    {-64,170},{-56,192},{-44,198},{-36,140},{-28,140},{-26,184},{-18,
                    140},{-14,182},{-8,140},{-2,192},{8,186},{10,140},{20,170},{28,
                    176},{34,164},{46,172},{60,170},{64,140},{72,140},{82,172},{92,
                    140},{104,188},{110,140}},
                color={255,0,0},
                smooth=Smooth.None)}));
      end Urban_Driver;

      model FTP_Driver "Federal Test Procedure"
        extends C2M2L_Ext.Testing_Blocks.Land.Driver_Base_Land(
        profile_data=[0.0,0.0;1.0,0.0;2.0,0.0;3.0,0.0;4.0,0.0;5.0,0.0;6.0,0.0;7.0,0.0;8.0,0.0;9.0,0.0;10.0,0.0;11.0,0.0;12.0,0.0;13.0,0.0;14.0,0.0;15.0,0.0;16.0,0.0;17.0,0.0;18.0,0.0;19.0,0.0;20.0,0.0;21.0,1.34112;22.0,2.637536;23.0,3.844544;24.0,5.14096;25.0,6.392672;26.0,7.554976;27.0,7.733792;28.0,8.091424;29.0,9.253728;30.0,9.700768;31.0,10.013696;32.0,10.0584;33.0,9.879584;34.0,9.61136;35.0,9.343136;36.0,9.119616;37.0,8.851392;38.0,7.59968;39.0,6.660896;40.0,6.660896;41.0,6.795008;42.0,6.92912;43.0,7.15264;44.0,7.644384;45.0,8.538464;46.0,9.432544;47.0,10.147808;48.0,10.237216;49.0,10.147808;50.0,10.103104;51.0,9.521952;52.0,8.49376;53.0,7.644384;54.0,7.063232;55.0,7.063232;56.0,7.912608;57.0,8.851392;58.0,9.656064;59.0,10.371328;60.0,10.818368;61.0,10.997184;62.0,11.131296;63.0,11.176;64.0,10.997184;65.0,10.95248;66.0,11.041888;67.0,11.086592;68.0,11.041888;69.0,10.997184;70.0,10.997184;71.0,11.220704;72.0,11.444224;73.0,11.488928;74.0,11.354816;75.0,11.131296;76.0,11.176;77.0,11.354816;78.0,11.62304;79.0,11.62304;80.0,11.488928;81.0,11.667744;82.0,11.935968;83.0,12.2936;84.0,12.785344;85.0,13.098272;86.0,13.321792;87.0,13.455904;88.0,13.590016;89.0,13.724128;90.0,13.724128;91.0,13.63472;92.0,13.590016;93.0,13.545312;94.0,13.590016;95.0,13.768832;96.0,13.590016;97.0,13.366496;98.0,13.18768;99.0,13.321792;100.0,13.545312;101.0,13.724128;102.0,13.813536;103.0,13.85824;104.0,13.813536;105.0,13.590016;106.0,13.321792;107.0,13.366496;108.0,13.500608;109.0,13.724128;110.0,13.947648;111.0,14.215872;112.0,14.394688;113.0,14.484096;114.0,14.394688;115.0,14.171168;116.0,12.785344;117.0,11.310112;118.0,9.83488;119.0,8.359648;120.0,6.884416;121.0,5.409184;122.0,3.933952;123.0,2.45872;124.0,0.983488;125.0,0.0;126.0,0.0;127.0,0.0;128.0,0.0;129.0,0.0;130.0,0.0;131.0,0.0;132.0,0.0;133.0,0.0;134.0,0.0;135.0,0.0;136.0,0.0;137.0,0.0;138.0,0.0;139.0,0.0;140.0,0.0;141.0,0.0;142.0,0.0;143.0,0.0;144.0,0.0;145.0,0.0;146.0,0.0;147.0,0.0;148.0,0.0;149.0,0.0;150.0,0.0;151.0,0.0;152.0,0.0;153.0,0.0;154.0,0.0;155.0,0.0;156.0,0.0;157.0,0.0;158.0,0.0;159.0,0.0;160.0,0.0;161.0,0.0;162.0,0.0;163.0,0.0;164.0,1.475232;165.0,2.950464;166.0,4.425696;167.0,5.900928;168.0,7.37616;169.0,8.851392;170.0,9.924288;171.0,10.863072;172.0,11.533632;173.0,11.801856;174.0,11.488928;175.0,11.220704;176.0,11.041888;177.0,11.176;178.0,11.265408;179.0,11.354816;180.0,11.533632;181.0,12.159488;182.0,11.84656;183.0,10.72896;184.0,10.147808;185.0,8.672576;186.0,7.912608;187.0,7.689088;188.0,8.091424;189.0,8.314944;190.0,8.9408;191.0,9.924288;192.0,10.95248;193.0,12.204192;194.0,13.63472;195.0,14.97584;196.0,16.182848;197.0,16.674592;198.0,17.568672;199.0,18.10512;200.0,18.820384;201.0,19.44624;202.0,20.161504;203.0,20.56384;204.0,20.921472;205.0,21.2344;206.0,21.2344;207.0,21.144992;208.0,21.100288;209.0,21.01088;210.0,21.01088;211.0,21.01088;212.0,21.01088;213.0,21.01088;214.0,21.100288;215.0,21.189696;216.0,21.413216;217.0,21.68144;218.0,21.949664;219.0,22.12848;220.0,22.352;221.0,22.620224;222.0,22.79904;223.0,23.02256;224.0,23.335488;225.0,23.782528;226.0,24.184864;227.0,24.408384;228.0,24.542496;229.0,24.5872;230.0,24.542496;231.0,24.408384;232.0,24.408384;233.0,24.497792;234.0,24.631904;235.0,24.81072;236.0,24.900128;237.0,25.078944;238.0,25.168352;239.0,25.302464;240.0,25.347168;241.0,25.347168;242.0,25.25776;243.0,25.25776;244.0,25.25776;245.0,25.25776;246.0,25.25776;247.0,25.25776;248.0,25.213056;249.0,25.078944;250.0,24.944832;251.0,24.631904;252.0,24.408384;253.0,24.229568;254.0,24.14016;255.0,24.006048;256.0,23.961344;257.0,24.095456;258.0,24.14016;259.0,24.184864;260.0,24.184864;261.0,24.050752;262.0,23.871936;263.0,23.69312;264.0,23.514304;265.0,23.290784;266.0,23.424896;267.0,23.24608;268.0,23.201376;269.0,23.111968;270.0,23.02256;271.0,23.067264;272.0,23.156672;273.0,23.290784;274.0,23.4696;275.0,23.69312;276.0,23.91664;277.0,24.14016;278.0,24.542496;279.0,24.766016;280.0,24.855424;281.0,25.03424;282.0,25.03424;283.0,24.944832;284.0,24.676608;285.0,24.36368;286.0,23.961344;287.0,23.4696;288.0,23.02256;289.0,23.02256;290.0,23.02256;291.0,22.843744;292.0,22.396704;293.0,22.352;294.0,22.396704;295.0,22.352;296.0,22.173184;297.0,22.12848;298.0,22.12848;299.0,22.12848;300.0,21.949664;301.0,21.726144;302.0,21.502624;303.0,21.100288;304.0,20.608544;305.0,20.1168;306.0,19.580352;307.0,19.043904;308.0,18.55216;309.0,18.015712;310.0,17.21104;311.0,16.54048;312.0,15.735808;313.0,15.109952;314.0,14.5288;315.0,14.08176;316.0,13.679424;317.0,13.63472;318.0,13.4112;319.0,12.96416;320.0,12.2936;321.0,11.086592;322.0,9.61136;323.0,8.985504;324.0,8.538464;325.0,8.27024;326.0,7.59968;327.0,6.92912;328.0,5.588;329.0,4.828032;330.0,3.57632;331.0,2.101088;332.0,0.625856;333.0,0.0;334.0,0.0;335.0,0.0;336.0,0.0;337.0,0.0;338.0,0.0;339.0,0.0;340.0,0.0;341.0,0.0;342.0,0.0;343.0,0.0;344.0,0.0;345.0,0.0;346.0,0.0;347.0,0.44704;348.0,1.922272;349.0,3.397504;350.0,4.872736;351.0,6.347968;352.0,7.733792;353.0,8.9408;354.0,10.0584;355.0,10.594848;356.0,11.265408;357.0,11.891264;358.0,12.561824;359.0,13.4112;360.0,13.768832;361.0,14.126464;362.0,14.349984;363.0,14.662912;364.0,15.020544;365.0,15.42288;366.0,15.467584;367.0,15.601696;368.0,15.556992;369.0,15.42288;370.0,15.512288;371.0,15.86992;372.0,16.09344;373.0,16.09344;374.0,16.09344;375.0,16.09344;376.0,16.09344;377.0,16.09344;378.0,16.138144;379.0,16.272256;380.0,16.31696;381.0,16.272256;382.0,16.09344;383.0,15.691104;384.0,15.244064;385.0,14.97584;386.0,14.037056;387.0,12.96416;388.0,11.488928;389.0,10.28192;390.0,9.074912;391.0,7.8232;392.0,6.48208;393.0,5.36448;394.0,3.889248;395.0,2.414016;396.0,0.938784;397.0,0.0;398.0,0.0;399.0,0.0;400.0,0.0;401.0,0.0;402.0,0.0;403.0,1.162304;404.0,2.637536;405.0,4.112768;406.0,5.588;407.0,7.063232;408.0,8.538464;409.0,10.013696;410.0,11.176;411.0,11.444224;412.0,12.2936;413.0,12.96416;414.0,13.4112;415.0,13.455904;416.0,13.4112;417.0,13.277088;418.0,13.098272;419.0,12.874752;420.0,12.51712;421.0,11.176;422.0,9.700768;423.0,8.225536;424.0,6.750304;425.0,5.275072;426.0,3.79984;427.0,2.324608;428.0,0.849376;429.0,0.0;430.0,0.0;431.0,0.0;432.0,0.0;433.0,0.0;434.0,0.0;435.0,0.0;436.0,0.0;437.0,0.0;438.0,0.0;439.0,0.0;440.0,0.0;441.0,0.0;442.0,0.0;443.0,0.0;444.0,0.0;445.0,0.0;446.0,0.0;447.0,0.0;448.0,1.475232;449.0,2.950464;450.0,4.425696;451.0,5.900928;452.0,7.37616;453.0,8.851392;454.0,10.326624;455.0,11.801856;456.0,12.427712;457.0,13.008864;458.0,14.08176;459.0,14.75232;460.0,15.020544;461.0,15.556992;462.0,15.691104;463.0,15.914624;464.0,16.138144;465.0,16.09344;466.0,16.138144;467.0,16.182848;468.0,16.09344;469.0,15.959328;470.0,16.09344;471.0,16.09344;472.0,15.914624;473.0,15.86992;474.0,15.825216;475.0,15.735808;476.0,15.735808;477.0,15.735808;478.0,15.735808;479.0,15.735808;480.0,15.735808;481.0,15.6464;482.0,15.691104;483.0,15.735808;484.0,15.86992;485.0,15.735808;486.0,15.6464;487.0,15.6464;488.0,15.6464;489.0,15.556992;490.0,15.467584;491.0,15.42288;492.0,14.97584;493.0,14.30528;494.0,13.455904;495.0,12.51712;496.0,11.39952;497.0,10.0584;498.0,8.851392;499.0,7.37616;500.0,5.900928;501.0,4.604512;502.0,3.218688;503.0,1.78816;504.0,0.44704;505.0,0.0;506.0,0.0;507.0,0.0;508.0,0.0;509.0,0.0;510.0,0.0;511.0,0.536448;512.0,1.56464;513.0,2.45872;514.0,2.90576;515.0,3.79984;516.0,4.291584;517.0,4.69392;518.0,5.319776;519.0,6.25856;520.0,7.15264;521.0,7.912608;522.0,8.49376;523.0,8.985504;524.0,9.38784;525.0,9.83488;526.0,10.28192;527.0,10.639552;528.0,10.95248;529.0,11.131296;530.0,11.176;531.0,11.176;532.0,11.176;533.0,11.176;534.0,11.176;535.0,11.176;536.0,11.444224;537.0,11.533632;538.0,11.62304;539.0,11.444224;540.0,11.265408;541.0,11.176;542.0,11.176;543.0,11.176;544.0,10.907776;545.0,10.326624;546.0,8.851392;547.0,7.37616;548.0,5.900928;549.0,4.425696;550.0,2.950464;551.0,1.475232;552.0,0.0;553.0,0.0;554.0,0.0;555.0,0.0;556.0,0.0;557.0,0.0;558.0,0.0;559.0,0.0;560.0,0.0;561.0,0.0;562.0,0.0;563.0,0.0;564.0,0.0;565.0,0.0;566.0,0.0;567.0,0.0;568.0,0.0;569.0,1.475232;570.0,2.950464;571.0,4.425696;572.0,5.81152;573.0,6.526784;574.0,7.15264;575.0,7.59968;576.0,7.59968;577.0,7.59968;578.0,7.8232;579.0,7.912608;580.0,7.912608;581.0,7.8232;582.0,7.59968;583.0,7.554976;584.0,7.420864;585.0,7.59968;586.0,7.644384;587.0,7.59968;588.0,7.420864;589.0,7.37616;590.0,7.37616;591.0,7.420864;592.0,7.59968;593.0,7.867904;594.0,8.27024;595.0,8.583168;596.0,9.030208;597.0,9.38784;598.0,9.432544;599.0,9.477248;600.0,9.656064;601.0,9.83488;602.0,10.013696;603.0,10.0584;604.0,10.0584;605.0,10.0584;606.0,10.147808;607.0,10.594848;608.0,11.220704;609.0,11.62304;610.0,11.84656;611.0,12.07008;612.0,11.667744;613.0,10.192512;614.0,8.71728;615.0,7.242048;616.0,5.766816;617.0,4.291584;618.0,2.816352;619.0,1.34112;620.0,0.0;621.0,0.0;622.0,0.0;623.0,0.0;624.0,0.0;625.0,0.0;626.0,0.0;627.0,0.0;628.0,0.0;629.0,0.0;630.0,0.0;631.0,0.0;632.0,0.0;633.0,0.0;634.0,0.0;635.0,0.0;636.0,0.0;637.0,0.0;638.0,0.0;639.0,0.0;640.0,0.0;641.0,0.0;642.0,0.0;643.0,0.0;644.0,0.0;645.0,0.0;646.0,0.89408;647.0,2.01168;648.0,3.486912;649.0,4.559808;650.0,5.588;651.0,6.25856;652.0,6.839712;653.0,7.8232;654.0,8.761984;655.0,9.38784;656.0,9.924288;657.0,10.416032;658.0,10.95248;659.0,11.310112;660.0,11.444224;661.0,11.62304;662.0,11.667744;663.0,11.712448;664.0,11.712448;665.0,11.801856;666.0,11.84656;667.0,11.84656;668.0,11.62304;669.0,11.39952;670.0,10.550144;671.0,9.566656;672.0,8.27024;673.0,7.331456;674.0,6.48208;675.0,5.185664;676.0,3.889248;677.0,2.592832;678.0,1.56464;679.0,0.89408;680.0,0.0;681.0,0.0;682.0,0.0;683.0,0.0;684.0,0.0;685.0,0.0;686.0,0.0;687.0,0.0;688.0,0.0;689.0,0.0;690.0,0.0;691.0,0.0;692.0,0.0;693.0,0.0;694.0,0.625856;695.0,1.475232;696.0,1.966976;697.0,2.90576;698.0,4.112768;699.0,5.051552;700.0,6.03504;701.0,6.526784;702.0,7.331456;703.0,7.465568;704.0,7.37616;705.0,7.37616;706.0,8.136128;707.0,8.583168;708.0,8.985504;709.0,9.61136;710.0,10.0584;711.0,10.0584;712.0,9.879584;713.0,10.147808;714.0,10.416032;715.0,10.50544;716.0,10.0584;717.0,9.656064;718.0,9.16432;719.0,8.04672;720.0,6.7056;721.0,5.36448;722.0,4.02336;723.0,2.771648;724.0,2.01168;725.0,1.34112;726.0,0.938784;727.0,0.22352;728.0,0.22352;729.0,1.430528;730.0,2.90576;731.0,4.291584;732.0,5.588;733.0,6.25856;734.0,7.15264;735.0,8.04672;736.0,8.761984;737.0,9.61136;738.0,10.326624;739.0,10.95248;740.0,11.39952;741.0,11.84656;742.0,12.114784;743.0,12.338304;744.0,12.472416;745.0,12.651232;746.0,12.785344;747.0,12.785344;748.0,12.651232;749.0,12.606528;750.0,12.51712;751.0,12.2936;752.0,11.980672;753.0,11.39952;754.0,10.50544;755.0,9.61136;756.0,8.49376;757.0,7.37616;758.0,6.660896;759.0,5.588;760.0,4.202176;761.0,2.771648;762.0,1.34112;763.0,0.67056;764.0,0.67056;765.0,0.22352;766.0,0.0;767.0,1.34112;768.0,2.816352;769.0,4.291584;770.0,5.766816;771.0,7.063232;772.0,7.8232;773.0,8.225536;774.0,8.71728;775.0,9.253728;776.0,9.83488;777.0,10.371328;778.0,11.176;779.0,11.84656;780.0,12.2936;781.0,12.51712;782.0,12.651232;783.0,12.919456;784.0,12.919456;785.0,12.919456;786.0,12.874752;787.0,12.74064;788.0,12.651232;789.0,12.651232;790.0,12.651232;791.0,12.606528;792.0,12.338304;793.0,12.2936;794.0,12.2936;795.0,12.2936;796.0,12.2936;797.0,12.2936;798.0,12.2936;799.0,12.338304;800.0,12.51712;801.0,12.74064;802.0,13.4112;803.0,13.85824;804.0,14.30528;805.0,14.75232;806.0,14.75232;807.0,15.020544;808.0,15.19936;809.0,15.333472;810.0,15.288768;811.0,15.19936;812.0,15.19936;813.0,15.154656;814.0,15.020544;815.0,14.797024;816.0,14.75232;817.0,14.5288;818.0,14.30528;819.0,14.260576;820.0,14.126464;821.0,14.08176;822.0,13.679424;823.0,13.4112;824.0,13.366496;825.0,13.366496;826.0,13.366496;827.0,13.366496;828.0,13.232384;829.0,13.18768;830.0,13.18768;831.0,13.098272;832.0,12.919456;833.0,12.606528;834.0,12.383008;835.0,12.07008;836.0,11.39952;837.0,10.594848;838.0,9.83488;839.0,9.16432;840.0,8.583168;841.0,8.583168;842.0,8.985504;843.0,9.343136;844.0,9.566656;845.0,9.83488;846.0,10.103104;847.0,10.371328;848.0,10.72896;849.0,11.176;850.0,11.62304;851.0,11.891264;852.0,11.891264;853.0,11.980672;854.0,12.07008;855.0,12.159488;856.0,12.427712;857.0,12.561824;858.0,12.874752;859.0,12.919456;860.0,12.96416;861.0,13.008864;862.0,12.96416;863.0,12.561824;864.0,12.2936;865.0,12.07008;866.0,11.533632;867.0,11.176;868.0,10.95248;869.0,11.086592;870.0,11.220704;871.0,11.39952;872.0,11.488928;873.0,11.712448;874.0,12.025376;875.0,12.2936;876.0,12.427712;877.0,12.695936;878.0,12.96416;879.0,13.053568;880.0,13.008864;881.0,12.96416;882.0,12.919456;883.0,12.74064;884.0,12.561824;885.0,12.51712;886.0,12.51712;887.0,12.338304;888.0,12.159488;889.0,11.891264;890.0,12.07008;891.0,12.2936;892.0,12.427712;893.0,12.51712;894.0,12.427712;895.0,12.51712;896.0,12.51712;897.0,12.51712;898.0,12.383008;899.0,12.248896;900.0,12.025376;901.0,11.891264;902.0,11.84656;903.0,11.84656;904.0,11.84656;905.0,11.757152;906.0,11.712448;907.0,11.712448;908.0,11.578336;909.0,11.444224;910.0,11.444224;911.0,11.578336;912.0,11.533632;913.0,11.39952;914.0,10.997184;915.0,10.50544;916.0,9.924288;917.0,9.656064;918.0,9.656064;919.0,9.700768;920.0,10.103104;921.0,10.460736;922.0,10.72896;923.0,10.818368;924.0,10.907776;925.0,11.131296;926.0,11.220704;927.0,11.265408;928.0,11.310112;929.0,11.39952;930.0,11.265408;931.0,11.176;932.0,11.176;933.0,11.176;934.0,11.041888;935.0,10.95248;936.0,10.863072;937.0,10.863072;938.0,10.95248;939.0,11.176;940.0,11.176;941.0,10.997184;942.0,10.997184;943.0,10.773664;944.0,10.95248;945.0,11.220704;946.0,11.444224;947.0,11.220704;948.0,10.72896;949.0,9.83488;950.0,8.985504;951.0,7.554976;952.0,6.079744;953.0,4.604512;954.0,3.12928;955.0,1.654048;956.0,0.178816;957.0,0.0;958.0,0.0;959.0,0.0;960.0,0.89408;961.0,2.369312;962.0,3.844544;963.0,5.319776;964.0,6.795008;965.0,7.8232;966.0,8.314944;967.0,8.9408;968.0,9.432544;969.0,9.83488;970.0,10.28192;971.0,10.95248;972.0,11.757152;973.0,12.2936;974.0,12.561824;975.0,12.695936;976.0,12.74064;977.0,12.74064;978.0,12.74064;979.0,12.383008;980.0,12.2936;981.0,12.159488;982.0,11.980672;983.0,11.84656;984.0,11.62304;985.0,11.488928;986.0,11.265408;987.0,10.72896;988.0,9.83488;989.0,9.61136;990.0,9.61136;991.0,9.745472;992.0,10.0584;993.0,10.28192;994.0,10.192512;995.0,10.192512;996.0,10.28192;997.0,10.147808;998.0,10.147808;999.0,10.147808;1000.0,10.50544;1001.0,10.72896;1002.0,10.997184;1003.0,11.086592;1004.0,11.220704;1005.0,11.39952;1006.0,11.444224;1007.0,11.39952;1008.0,11.176;1009.0,10.773664;1010.0,10.594848;1011.0,10.371328;1012.0,10.237216;1013.0,10.0584;1014.0,9.83488;1015.0,9.656064;1016.0,9.16432;1017.0,7.8232;1018.0,6.347968;1019.0,4.872736;1020.0,3.397504;1021.0,1.922272;1022.0,0.44704;1023.0,0.0;1024.0,0.0;1025.0,0.0;1026.0,0.0;1027.0,0.0;1028.0,0.0;1029.0,0.0;1030.0,0.0;1031.0,0.0;1032.0,0.0;1033.0,0.0;1034.0,0.0;1035.0,0.0;1036.0,0.0;1037.0,0.0;1038.0,0.0;1039.0,0.0;1040.0,0.0;1041.0,0.0;1042.0,0.0;1043.0,0.0;1044.0,0.0;1045.0,0.0;1046.0,0.0;1047.0,0.0;1048.0,0.0;1049.0,0.0;1050.0,0.0;1051.0,0.0;1052.0,0.0;1053.0,0.536448;1054.0,1.78816;1055.0,3.263392;1056.0,4.738624;1057.0,6.213856;1058.0,7.59968;1059.0,8.27024;1060.0,8.9408;1061.0,9.745472;1062.0,10.28192;1063.0,10.72896;1064.0,11.086592;1065.0,11.444224;1066.0,11.84656;1067.0,11.980672;1068.0,12.248896;1069.0,12.472416;1070.0,12.651232;1071.0,12.51712;1072.0,12.2936;1073.0,12.07008;1074.0,12.07008;1075.0,11.757152;1076.0,10.95248;1077.0,10.0584;1078.0,9.61136;1079.0,9.209024;1080.0,8.04672;1081.0,6.7056;1082.0,5.498592;1083.0,4.962144;1084.0,4.738624;1085.0,4.4704;1086.0,4.24688;1087.0,4.068064;1088.0,3.889248;1089.0,3.844544;1090.0,3.933952;1091.0,4.02336;1092.0,3.889248;1093.0,3.844544;1094.0,3.57632;1095.0,3.12928;1096.0,2.2352;1097.0,1.877568;1098.0,1.162304;1099.0,0.44704;1100.0,0.0;1101.0,0.044704;1102.0,0.268224;1103.0,0.715264;1104.0,1.609344;1105.0,3.084576;1106.0,4.4704;1107.0,5.722112;1108.0,6.25856;1109.0,6.48208;1110.0,7.15264;1111.0,8.091424;1112.0,8.9408;1113.0,9.38784;1114.0,9.477248;1115.0,9.521952;1116.0,9.566656;1117.0,9.700768;1118.0,10.0584;1119.0,10.28192;1120.0,10.639552;1121.0,10.95248;1122.0,11.176;1123.0,11.131296;1124.0,11.086592;1125.0,11.176;1126.0,11.354816;1127.0,11.533632;1128.0,11.62304;1129.0,11.801856;1130.0,11.891264;1131.0,12.025376;1132.0,12.07008;1133.0,12.07008;1134.0,12.07008;1135.0,12.025376;1136.0,11.980672;1137.0,11.980672;1138.0,11.84656;1139.0,11.801856;1140.0,11.62304;1141.0,11.39952;1142.0,10.997184;1143.0,10.50544;1144.0,9.61136;1145.0,8.9408;1146.0,7.8232;1147.0,7.15264;1148.0,6.25856;1149.0,4.783328;1150.0,3.308096;1151.0,1.832864;1152.0,0.357632;1153.0,0.0;1154.0,0.0;1155.0,0.0;1156.0,0.0;1157.0,0.0;1158.0,0.0;1159.0,0.0;1160.0,0.0;1161.0,0.0;1162.0,0.0;1163.0,0.0;1164.0,0.0;1165.0,0.0;1166.0,0.0;1167.0,0.0;1168.0,0.0;1169.0,0.938784;1170.0,2.414016;1171.0,3.889248;1172.0,5.36448;1173.0,6.839712;1174.0,8.314944;1175.0,9.432544;1176.0,10.28192;1177.0,10.50544;1178.0,10.28192;1179.0,10.0584;1180.0,8.9408;1181.0,7.465568;1182.0,5.990336;1183.0,4.515104;1184.0,3.039872;1185.0,1.56464;1186.0,0.089408;1187.0,0.0;1188.0,0.0;1189.0,0.0;1190.0,0.0;1191.0,0.0;1192.0,0.0;1193.0,0.0;1194.0,0.0;1195.0,0.0;1196.0,0.0;1197.0,0.089408;1198.0,0.67056;1199.0,1.56464;1200.0,2.90576;1201.0,4.380992;1202.0,5.36448;1203.0,5.766816;1204.0,5.81152;1205.0,5.632704;1206.0,5.722112;1207.0,5.856224;1208.0,5.856224;1209.0,6.25856;1210.0,6.92912;1211.0,7.59968;1212.0,8.314944;1213.0,8.806688;1214.0,9.38784;1215.0,9.61136;1216.0,9.745472;1217.0,9.745472;1218.0,9.61136;1219.0,9.477248;1220.0,9.61136;1221.0,9.745472;1222.0,9.83488;1223.0,9.790176;1224.0,9.700768;1225.0,9.61136;1226.0,9.61136;1227.0,9.566656;1228.0,8.985504;1229.0,8.71728;1230.0,8.583168;1231.0,8.761984;1232.0,8.851392;1233.0,8.9408;1234.0,8.71728;1235.0,7.8232;1236.0,6.92912;1237.0,5.81152;1238.0,4.4704;1239.0,3.57632;1240.0,2.68224;1241.0,1.78816;1242.0,1.1176;1243.0,0.312928;1244.0,0.0;1245.0,0.0;1246.0,0.0;1247.0,0.0;1248.0,0.0;1249.0,0.0;1250.0,0.0;1251.0,0.0;1252.0,0.44704;1253.0,0.44704;1254.0,0.44704;1255.0,0.44704;1256.0,0.44704;1257.0,0.715264;1258.0,1.34112;1259.0,1.78816;1260.0,2.2352;1261.0,2.816352;1262.0,3.57632;1263.0,4.4704;1264.0,4.69392;1265.0,4.24688;1266.0,3.79984;1267.0,3.397504;1268.0,3.933952;1269.0,4.91744;1270.0,6.25856;1271.0,7.59968;1272.0,8.71728;1273.0,9.38784;1274.0,9.745472;1275.0,9.924288;1276.0,10.28192;1277.0,10.550144;1278.0,10.773664;1279.0,10.95248;1280.0,10.95248;1281.0,10.72896;1282.0,10.50544;1283.0,10.50544;1284.0,10.50544;1285.0,10.50544;1286.0,10.50544;1287.0,10.50544;1288.0,10.72896;1289.0,10.773664;1290.0,10.95248;1291.0,11.041888;1292.0,11.176;1293.0,11.354816;1294.0,11.444224;1295.0,11.488928;1296.0,11.62304;1297.0,11.712448;1298.0,12.07008;1299.0,12.427712;1300.0,12.651232;1301.0,12.96416;1302.0,13.008864;1303.0,12.96416;1304.0,12.51712;1305.0,11.041888;1306.0,9.566656;1307.0,8.091424;1308.0,6.616192;1309.0,5.14096;1310.0,3.665728;1311.0,2.190496;1312.0,0.715264;1313.0,0.0;1314.0,0.0;1315.0,0.0;1316.0,0.0;1317.0,0.0;1318.0,0.0;1319.0,0.0;1320.0,0.0;1321.0,0.0;1322.0,0.0;1323.0,0.0;1324.0,0.0;1325.0,0.0;1326.0,0.0;1327.0,0.0;1328.0,0.0;1329.0,0.0;1330.0,0.0;1331.0,0.0;1332.0,0.0;1333.0,0.0;1334.0,0.0;1335.0,0.0;1336.0,0.0;1337.0,0.0;1338.0,0.67056;1339.0,2.145792;1340.0,3.621024;1341.0,5.096256;1342.0,5.900928;1343.0,6.750304;1344.0,7.510272;1345.0,8.180832;1346.0,8.71728;1347.0,9.074912;1348.0,9.521952;1349.0,9.790176;1350.0,9.879584;1351.0,10.013696;1352.0,9.83488;1353.0,9.656064;1354.0,9.432544;1355.0,9.16432;1356.0,8.9408;1357.0,8.761984;1358.0,8.27024;1359.0,7.8232;1360.0,7.37616;1361.0,6.92912;1362.0,6.25856;1363.0,4.91744;1364.0,3.57632;1365.0,2.324608;1366.0,1.1176;1367.0,0.0;1368.0,0.0;1369.0,0.0;1370.0,0.0;1371.0,0.0;1372.0,0.0;1373.0,0.0;1374.0,0.0;1375.0,0.0;1376.0,0.0;1377.0,0.0;1378.0,0.0;1379.0,0.0;1380.0,0.0;1381.0,0.0;1382.0,0.0;1383.0,0.0;1384.0,0.0;1385.0,0.0;1386.0,0.0;1387.0,0.0;1388.0,0.0;1389.0,0.0;1390.0,1.34112;1391.0,2.637536;1392.0,3.844544;1393.0,5.14096;1394.0,6.392672;1395.0,7.554976;1396.0,7.733792;1397.0,8.091424;1398.0,9.253728;1399.0,9.700768;1400.0,10.013696;1401.0,10.0584;1402.0,9.879584;1403.0,9.61136;1404.0,9.343136;1405.0,9.119616;1406.0,8.851392;1407.0,7.59968;1408.0,6.660896;1409.0,6.660896;1410.0,6.795008;1411.0,6.92912;1412.0,7.15264;1413.0,7.644384;1414.0,8.538464;1415.0,9.432544;1416.0,10.147808;1417.0,10.237216;1418.0,10.147808;1419.0,10.103104;1420.0,9.521952;1421.0,8.49376;1422.0,7.644384;1423.0,7.063232;1424.0,7.063232;1425.0,7.912608;1426.0,8.851392;1427.0,9.656064;1428.0,10.371328;1429.0,10.818368;1430.0,10.997184;1431.0,11.131296;1432.0,11.176;1433.0,10.997184;1434.0,10.95248;1435.0,11.041888;1436.0,11.086592;1437.0,11.041888;1438.0,10.997184;1439.0,10.997184;1440.0,11.220704;1441.0,11.444224;1442.0,11.488928;1443.0,11.354816;1444.0,11.131296;1445.0,11.176;1446.0,11.354816;1447.0,11.62304;1448.0,11.62304;1449.0,11.488928;1450.0,11.667744;1451.0,11.935968;1452.0,12.2936;1453.0,12.785344;1454.0,13.098272;1455.0,13.321792;1456.0,13.455904;1457.0,13.590016;1458.0,13.724128;1459.0,13.724128;1460.0,13.63472;1461.0,13.590016;1462.0,13.545312;1463.0,13.590016;1464.0,13.768832;1465.0,13.590016;1466.0,13.366496;1467.0,13.18768;1468.0,13.321792;1469.0,13.545312;1470.0,13.724128;1471.0,13.813536;1472.0,13.85824;1473.0,13.813536;1474.0,13.590016;1475.0,13.321792;1476.0,13.366496;1477.0,13.500608;1478.0,13.724128;1479.0,13.947648;1480.0,14.215872;1481.0,14.394688;1482.0,14.484096;1483.0,14.394688;1484.0,14.171168;1485.0,12.785344;1486.0,11.310112;1487.0,9.83488;1488.0,8.359648;1489.0,6.884416;1490.0,5.409184;1491.0,3.933952;1492.0,2.45872;1493.0,0.983488;1494.0,0.0;1495.0,0.0;1496.0,0.0;1497.0,0.0;1498.0,0.0;1499.0,0.0;1500.0,0.0;1501.0,0.0;1502.0,0.0;1503.0,0.0;1504.0,0.0;1505.0,0.0;1506.0,0.0;1507.0,0.0;1508.0,0.0;1509.0,0.0;1510.0,0.0;1511.0,0.0;1512.0,0.0;1513.0,0.0;1514.0,0.0;1515.0,0.0;1516.0,0.0;1517.0,0.0;1518.0,0.0;1519.0,0.0;1520.0,0.0;1521.0,0.0;1522.0,0.0;1523.0,0.0;1524.0,0.0;1525.0,0.0;1526.0,0.0;1527.0,0.0;1528.0,0.0;1529.0,0.0;1530.0,0.0;1531.0,0.0;1532.0,0.0;1533.0,1.475232;1534.0,2.950464;1535.0,4.425696;1536.0,5.900928;1537.0,7.37616;1538.0,8.851392;1539.0,9.924288;1540.0,10.863072;1541.0,11.533632;1542.0,11.801856;1543.0,11.488928;1544.0,11.220704;1545.0,11.041888;1546.0,11.176;1547.0,11.265408;1548.0,11.354816;1549.0,11.533632;1550.0,12.159488;1551.0,11.84656;1552.0,10.72896;1553.0,10.147808;1554.0,8.672576;1555.0,7.912608;1556.0,7.689088;1557.0,8.091424;1558.0,8.314944;1559.0,8.9408;1560.0,9.924288;1561.0,10.95248;1562.0,12.204192;1563.0,13.63472;1564.0,14.97584;1565.0,16.182848;1566.0,16.674592;1567.0,17.568672;1568.0,18.10512;1569.0,18.820384;1570.0,19.44624;1571.0,20.161504;1572.0,20.56384;1573.0,20.921472;1574.0,21.2344;1575.0,21.2344;1576.0,21.144992;1577.0,21.100288;1578.0,21.01088;1579.0,21.01088;1580.0,21.01088;1581.0,21.01088;1582.0,21.01088;1583.0,21.100288;1584.0,21.189696;1585.0,21.413216;1586.0,21.68144;1587.0,21.949664;1588.0,22.12848;1589.0,22.352;1590.0,22.620224;1591.0,22.79904;1592.0,23.02256;1593.0,23.335488;1594.0,23.782528;1595.0,24.184864;1596.0,24.408384;1597.0,24.542496;1598.0,24.5872;1599.0,24.542496;1600.0,24.408384;1601.0,24.408384;1602.0,24.497792;1603.0,24.631904;1604.0,24.81072;1605.0,24.900128;1606.0,25.078944;1607.0,25.168352;1608.0,25.302464;1609.0,25.347168;1610.0,25.347168;1611.0,25.25776;1612.0,25.25776;1613.0,25.25776;1614.0,25.25776;1615.0,25.25776;1616.0,25.25776;1617.0,25.213056;1618.0,25.078944;1619.0,24.944832;1620.0,24.631904;1621.0,24.408384;1622.0,24.229568;1623.0,24.14016;1624.0,24.006048;1625.0,23.961344;1626.0,24.095456;1627.0,24.14016;1628.0,24.184864;1629.0,24.184864;1630.0,24.050752;1631.0,23.871936;1632.0,23.69312;1633.0,23.514304;1634.0,23.290784;1635.0,23.424896;1636.0,23.24608;1637.0,23.201376;1638.0,23.111968;1639.0,23.02256;1640.0,23.067264;1641.0,23.156672;1642.0,23.290784;1643.0,23.4696;1644.0,23.69312;1645.0,23.91664;1646.0,24.14016;1647.0,24.542496;1648.0,24.766016;1649.0,24.855424;1650.0,25.03424;1651.0,25.03424;1652.0,24.944832;1653.0,24.676608;1654.0,24.36368;1655.0,23.961344;1656.0,23.4696;1657.0,23.02256;1658.0,23.02256;1659.0,23.02256;1660.0,22.843744;1661.0,22.396704;1662.0,22.352;1663.0,22.396704;1664.0,22.352;1665.0,22.173184;1666.0,22.12848;1667.0,22.12848;1668.0,22.12848;1669.0,21.949664;1670.0,21.726144;1671.0,21.502624;1672.0,21.100288;1673.0,20.608544;1674.0,20.1168;1675.0,19.580352;1676.0,19.043904;1677.0,18.55216;1678.0,18.015712;1679.0,17.21104;1680.0,16.54048;1681.0,15.735808;1682.0,15.109952;1683.0,14.5288;1684.0,14.08176;1685.0,13.679424;1686.0,13.63472;1687.0,13.4112;1688.0,12.96416;1689.0,12.2936;1690.0,11.086592;1691.0,9.61136;1692.0,8.985504;1693.0,8.538464;1694.0,8.27024;1695.0,7.59968;1696.0,6.92912;1697.0,5.588;1698.0,4.828032;1699.0,3.57632;1700.0,2.101088;1701.0,0.625856;1702.0,0.0;1703.0,0.0;1704.0,0.0;1705.0,0.0;1706.0,0.0;1707.0,0.0;1708.0,0.0;1709.0,0.0;1710.0,0.0;1711.0,0.0;1712.0,0.0;1713.0,0.0;1714.0,0.0;1715.0,0.0;1716.0,0.44704;1717.0,1.922272;1718.0,3.397504;1719.0,4.872736;1720.0,6.347968;1721.0,7.733792;1722.0,8.9408;1723.0,10.0584;1724.0,10.594848;1725.0,11.265408;1726.0,11.891264;1727.0,12.561824;1728.0,13.4112;1729.0,13.768832;1730.0,14.126464;1731.0,14.349984;1732.0,14.662912;1733.0,15.020544;1734.0,15.42288;1735.0,15.467584;1736.0,15.601696;1737.0,15.556992;1738.0,15.42288;1739.0,15.512288;1740.0,15.86992;1741.0,16.09344;1742.0,16.09344;1743.0,16.09344;1744.0,16.09344;1745.0,16.09344;1746.0,16.09344;1747.0,16.138144;1748.0,16.272256;1749.0,16.31696;1750.0,16.272256;1751.0,16.09344;1752.0,15.691104;1753.0,15.244064;1754.0,14.97584;1755.0,14.037056;1756.0,12.96416;1757.0,11.488928;1758.0,10.28192;1759.0,9.074912;1760.0,7.8232;1761.0,6.48208;1762.0,5.36448;1763.0,3.889248;1764.0,2.414016;1765.0,0.938784;1766.0,0.0;1767.0,0.0;1768.0,0.0;1769.0,0.0;1770.0,0.0;1771.0,0.0;1772.0,1.162304;1773.0,2.637536;1774.0,4.112768;1775.0,5.588;1776.0,7.063232;1777.0,8.538464;1778.0,10.013696;1779.0,11.176;1780.0,11.444224;1781.0,12.2936;1782.0,12.96416;1783.0,13.4112;1784.0,13.455904;1785.0,13.4112;1786.0,13.277088;1787.0,13.098272;1788.0,12.874752;1789.0,12.51712;1790.0,11.176;1791.0,9.700768;1792.0,8.225536;1793.0,6.750304;1794.0,5.275072;1795.0,3.79984;1796.0,2.324608;1797.0,0.849376;1798.0,0.0;1799.0,0.0;1800.0,0.0;1801.0,0.0;1802.0,0.0;1803.0,0.0;1804.0,0.0;1805.0,0.0;1806.0,0.0;1807.0,0.0;1808.0,0.0;1809.0,0.0;1810.0,0.0;1811.0,0.0;1812.0,0.0;1813.0,0.0;1814.0,0.0;1815.0,0.0;1816.0,0.0;1817.0,1.475232;1818.0,2.950464;1819.0,4.425696;1820.0,5.900928;1821.0,7.37616;1822.0,8.851392;1823.0,10.326624;1824.0,11.801856;1825.0,12.427712;1826.0,13.008864;1827.0,14.08176;1828.0,14.75232;1829.0,15.020544;1830.0,15.556992;1831.0,15.691104;1832.0,15.914624;1833.0,16.138144;1834.0,16.09344;1835.0,16.138144;1836.0,16.182848;1837.0,16.09344;1838.0,15.959328;1839.0,16.09344;1840.0,16.09344;1841.0,15.914624;1842.0,15.86992;1843.0,15.825216;1844.0,15.735808;1845.0,15.735808;1846.0,15.735808;1847.0,15.735808;1848.0,15.735808;1849.0,15.735808;1850.0,15.6464;1851.0,15.691104;1852.0,15.735808;1853.0,15.86992;1854.0,15.735808;1855.0,15.6464;1856.0,15.6464;1857.0,15.6464;1858.0,15.556992;1859.0,15.467584;1860.0,15.42288;1861.0,14.97584;1862.0,14.30528;1863.0,13.455904;1864.0,12.51712;1865.0,11.39952;1866.0,10.0584;1867.0,8.851392;1868.0,7.37616;1869.0,5.900928;1870.0,4.604512;1871.0,3.218688;1872.0,1.78816;1873.0,0.44704;1874.0,0.0;1875.0,0.0;1900.0,0.0]);
        annotation (Icon(graphics={Text(
                extent={{-120,130},{100,110}},
                lineColor={0,128,0},
                textString="FTP"), Line(
                points={{-130,140},{-126,168},{-118,178},{-114,140},{-104,140},{-102,
                    180},{-92,170},{-84,192},{-74,198},{-68,140},{-60,140},{-56,184},
                    {-52,140},{-44,182},{-40,140},{-32,192},{-24,184},{-20,140},{-12,
                    170},{-4,176},{0,164},{8,172},{16,170},{20,140},{28,140},{32,172},
                    {36,140},{44,186},{48,140},{56,166},{64,176},{66,140},{76,140},{
                    80,180},{88,168},{96,190},{104,196},{110,140}},
                color={255,0,0},
                smooth=Smooth.None)}));
      end FTP_Driver;
      annotation (Icon(graphics={
          Line(
            points={{-70,-58},{-40,42}},
            color={0,0,0},
            smooth=Smooth.None),
          Line(
            points={{50,-58},{18,42}},
            color={0,0,0},
            smooth=Smooth.None),
          Line(
            points={{-10,-58},{-10,-38}},
            color={0,0,0},
            smooth=Smooth.None),
          Line(
            points={{-10,-18},{-10,2}},
            color={0,0,0},
            smooth=Smooth.None),
          Line(
            points={{-10,22},{-10,42}},
            color={0,0,0},
            smooth=Smooth.None)}));
    end Land;
  end Testing_Blocks;

  partial package Icons
  extends Modelica.Icons.Package;

    partial model Component_Assembly_200x200

      annotation (Icon(coordinateSystem(preserveAspectRatio=true,  extent={{-200,
                -200},{200,200}}), graphics={
                                 Polygon(
              points={{-240,200},{-240,240},{-200,240},{-240,200}},
              smooth=Smooth.None,
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              lineColor={0,127,0}),      Polygon(
              points={{-30,-30},{-30,10},{10,10},{-30,-30}},
              smooth=Smooth.None,
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              origin={210,-230},
              rotation=180,
              lineColor={0,127,0}),
            Rectangle(
              extent={{-240,300},{240,252}},
              lineColor={0,127,0},
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid),
            Text(
              extent={{-240,290},{242,262}},
              lineColor={255,255,255},
              textString="%name",
              fontName="Comic Sans MS",
              textStyle={TextStyle.Bold}),
                                    Rectangle(extent={{-200,200},{200,-200}},
                lineColor={0,0,0},
              fillColor={250,250,255},
              fillPattern=FillPattern.Solid)}), Diagram(coordinateSystem(
              preserveAspectRatio=true,  extent={{-200,-200},{200,200}})));
    end Component_Assembly_200x200;

    partial model Component_Assembly_300x300

      annotation (Icon(coordinateSystem(preserveAspectRatio=true,  extent={{-300,
                -300},{300,300}}), graphics={
                                 Polygon(
              points={{-340,300},{-340,340},{-300,340},{-340,300}},
              smooth=Smooth.None,
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              lineColor={0,127,0}),      Polygon(
              points={{-30,-30},{-30,10},{10,10},{-30,-30}},
              smooth=Smooth.None,
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              origin={310,-330},
              rotation=180,
              lineColor={0,127,0}),
            Rectangle(
              extent={{-340,400},{340,358}},
              lineColor={0,127,0},
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid),
            Text(
              extent={{-340,394},{340,364}},
              lineColor={255,255,255},
              textString="%name",
              fontName="Comic Sans MS",
              textStyle={TextStyle.Bold}),
                                    Rectangle(extent={{-300,302},{300,-302}},
                lineColor={0,0,0},
              fillColor={250,250,255},
              fillPattern=FillPattern.Solid)}), Diagram(coordinateSystem(
              preserveAspectRatio=true,  extent={{-300,-300},{300,300}})));
    end Component_Assembly_300x300;

    partial model Component_Assembly_400x300

      annotation (Icon(coordinateSystem(preserveAspectRatio=true,  extent={{-400,
                -300},{400,300}}), graphics={
                                 Polygon(
              points={{-440,302},{-440,342},{-400,342},{-440,302}},
              smooth=Smooth.None,
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              lineColor={0,127,0}),      Polygon(
              points={{-30,-30},{-30,10},{10,10},{-30,-30}},
              smooth=Smooth.None,
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              origin={410,-328},
              rotation=180,
              lineColor={0,127,0}),
            Rectangle(
              extent={{-440,400},{442,356}},
              lineColor={0,127,0},
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid),
            Text(
              extent={{-340,394},{340,364}},
              lineColor={255,255,255},
              textString="%name",
              fontName="Comic Sans MS",
              textStyle={TextStyle.Bold}),
                                    Rectangle(extent={{-400,302},{400,-300}},
                lineColor={0,0,0},
              fillColor={250,250,255},
              fillPattern=FillPattern.Solid)}), Diagram(coordinateSystem(
              preserveAspectRatio=true,  extent={{-400,-300},{400,300}})));
    end Component_Assembly_400x300;

    partial model Component_Assembly_400x400

      annotation (Icon(coordinateSystem(preserveAspectRatio=true,  extent={{-400,
                -400},{400,400}}), graphics={
                                 Polygon(
              points={{-440,400},{-440,440},{-400,440},{-440,400}},
              smooth=Smooth.None,
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              lineColor={0,127,0}),      Polygon(
              points={{-30,-30},{-30,10},{10,10},{-30,-30}},
              smooth=Smooth.None,
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              origin={410,-428},
              rotation=180,
              lineColor={0,127,0}),
            Rectangle(
              extent={{-440,500},{442,450}},
              lineColor={0,127,0},
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid),
            Text(
              extent={{-440,500},{442,452}},
              lineColor={255,255,255},
              textString="%name",
              fontName="Comic Sans MS",
              textStyle={TextStyle.Bold}),
                                    Rectangle(extent={{-400,402},{402,-400}},
                lineColor={0,0,0},
              fillColor={250,250,255},
              fillPattern=FillPattern.Solid)}), Diagram(coordinateSystem(
              preserveAspectRatio=true,  extent={{-400,-400},{400,400}})));
    end Component_Assembly_400x400;

    partial model Component_Assembly_500x300

      annotation (Icon(coordinateSystem(preserveAspectRatio=true,  extent={{-500,
                -300},{500,300}}), graphics={
                                 Polygon(
              points={{-540,300},{-540,340},{-500,340},{-540,300}},
              smooth=Smooth.None,
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              lineColor={0,127,0}),      Polygon(
              points={{-30,-30},{-30,10},{10,10},{-30,-30}},
              smooth=Smooth.None,
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              origin={512,-328},
              rotation=180,
              lineColor={0,127,0}),
            Rectangle(
              extent={{-540,400},{540,352}},
              lineColor={0,127,0},
              fillColor={0,127,0},
              fillPattern=FillPattern.Solid),
            Text(
              extent={{-540,400},{540,358}},
              lineColor={255,255,255},
              textString="%name",
              fontName="Comic Sans MS",
              textStyle={TextStyle.Bold}),
                                    Rectangle(extent={{-500,300},{500,-300}},
                lineColor={0,0,0},
              fillColor={250,250,255},
              fillPattern=FillPattern.Solid)}), Diagram(coordinateSystem(
              preserveAspectRatio=true,  extent={{-500,-300},{500,300}})));
    end Component_Assembly_500x300;

    partial model Test_Component_200x200

      annotation (Icon(coordinateSystem(preserveAspectRatio=true,  extent={{-200,
                -200},{200,200}}), graphics={
                                 Polygon(
              points={{-240,200},{-240,240},{-200,240},{-240,200}},
              smooth=Smooth.None,
              fillColor={213,170,255},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              lineColor={213,170,255}),  Polygon(
              points={{-30,-30},{-30,10},{10,10},{-30,-30}},
              smooth=Smooth.None,
              fillColor={213,170,255},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None,
              origin={210,-230},
              rotation=180,
              lineColor={213,170,255}),
            Rectangle(
              extent={{-240,300},{240,252}},
              lineColor={213,170,255},
              fillColor={213,170,255},
              fillPattern=FillPattern.Solid),
            Text(
              extent={{-240,290},{242,262}},
              lineColor={255,255,255},
              textString="%name",
              fontName="Comic Sans MS",
              textStyle={TextStyle.Bold}),
                                    Rectangle(extent={{-200,200},{200,-200}},
                lineColor={0,0,0},
              fillColor={250,250,255},
              fillPattern=FillPattern.Solid)}), Diagram(coordinateSystem(
              preserveAspectRatio=true,  extent={{-200,-200},{200,200}})));
    end Test_Component_200x200;

    model Simple_Test_Case_200x200
    "Icon for a simple test case (not a full Test_Bench)"

      annotation (Icon(coordinateSystem(preserveAspectRatio=true, extent={{-200,
                -200},{200,200}}),
                       graphics={Bitmap(extent={{-200,200},{200,-200}}, fileName=
                  "modelica://C2M2L_Ext/Resources/Interfaces/tick.png")}), Diagram(
            coordinateSystem(preserveAspectRatio=true, extent={{-200,-200},{200,200}})));
    end Simple_Test_Case_200x200;

    model Simple_Test_Case_300x300
    "Icon for a simple test case (not a full Test_Bench)"

      annotation (Icon(coordinateSystem(preserveAspectRatio=true, extent={{-300,
                -300},{300,300}}),
                       graphics={Bitmap(extent={{-300,300},{300,-302}}, fileName=
                  "modelica://C2M2L_Ext/Resources/Interfaces/tick.png")}), Diagram(
            coordinateSystem(preserveAspectRatio=true, extent={{-300,-300},{300,300}})));
    end Simple_Test_Case_300x300;

    model Simple_Test_Case_400x400
    "Icon for a simple test case (not a full Test_Bench)"

      annotation (Icon(coordinateSystem(preserveAspectRatio=true, extent={{-400,
                -400},{400,400}}),
                       graphics={Bitmap(extent={{-300,300},{300,-302}}, fileName=
                  "modelica://C2M2L_Ext/Resources/Interfaces/tick.png")}), Diagram(
            coordinateSystem(preserveAspectRatio=true, extent={{-400,-400},{400,400}})));
    end Simple_Test_Case_400x400;

    model Simple_Test_Case_500x400
    "Icon for a simple test case (not a full Test_Bench)"

      annotation (Icon(coordinateSystem(preserveAspectRatio=true, extent={{-500,
                -400},{500,400}}),
                       graphics={Bitmap(extent={{-300,300},{300,-302}}, fileName=
                  "modelica://C2M2L_Ext/Resources/Interfaces/tick.png")}), Diagram(
            coordinateSystem(preserveAspectRatio=true, extent={{-500,-400},{500,400}})));
    end Simple_Test_Case_500x400;
  end Icons;

  package Sandbox "Contains models that may or may not work."
    extends C2M2L_Ext.Icons.Sandbox_Package;

  end Sandbox;

annotation (uses(Modelica(version="3.2"), C2M2L_Ext, C2M2L_OM));
end C2M2L_CyPhy;
